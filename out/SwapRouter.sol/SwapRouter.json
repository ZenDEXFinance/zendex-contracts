{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_deployer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WETH9",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "WETH9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "path",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMinimum",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISwapRouter.ExactInputParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "exactInput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMinimum",
              "type": "uint256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            }
          ],
          "internalType": "struct ISwapRouter.ExactInputSingleParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "exactInputSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "path",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountInMaximum",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISwapRouter.ExactOutputParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "exactOutput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountInMaximum",
              "type": "uint256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            }
          ],
          "internalType": "struct ISwapRouter.ExactOutputSingleParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "exactOutputSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "amount0Delta",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "amount1Delta",
          "type": "int256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "pancakeV3SwapCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refundETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermitAllowed",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermitAllowedIfNecessary",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermitIfNecessary",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "sweepToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "feeBips",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "feeRecipient",
          "type": "address"
        }
      ],
      "name": "sweepTokenWithFee",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "unwrapWETH9",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "feeBips",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "feeRecipient",
          "type": "address"
        }
      ],
      "name": "unwrapWETH9WithFee",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60e06040526000196000553480156200001757600080fd5b506040516200280c3803806200280c8339810160408190526200003a916200007f565b6001600160601b0319606093841b811660805291831b821660a05290911b1660c052620000c8565b80516001600160a01b03811681146200007a57600080fd5b919050565b60008060006060848603121562000094578283fd5b6200009f8462000062565b9250620000af6020850162000062565b9150620000bf6040850162000062565b90509250925092565b60805160601c60a05160601c60c05160601c6126dc620001306000398061011d52806105fa52806106e5528061077252806107b2528061089d52806112f1528061133752806113ab525080610cd65250806103675280610cfa5280611d6b52506126dc6000f3fe60806040526004361061010d5760003560e01c8063c04b8d5911610095578063db3e219811610064578063db3e2198146102b1578063df2ab5bb146102c4578063e0e189a0146102d7578063f28c0498146102ea578063f3995c67146102fd5761017d565b8063c04b8d5914610261578063c2e3140a14610274578063c45a015514610287578063d5f394881461029c5761017d565b806349404b7c116100dc57806349404b7c146101e65780634aa4a4fc146101f95780639b2c0a371461021b578063a4a78f0c1461022e578063ac9650d8146102415761017d565b806312210e8a1461018257806323a69e751461018a578063414bf389146101aa5780634659a494146101d35761017d565b3661017d57336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461017b576040805162461bcd60e51b81526020600482015260096024820152684e6f7420574554483960b81b604482015290519081900360640190fd5b005b600080fd5b61017b610310565b34801561019657600080fd5b5061017b6101a53660046120de565b610322565b6101bd6101b836600461226e565b610441565b6040516101ca91906125c7565b60405180910390f35b61017b6101e1366004611fec565b610568565b61017b6101f4366004612375565b6105f6565b34801561020557600080fd5b5061020e610770565b6040516101ca9190612464565b61017b6102293660046123a4565b610794565b61017b61023c366004611fec565b610960565b61025461024f36600461204c565b6109f1565b6040516101ca91906124be565b6101bd61026f3660046121c3565b610b31565b61017b610282366004611fec565b610c45565b34801561029357600080fd5b5061020e610cd4565b3480156102a857600080fd5b5061020e610cf8565b6101bd6102bf36600461226e565b610d1c565b61017b6102d2366004611f4d565b610e43565b61017b6102e5366004611f8e565b610f21565b6101bd6102f836600461228a565b611048565b61017b61030b366004611fec565b61113e565b47156103205761032033476111b0565b565b60008413806103315750600083135b61033a57600080fd5b6000610348828401846122c2565b9050600080600061035c846000015161129f565b92509250925061038e7f00000000000000000000000000000000000000000000000000000000000000008484846112d0565b5060008060008a136103b557846001600160a01b0316846001600160a01b031610896103cc565b836001600160a01b0316856001600160a01b0316108a5b9150915081156103eb576103e685876020015133846112ef565b610435565b85516103f69061147f565b1561041b5785516104069061148b565b865261041581336000896114a8565b50610435565b8060008190555083945061043585876020015133846112ef565b50505050505050505050565b6000816080013580610451611623565b111561049a576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b61053360a08401356104b26080860160608701611f2a565b6104c3610100870160e08801611f2a565b60408051808201909152806104db60208a018a611f2a565b6104eb60608b0160408c01612352565b6104fb60408c0160208d01611f2a565b60405160200161050d93929190612419565b6040516020818303038152906040528152602001336001600160a01b0316815250611627565b91508260c001358210156105625760405162461bcd60e51b81526004016105599061255d565b60405180910390fd5b50919050565b604080516323f2ebc360e21b815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e4810183905290516001600160a01b03881691638fcbaf0c9161010480830192600092919082900301818387803b1580156105e257600080fd5b505af1158015610435573d6000803e3d6000fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561066557600080fd5b505afa158015610679573d6000803e3d6000fd5b505050506040513d602081101561068f57600080fd5b50519050828110156106dd576040805162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e7420574554483960701b604482015290519081900360640190fd5b801561076b577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561074957600080fd5b505af115801561075d573d6000803e3d6000fd5b5050505061076b82826111b0565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000821180156107a5575060648211155b6107ae57600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561081d57600080fd5b505afa158015610831573d6000803e3d6000fd5b505050506040513d602081101561084757600080fd5b5051905084811015610895576040805162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e7420574554483960701b604482015290519081900360640190fd5b8015610959577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561090157600080fd5b505af1158015610915573d6000803e3d6000fd5b505050506000612710610931858461177990919063ffffffff16565b8161093857fe5b049050801561094b5761094b83826111b0565b610957858284036111b0565b505b5050505050565b60408051636eb1769f60e11b81523360048201523060248201529051600019916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b1580156109b157600080fd5b505afa1580156109c5573d6000803e3d6000fd5b505050506040513d60208110156109db57600080fd5b5051101561095757610957868686868686610568565b60608167ffffffffffffffff81118015610a0a57600080fd5b50604051908082528060200260200182016040528015610a3e57816020015b6060815260200190600190039081610a295790505b50905060005b82811015610b2a5760008030868685818110610a5c57fe5b9050602002810190610a6e91906125d0565b604051610a7c929190612454565b600060405180830381855af49150503d8060008114610ab7576040519150601f19603f3d011682016040523d82523d6000602084013e610abc565b606091505b509150915081610b0857604481511015610ad557600080fd5b60048101905080806020019051810190610aef9190612159565b60405162461bcd60e51b8152600401610559919061251e565b80848481518110610b1557fe5b60209081029190910101525050600101610a44565b5092915050565b6000816040015180610b41611623565b1115610b8a576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b335b6000610b9b856000015161147f565b9050610be7856060015182610bb4578660200151610bb6565b305b60006040518060400160405280610bd08b6000015161179d565b8152602001876001600160a01b0316815250611627565b60608601528015610c07578451309250610c009061148b565b8552610c14565b8460600151935050610c1a565b50610b8c565b8360800151831015610c3e5760405162461bcd60e51b81526004016105599061255d565b5050919050565b60408051636eb1769f60e11b8152336004820152306024820152905186916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b158015610c9457600080fd5b505afa158015610ca8573d6000803e3d6000fd5b505050506040513d6020811015610cbe57600080fd5b505110156109575761095786868686868661113e565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000816080013580610d2c611623565b1115610d75576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b610e1160a0840135610d8d6080860160608701611f2a565b610d9e610100870160e08801611f2a565b6040518060400160405280886020016020810190610dbc9190611f2a565b610dcc60608b0160408c01612352565b610dd960208c018c611f2a565b604051602001610deb93929190612419565b6040516020818303038152906040528152602001336001600160a01b03168152506114a8565b91508260c00135821115610e375760405162461bcd60e51b815260040161055990612531565b50600019600055919050565b6000836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610e9257600080fd5b505afa158015610ea6573d6000803e3d6000fd5b505050506040513d6020811015610ebc57600080fd5b5051905082811015610f0a576040805162461bcd60e51b815260206004820152601260248201527124b739bab33334b1b4b2b73a103a37b5b2b760711b604482015290519081900360640190fd5b8015610f1b57610f1b8483836117ac565b50505050565b600082118015610f32575060648211155b610f3b57600080fd5b6000856001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610f8a57600080fd5b505afa158015610f9e573d6000803e3d6000fd5b505050506040513d6020811015610fb457600080fd5b5051905084811015611002576040805162461bcd60e51b815260206004820152601260248201527124b739bab33334b1b4b2b73a103a37b5b2b760711b604482015290519081900360640190fd5b80156109575760006127106110178386611779565b8161101e57fe5b0490508015611032576110328784836117ac565b61103f87868385036117ac565b50505050505050565b6000816040013580611058611623565b11156110a1576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b61111460608401356110b96040860160208701611f2a565b60408051808201909152600090806110d189806125d0565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250336020909101526114a8565b5060005491508260800135821115610e375760405162461bcd60e51b815260040161055990612531565b6040805163d505accf60e01b8152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c4810183905290516001600160a01b0388169163d505accf9160e480830192600092919082900301818387803b1580156105e257600080fd5b604080516000808252602082019092526001600160a01b0384169083906040518082805190602001908083835b602083106111fc5780518252601f1990920191602091820191016111dd565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461125e576040519150601f19603f3d011682016040523d82523d6000602084013e611263565b606091505b505090508061076b576040805162461bcd60e51b815260206004820152600360248201526253544560e81b604482015290519081900360640190fd5b600080806112ad84826118f3565b92506112ba8460146119a3565b90506112c78460176118f3565b91509193909250565b60006112e6856112e1868686611a4a565b611aa0565b95945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b03161480156113305750804710155b15611452577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561139057600080fd5b505af11580156113a4573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561142057600080fd5b505af1158015611434573d6000803e3d6000fd5b505050506040513d602081101561144a57600080fd5b50610f1b9050565b6001600160a01b0383163014156114735761146e8483836117ac565b610f1b565b610f1b84848484611ac3565b8051604211155b919050565b80516060906114a290839060179060161901611c13565b92915050565b60006001600160a01b0384166114bc573093505b60008060006114ce856000015161129f565b919450925090506001600160a01b03808416908316106000806114f2858786611d64565b6001600160a01b031663128acb088b8561150b8f611da2565b6000036001600160a01b038e1615611523578d611549565b876115425773fffd8963efd1fc6a506488495d951d5263988d25611549565b6401000276a45b8d60405160200161155a919061258a565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401611589959493929190612478565b6040805180830381600087803b1580156115a257600080fd5b505af11580156115b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115da91906120bb565b915091506000836115ef5781836000036115f5565b82826000035b90985090506001600160a01b038a16611614578b811461161457600080fd5b50505050505050949350505050565b4290565b60006001600160a01b03841661163b573093505b600080600061164d856000015161129f565b919450925090506001600160a01b0380831690841610600080611671868686611d64565b6001600160a01b031663128acb088b8561168a8f611da2565b6001600160a01b038e161561169f578d6116c5565b876116be5773fffd8963efd1fc6a506488495d951d5263988d256116c5565b6401000276a45b8d6040516020016116d6919061258a565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401611705959493929190612478565b6040805180830381600087803b15801561171e57600080fd5b505af1158015611732573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175691906120bb565b91509150826117655781611767565b805b6000039b9a5050505050505050505050565b60008215806117945750508181028183828161179157fe5b04145b6114a257600080fd5b60606114a2826000602b611c13565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009485949389169392918291908083835b602083106118285780518252601f199092019160209182019101611809565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461188a576040519150601f19603f3d011682016040523d82523d6000602084013e61188f565b606091505b50915091508180156118bd5750805115806118bd57508080602001905160208110156118ba57600080fd5b50515b610959576040805162461bcd60e51b815260206004820152600260248201526114d560f21b604482015290519081900360640190fd5b600081826014011015611942576040805162461bcd60e51b8152602060048201526012602482015271746f416464726573735f6f766572666c6f7760701b604482015290519081900360640190fd5b8160140183511015611993576040805162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b604482015290519081900360640190fd5b500160200151600160601b900490565b6000818260030110156119f1576040805162461bcd60e51b8152602060048201526011602482015270746f55696e7432345f6f766572666c6f7760781b604482015290519081900360640190fd5b8160030183511015611a41576040805162461bcd60e51b8152602060048201526014602482015273746f55696e7432345f6f75744f66426f756e647360601b604482015290519081900360640190fd5b50016003015190565b611a52611e9c565b826001600160a01b0316846001600160a01b03161115611a70579192915b50604080516060810182526001600160a01b03948516815292909316602083015262ffffff169181019190915290565b6000611aac8383611db8565b9050336001600160a01b038216146114a257600080fd5b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b178152925182516000948594938a169392918291908083835b60208310611b475780518252601f199092019160209182019101611b28565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611ba9576040519150601f19603f3d011682016040523d82523d6000602084013e611bae565b606091505b5091509150818015611bdc575080511580611bdc5750808060200190516020811015611bd957600080fd5b50515b610957576040805162461bcd60e51b815260206004820152600360248201526229aa2360e91b604482015290519081900360640190fd5b60608182601f011015611c5e576040805162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015290519081900360640190fd5b828284011015611ca6576040805162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015290519081900360640190fd5b81830184511015611cf2576040805162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b604482015290519081900360640190fd5b606082158015611d115760405191506000825260208201604052611d5b565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611d4a578051835260209283019201611d32565b5050858452601f01601f1916604052505b50949350505050565b6000611d9a7f0000000000000000000000000000000000000000000000000000000000000000611d95868686611a4a565b611db8565b949350505050565b6000600160ff1b8210611db457600080fd5b5090565b600081602001516001600160a01b031682600001516001600160a01b031610611de057600080fd5b50805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301206001600160f81b031960a085015294901b6bffffffffffffffffffffffff191660a183015260b58201939093527f5d227b1224d702ed5c29b93295d4c56c96d9ba453960e291d2fc046c48fe5c7260d5808301919091528251808303909101815260f5909101909152805191012090565b604080516060810182526000808252602082018190529181019190915290565b80356114868161268e565b600082601f830112611ed7578081fd5b8135611eea611ee582612640565b61261c565b818152846020838601011115611efe578283fd5b816020850160208301379081016020019190915292915050565b60006101008284031215610562578081fd5b600060208284031215611f3b578081fd5b8135611f468161268e565b9392505050565b600080600060608486031215611f61578182fd5b8335611f6c8161268e565b9250602084013591506040840135611f838161268e565b809150509250925092565b600080600080600060a08688031215611fa5578081fd5b8535611fb08161268e565b9450602086013593506040860135611fc78161268e565b9250606086013591506080860135611fde8161268e565b809150509295509295909350565b60008060008060008060c08789031215612004578081fd5b863561200f8161268e565b95506020870135945060408701359350606087013560ff81168114612032578182fd5b9598949750929560808101359460a0909101359350915050565b6000806020838503121561205e578182fd5b823567ffffffffffffffff80821115612075578384fd5b818501915085601f830112612088578384fd5b813581811115612096578485fd5b86602080830285010111156120a9578485fd5b60209290920196919550909350505050565b600080604083850312156120cd578182fd5b505080516020909101519092909150565b600080600080606085870312156120f3578182fd5b8435935060208501359250604085013567ffffffffffffffff80821115612118578384fd5b818701915087601f83011261212b578384fd5b813581811115612139578485fd5b88602082850101111561214a578485fd5b95989497505060200194505050565b60006020828403121561216a578081fd5b815167ffffffffffffffff811115612180578182fd5b8201601f81018413612190578182fd5b805161219e611ee582612640565b8181528560208385010111156121b2578384fd5b6112e6826020830160208601612662565b6000602082840312156121d4578081fd5b813567ffffffffffffffff808211156121eb578283fd5b9083019060a082860312156121fe578283fd5b60405160a08101818110838211171561221357fe5b604052823582811115612224578485fd5b61223087828601611ec7565b82525061223f60208401611ebc565b602082015260408301356040820152606083013560608201526080830135608082015280935050505092915050565b60006101008284031215612280578081fd5b611f468383611f18565b60006020828403121561229b578081fd5b813567ffffffffffffffff8111156122b1578182fd5b820160a08185031215611f46578182fd5b6000602082840312156122d3578081fd5b813567ffffffffffffffff808211156122ea578283fd5b90830190604082860312156122fd578283fd5b60405160408101818110838211171561231257fe5b604052823582811115612323578485fd5b61232f87828601611ec7565b825250602083013592506123428361268e565b6020810192909252509392505050565b600060208284031215612363578081fd5b813562ffffff81168114611f46578182fd5b60008060408385031215612387578182fd5b8235915060208301356123998161268e565b809150509250929050565b600080600080608085870312156123b9578182fd5b8435935060208501356123cb8161268e565b92506040850135915060608501356123e28161268e565b939692955090935050565b60008151808452612405816020860160208601612662565b601f01601f19169290920160200192915050565b606093841b6bffffffffffffffffffffffff19908116825260e89390931b6001600160e81b0319166014820152921b166017820152602b0190565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6001600160a01b0386811682528515156020830152604082018590528316606082015260a0608082018190526000906124b3908301846123ed565b979650505050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b8281101561251157603f198886030184526124ff8583516123ed565b945092850192908501906001016124e3565b5092979650505050505050565b600060208252611f4660208301846123ed565b602080825260129082015271151bdbc81b5d58da081c995c5d595cdd195960721b604082015260600190565b602080825260139082015272151bdbc81b1a5d1d1b19481c9958d95a5d9959606a1b604082015260600190565b6000602082528251604060208401526125a660608401826123ed565b602094909401516001600160a01b0316604093909301929092525090919050565b90815260200190565b6000808335601e198436030181126125e6578283fd5b83018035915067ffffffffffffffff821115612600578283fd5b60200191503681900382131561261557600080fd5b9250929050565b60405181810167ffffffffffffffff8111828210171561263857fe5b604052919050565b600067ffffffffffffffff82111561265457fe5b50601f01601f191660200190565b60005b8381101561267d578181015183820152602001612665565b83811115610f1b5750506000910152565b6001600160a01b03811681146126a357600080fd5b5056fea2646970667358221220229b0a22f4cd3af590426822fc35413a924a45f738ede930111fbe8140d7fa0464736f6c63430007060033",
    "sourceMap": "787:8372:137:-:0;;;-1:-1:-1;;1350:57:137;;1414:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;634:20:143;;;;;;;;664:18;;;;;;;692:14;;;;;;787:8372:137;;14:179:207;95:13;;-1:-1:-1;;;;;137:31:207;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:394::-;;;;355:2;343:9;334:7;330:23;326:32;323:2;;;376:6;368;361:22;323:2;404:42;436:9;404:42;:::i;:::-;394:52;;465:51;512:2;501:9;497:18;465:51;:::i;:::-;455:61;;535:51;582:2;571:9;567:18;535:51;:::i;:::-;525:61;;313:279;;;;;:::o;:::-;787:8372:137;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061010d5760003560e01c8063c04b8d5911610095578063db3e219811610064578063db3e2198146102b1578063df2ab5bb146102c4578063e0e189a0146102d7578063f28c0498146102ea578063f3995c67146102fd5761017d565b8063c04b8d5914610261578063c2e3140a14610274578063c45a015514610287578063d5f394881461029c5761017d565b806349404b7c116100dc57806349404b7c146101e65780634aa4a4fc146101f95780639b2c0a371461021b578063a4a78f0c1461022e578063ac9650d8146102415761017d565b806312210e8a1461018257806323a69e751461018a578063414bf389146101aa5780634659a494146101d35761017d565b3661017d57336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461017b576040805162461bcd60e51b81526020600482015260096024820152684e6f7420574554483960b81b604482015290519081900360640190fd5b005b600080fd5b61017b610310565b34801561019657600080fd5b5061017b6101a53660046120de565b610322565b6101bd6101b836600461226e565b610441565b6040516101ca91906125c7565b60405180910390f35b61017b6101e1366004611fec565b610568565b61017b6101f4366004612375565b6105f6565b34801561020557600080fd5b5061020e610770565b6040516101ca9190612464565b61017b6102293660046123a4565b610794565b61017b61023c366004611fec565b610960565b61025461024f36600461204c565b6109f1565b6040516101ca91906124be565b6101bd61026f3660046121c3565b610b31565b61017b610282366004611fec565b610c45565b34801561029357600080fd5b5061020e610cd4565b3480156102a857600080fd5b5061020e610cf8565b6101bd6102bf36600461226e565b610d1c565b61017b6102d2366004611f4d565b610e43565b61017b6102e5366004611f8e565b610f21565b6101bd6102f836600461228a565b611048565b61017b61030b366004611fec565b61113e565b47156103205761032033476111b0565b565b60008413806103315750600083135b61033a57600080fd5b6000610348828401846122c2565b9050600080600061035c846000015161129f565b92509250925061038e7f00000000000000000000000000000000000000000000000000000000000000008484846112d0565b5060008060008a136103b557846001600160a01b0316846001600160a01b031610896103cc565b836001600160a01b0316856001600160a01b0316108a5b9150915081156103eb576103e685876020015133846112ef565b610435565b85516103f69061147f565b1561041b5785516104069061148b565b865261041581336000896114a8565b50610435565b8060008190555083945061043585876020015133846112ef565b50505050505050505050565b6000816080013580610451611623565b111561049a576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b61053360a08401356104b26080860160608701611f2a565b6104c3610100870160e08801611f2a565b60408051808201909152806104db60208a018a611f2a565b6104eb60608b0160408c01612352565b6104fb60408c0160208d01611f2a565b60405160200161050d93929190612419565b6040516020818303038152906040528152602001336001600160a01b0316815250611627565b91508260c001358210156105625760405162461bcd60e51b81526004016105599061255d565b60405180910390fd5b50919050565b604080516323f2ebc360e21b815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e4810183905290516001600160a01b03881691638fcbaf0c9161010480830192600092919082900301818387803b1580156105e257600080fd5b505af1158015610435573d6000803e3d6000fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561066557600080fd5b505afa158015610679573d6000803e3d6000fd5b505050506040513d602081101561068f57600080fd5b50519050828110156106dd576040805162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e7420574554483960701b604482015290519081900360640190fd5b801561076b577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561074957600080fd5b505af115801561075d573d6000803e3d6000fd5b5050505061076b82826111b0565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000821180156107a5575060648211155b6107ae57600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561081d57600080fd5b505afa158015610831573d6000803e3d6000fd5b505050506040513d602081101561084757600080fd5b5051905084811015610895576040805162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e7420574554483960701b604482015290519081900360640190fd5b8015610959577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561090157600080fd5b505af1158015610915573d6000803e3d6000fd5b505050506000612710610931858461177990919063ffffffff16565b8161093857fe5b049050801561094b5761094b83826111b0565b610957858284036111b0565b505b5050505050565b60408051636eb1769f60e11b81523360048201523060248201529051600019916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b1580156109b157600080fd5b505afa1580156109c5573d6000803e3d6000fd5b505050506040513d60208110156109db57600080fd5b5051101561095757610957868686868686610568565b60608167ffffffffffffffff81118015610a0a57600080fd5b50604051908082528060200260200182016040528015610a3e57816020015b6060815260200190600190039081610a295790505b50905060005b82811015610b2a5760008030868685818110610a5c57fe5b9050602002810190610a6e91906125d0565b604051610a7c929190612454565b600060405180830381855af49150503d8060008114610ab7576040519150601f19603f3d011682016040523d82523d6000602084013e610abc565b606091505b509150915081610b0857604481511015610ad557600080fd5b60048101905080806020019051810190610aef9190612159565b60405162461bcd60e51b8152600401610559919061251e565b80848481518110610b1557fe5b60209081029190910101525050600101610a44565b5092915050565b6000816040015180610b41611623565b1115610b8a576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b335b6000610b9b856000015161147f565b9050610be7856060015182610bb4578660200151610bb6565b305b60006040518060400160405280610bd08b6000015161179d565b8152602001876001600160a01b0316815250611627565b60608601528015610c07578451309250610c009061148b565b8552610c14565b8460600151935050610c1a565b50610b8c565b8360800151831015610c3e5760405162461bcd60e51b81526004016105599061255d565b5050919050565b60408051636eb1769f60e11b8152336004820152306024820152905186916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b158015610c9457600080fd5b505afa158015610ca8573d6000803e3d6000fd5b505050506040513d6020811015610cbe57600080fd5b505110156109575761095786868686868661113e565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000816080013580610d2c611623565b1115610d75576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b610e1160a0840135610d8d6080860160608701611f2a565b610d9e610100870160e08801611f2a565b6040518060400160405280886020016020810190610dbc9190611f2a565b610dcc60608b0160408c01612352565b610dd960208c018c611f2a565b604051602001610deb93929190612419565b6040516020818303038152906040528152602001336001600160a01b03168152506114a8565b91508260c00135821115610e375760405162461bcd60e51b815260040161055990612531565b50600019600055919050565b6000836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610e9257600080fd5b505afa158015610ea6573d6000803e3d6000fd5b505050506040513d6020811015610ebc57600080fd5b5051905082811015610f0a576040805162461bcd60e51b815260206004820152601260248201527124b739bab33334b1b4b2b73a103a37b5b2b760711b604482015290519081900360640190fd5b8015610f1b57610f1b8483836117ac565b50505050565b600082118015610f32575060648211155b610f3b57600080fd5b6000856001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610f8a57600080fd5b505afa158015610f9e573d6000803e3d6000fd5b505050506040513d6020811015610fb457600080fd5b5051905084811015611002576040805162461bcd60e51b815260206004820152601260248201527124b739bab33334b1b4b2b73a103a37b5b2b760711b604482015290519081900360640190fd5b80156109575760006127106110178386611779565b8161101e57fe5b0490508015611032576110328784836117ac565b61103f87868385036117ac565b50505050505050565b6000816040013580611058611623565b11156110a1576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b61111460608401356110b96040860160208701611f2a565b60408051808201909152600090806110d189806125d0565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250336020909101526114a8565b5060005491508260800135821115610e375760405162461bcd60e51b815260040161055990612531565b6040805163d505accf60e01b8152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c4810183905290516001600160a01b0388169163d505accf9160e480830192600092919082900301818387803b1580156105e257600080fd5b604080516000808252602082019092526001600160a01b0384169083906040518082805190602001908083835b602083106111fc5780518252601f1990920191602091820191016111dd565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461125e576040519150601f19603f3d011682016040523d82523d6000602084013e611263565b606091505b505090508061076b576040805162461bcd60e51b815260206004820152600360248201526253544560e81b604482015290519081900360640190fd5b600080806112ad84826118f3565b92506112ba8460146119a3565b90506112c78460176118f3565b91509193909250565b60006112e6856112e1868686611a4a565b611aa0565b95945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b03161480156113305750804710155b15611452577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561139057600080fd5b505af11580156113a4573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561142057600080fd5b505af1158015611434573d6000803e3d6000fd5b505050506040513d602081101561144a57600080fd5b50610f1b9050565b6001600160a01b0383163014156114735761146e8483836117ac565b610f1b565b610f1b84848484611ac3565b8051604211155b919050565b80516060906114a290839060179060161901611c13565b92915050565b60006001600160a01b0384166114bc573093505b60008060006114ce856000015161129f565b919450925090506001600160a01b03808416908316106000806114f2858786611d64565b6001600160a01b031663128acb088b8561150b8f611da2565b6000036001600160a01b038e1615611523578d611549565b876115425773fffd8963efd1fc6a506488495d951d5263988d25611549565b6401000276a45b8d60405160200161155a919061258a565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401611589959493929190612478565b6040805180830381600087803b1580156115a257600080fd5b505af11580156115b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115da91906120bb565b915091506000836115ef5781836000036115f5565b82826000035b90985090506001600160a01b038a16611614578b811461161457600080fd5b50505050505050949350505050565b4290565b60006001600160a01b03841661163b573093505b600080600061164d856000015161129f565b919450925090506001600160a01b0380831690841610600080611671868686611d64565b6001600160a01b031663128acb088b8561168a8f611da2565b6001600160a01b038e161561169f578d6116c5565b876116be5773fffd8963efd1fc6a506488495d951d5263988d256116c5565b6401000276a45b8d6040516020016116d6919061258a565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401611705959493929190612478565b6040805180830381600087803b15801561171e57600080fd5b505af1158015611732573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175691906120bb565b91509150826117655781611767565b805b6000039b9a5050505050505050505050565b60008215806117945750508181028183828161179157fe5b04145b6114a257600080fd5b60606114a2826000602b611c13565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009485949389169392918291908083835b602083106118285780518252601f199092019160209182019101611809565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461188a576040519150601f19603f3d011682016040523d82523d6000602084013e61188f565b606091505b50915091508180156118bd5750805115806118bd57508080602001905160208110156118ba57600080fd5b50515b610959576040805162461bcd60e51b815260206004820152600260248201526114d560f21b604482015290519081900360640190fd5b600081826014011015611942576040805162461bcd60e51b8152602060048201526012602482015271746f416464726573735f6f766572666c6f7760701b604482015290519081900360640190fd5b8160140183511015611993576040805162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b604482015290519081900360640190fd5b500160200151600160601b900490565b6000818260030110156119f1576040805162461bcd60e51b8152602060048201526011602482015270746f55696e7432345f6f766572666c6f7760781b604482015290519081900360640190fd5b8160030183511015611a41576040805162461bcd60e51b8152602060048201526014602482015273746f55696e7432345f6f75744f66426f756e647360601b604482015290519081900360640190fd5b50016003015190565b611a52611e9c565b826001600160a01b0316846001600160a01b03161115611a70579192915b50604080516060810182526001600160a01b03948516815292909316602083015262ffffff169181019190915290565b6000611aac8383611db8565b9050336001600160a01b038216146114a257600080fd5b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b178152925182516000948594938a169392918291908083835b60208310611b475780518252601f199092019160209182019101611b28565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611ba9576040519150601f19603f3d011682016040523d82523d6000602084013e611bae565b606091505b5091509150818015611bdc575080511580611bdc5750808060200190516020811015611bd957600080fd5b50515b610957576040805162461bcd60e51b815260206004820152600360248201526229aa2360e91b604482015290519081900360640190fd5b60608182601f011015611c5e576040805162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015290519081900360640190fd5b828284011015611ca6576040805162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015290519081900360640190fd5b81830184511015611cf2576040805162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b604482015290519081900360640190fd5b606082158015611d115760405191506000825260208201604052611d5b565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611d4a578051835260209283019201611d32565b5050858452601f01601f1916604052505b50949350505050565b6000611d9a7f0000000000000000000000000000000000000000000000000000000000000000611d95868686611a4a565b611db8565b949350505050565b6000600160ff1b8210611db457600080fd5b5090565b600081602001516001600160a01b031682600001516001600160a01b031610611de057600080fd5b50805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301206001600160f81b031960a085015294901b6bffffffffffffffffffffffff191660a183015260b58201939093527f5d227b1224d702ed5c29b93295d4c56c96d9ba453960e291d2fc046c48fe5c7260d5808301919091528251808303909101815260f5909101909152805191012090565b604080516060810182526000808252602082018190529181019190915290565b80356114868161268e565b600082601f830112611ed7578081fd5b8135611eea611ee582612640565b61261c565b818152846020838601011115611efe578283fd5b816020850160208301379081016020019190915292915050565b60006101008284031215610562578081fd5b600060208284031215611f3b578081fd5b8135611f468161268e565b9392505050565b600080600060608486031215611f61578182fd5b8335611f6c8161268e565b9250602084013591506040840135611f838161268e565b809150509250925092565b600080600080600060a08688031215611fa5578081fd5b8535611fb08161268e565b9450602086013593506040860135611fc78161268e565b9250606086013591506080860135611fde8161268e565b809150509295509295909350565b60008060008060008060c08789031215612004578081fd5b863561200f8161268e565b95506020870135945060408701359350606087013560ff81168114612032578182fd5b9598949750929560808101359460a0909101359350915050565b6000806020838503121561205e578182fd5b823567ffffffffffffffff80821115612075578384fd5b818501915085601f830112612088578384fd5b813581811115612096578485fd5b86602080830285010111156120a9578485fd5b60209290920196919550909350505050565b600080604083850312156120cd578182fd5b505080516020909101519092909150565b600080600080606085870312156120f3578182fd5b8435935060208501359250604085013567ffffffffffffffff80821115612118578384fd5b818701915087601f83011261212b578384fd5b813581811115612139578485fd5b88602082850101111561214a578485fd5b95989497505060200194505050565b60006020828403121561216a578081fd5b815167ffffffffffffffff811115612180578182fd5b8201601f81018413612190578182fd5b805161219e611ee582612640565b8181528560208385010111156121b2578384fd5b6112e6826020830160208601612662565b6000602082840312156121d4578081fd5b813567ffffffffffffffff808211156121eb578283fd5b9083019060a082860312156121fe578283fd5b60405160a08101818110838211171561221357fe5b604052823582811115612224578485fd5b61223087828601611ec7565b82525061223f60208401611ebc565b602082015260408301356040820152606083013560608201526080830135608082015280935050505092915050565b60006101008284031215612280578081fd5b611f468383611f18565b60006020828403121561229b578081fd5b813567ffffffffffffffff8111156122b1578182fd5b820160a08185031215611f46578182fd5b6000602082840312156122d3578081fd5b813567ffffffffffffffff808211156122ea578283fd5b90830190604082860312156122fd578283fd5b60405160408101818110838211171561231257fe5b604052823582811115612323578485fd5b61232f87828601611ec7565b825250602083013592506123428361268e565b6020810192909252509392505050565b600060208284031215612363578081fd5b813562ffffff81168114611f46578182fd5b60008060408385031215612387578182fd5b8235915060208301356123998161268e565b809150509250929050565b600080600080608085870312156123b9578182fd5b8435935060208501356123cb8161268e565b92506040850135915060608501356123e28161268e565b939692955090935050565b60008151808452612405816020860160208601612662565b601f01601f19169290920160200192915050565b606093841b6bffffffffffffffffffffffff19908116825260e89390931b6001600160e81b0319166014820152921b166017820152602b0190565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6001600160a01b0386811682528515156020830152604082018590528316606082015260a0608082018190526000906124b3908301846123ed565b979650505050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b8281101561251157603f198886030184526124ff8583516123ed565b945092850192908501906001016124e3565b5092979650505050505050565b600060208252611f4660208301846123ed565b602080825260129082015271151bdbc81b5d58da081c995c5d595cdd195960721b604082015260600190565b602080825260139082015272151bdbc81b1a5d1d1b19481c9958d95a5d9959606a1b604082015260600190565b6000602082528251604060208401526125a660608401826123ed565b602094909401516001600160a01b0316604093909301929092525090919050565b90815260200190565b6000808335601e198436030181126125e6578283fd5b83018035915067ffffffffffffffff821115612600578283fd5b60200191503681900382131561261557600080fd5b9250929050565b60405181810167ffffffffffffffff8111828210171561263857fe5b604052919050565b600067ffffffffffffffff82111561265457fe5b50601f01601f191660200190565b60005b8381101561267d578181015183820152602001612665565b83811115610f1b5750506000910152565b6001600160a01b03811681146126a357600080fd5b5056fea2646970667358221220229b0a22f4cd3af590426822fc35413a924a45f738ede930111fbe8140d7fa0464736f6c63430007060033",
    "sourceMap": "787:8372:137:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;485:10:144;-1:-1:-1;;;;;499:5:144;485:19;;477:41;;;;;-1:-1:-1;;;477:41:144;;;;;;;;;;;;-1:-1:-1;;;477:41:144;;;;;;;;;;;;;;;787:8372:137;;;;;1422:160:144;;;:::i;2023:1295:137:-;;;;;;;;;;-1:-1:-1;2023:1295:137;;;;;:::i;:::-;;:::i;4344:547::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1351:289:148;;;;;;:::i;:::-;;:::i;570:397:144:-;;;;;;:::i;:::-;;:::i;513:39:143:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;603:698:145:-;;;;;;:::i;:::-;;:::i;1678:348:148:-;;;;;;:::i;:::-;;:::i;308:653:142:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4929:1275:137:-;;;;;;:::i;:::-;;:::i;999:314:148:-;;;;;;:::i;:::-;;:::i;421:41:143:-;;;;;;;;;;;;;:::i;328:42::-;;;;;;;;;;;;;:::i;7631:732:137:-;;;;;;:::i;:::-;;:::i;1012:365:144:-;;;;;;:::i;:::-;;:::i;1353:678:145:-;;;;;;:::i;:::-;;:::i;8401:756:137:-;;;;;;:::i;:::-;;:::i;688:273:148:-;;;;;;:::i;:::-;;:::i;1422:160:144:-;1483:21;:25;1479:96;;1510:65;1541:10;1553:21;1510:30;:65::i;:::-;1422:160::o;2023:1295:137:-;2199:1;2184:12;:16;:36;;;;2219:1;2204:12;:16;2184:36;2176:45;;;;;;2294:28;2325:37;;;;2336:5;2325:37;:::i;:::-;2294:68;;2373:15;2390:16;2408:10;2422:27;:4;:9;;;:25;:27::i;:::-;2372:77;;;;;;2459:67;2493:8;2503:7;2512:8;2522:3;2459:33;:67::i;:::-;;2538:17;2557:19;2607:1;2592:12;:16;:140;;2701:7;-1:-1:-1;;;;;2690:18:137;:8;-1:-1:-1;;;;;2690:18:137;;2718:12;2592:140;;;2638:8;-1:-1:-1;;;;;2628:18:137;:7;-1:-1:-1;;;;;2628:18:137;;2656:12;2592:140;2537:195;;;;2746:12;2742:570;;;2774:49;2778:7;2787:4;:10;;;2799;2811:11;2774:3;:49::i;:::-;2742:570;;;2910:9;;:28;;:26;:28::i;:::-;2906:396;;;2970:9;;:21;;:19;:21::i;:::-;2958:33;;3009:53;3029:11;3042:10;2958:9;:4;3009:19;:53::i;:::-;;2906:396;;;3118:11;3101:14;:28;;;;3157:8;3147:18;;3238:49;3242:7;3251:4;:10;;;3263;3275:11;3238:3;:49::i;:::-;2023:1295;;;;;;;;;;:::o;4344:547::-;4516:17;4482:6;:15;;;244:8:146;223:17;:15;:17::i;:::-;:29;;215:61;;;;;-1:-1:-1;;;215:61:146;;;;;;;;;;;;-1:-1:-1;;;215:61:146;;;;;;;;;;;;;;;4561:245:137::1;4593:15;::::0;::::1;;4622:16;::::0;;;::::1;::::0;::::1;;:::i;:::-;4652:24;::::0;;;::::1;::::0;::::1;;:::i;:::-;4690:106;::::0;;;;::::1;::::0;;;;4731:14:::1;;::::0;::::1;:6:::0;:14:::1;:::i;:::-;4747:10;::::0;;;::::1;::::0;::::1;;:::i;:::-;4759:15;::::0;;;::::1;::::0;::::1;;:::i;:::-;4714:61;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4690:106;;;;4784:10;-1:-1:-1::0;;;;;4690:106:137::1;;;::::0;4561:18:::1;:245::i;:::-;4549:257;;4837:6;:23;;;4824:9;:36;;4816:68;;;;-1:-1:-1::0;;;4816:68:137::1;;;;;;;:::i;:::-;;;;;;;;;4344:547:::0;;;;:::o;1351:289:148:-;1543:90;;;-1:-1:-1;;;1543:90:148;;1577:10;1543:90;;;;1597:4;1543:90;;;;;;;;;;;;;;;;1619:4;1543:90;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1543:33:148;;;;;:90;;;;;-1:-1:-1;;1543:90:148;;;;;;;-1:-1:-1;1543:33:148;:90;;;;;;;;;;;;;;;;;;;;;;;;;;570:397:144;667:20;697:5;-1:-1:-1;;;;;690:23:144;;722:4;690:38;;;;;;;;;;;;;-1:-1:-1;;;;;690:38:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;690:38:144;;-1:-1:-1;746:29:144;;;;738:60;;;;;-1:-1:-1;;;738:60:144;;;;;;;;;;;;-1:-1:-1;;;738:60:144;;;;;;;;;;;;;;;813:16;;809:152;;852:5;-1:-1:-1;;;;;845:22:144;;868:12;845:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;895:55;926:9;937:12;895:30;:55::i;:::-;570:397;;;:::o;513:39:143:-;;;:::o;603:698:145:-;802:1;792:7;:11;:29;;;;;818:3;807:7;:14;;792:29;784:38;;;;;;833:20;863:5;-1:-1:-1;;;;;856:23:145;;888:4;856:38;;;;;;;;;;;;;-1:-1:-1;;;;;856:38:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;856:38:145;;-1:-1:-1;912:29:145;;;;904:60;;;;;-1:-1:-1;;;904:60:145;;;;;;;;;;;;-1:-1:-1;;;904:60:145;;;;;;;;;;;;;;;979:16;;975:320;;1018:5;-1:-1:-1;;;;;1011:22:145;;1034:12;1011:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1061:17;1109:6;1081:25;1098:7;1081:12;:16;;:25;;;;:::i;:::-;:34;;;;;;;-1:-1:-1;1133:13:145;;1129:74;;1148:55;1179:12;1193:9;1148:30;:55::i;:::-;1217:67;1248:9;1274;1259:12;:24;1217:30;:67::i;:::-;975:320;;603:698;;;;;:::o;1678:348:148:-;1887:50;;;-1:-1:-1;;;1887:50:148;;1911:10;1887:50;;;;1931:4;1887:50;;;;;;-1:-1:-1;;1940:17:148;-1:-1:-1;;;;;1887:23:148;;;;;:50;;;;;;;;;;;;;;;:23;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1887:50:148;:70;1883:136;;;1971:48;1989:5;1996;2003:6;2011:1;2014;2017;1971:17;:48::i;308:653:142:-;383:22;439:4;427:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;417:34;;466:9;461:494;481:15;;;461:494;;;518:12;;563:4;582;;587:1;582:7;;;;;;;;;;;;;;;;;;:::i;:::-;555:35;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;517:73;;;;610:7;605:306;;737:2;721:6;:13;:18;717:32;;;741:8;;;717:32;820:4;812:6;808:17;798:27;;878:6;867:28;;;;;;;;;;;;:::i;:::-;860:36;;-1:-1:-1;;;860:36:142;;;;;;;;:::i;605:306::-;938:6;925:7;933:1;925:10;;;;;;;;;;;;;;;;;:19;-1:-1:-1;;498:3:142;;461:494;;;;308:653;;;;:::o;4929:1275:137:-;5087:17;5053:6;:15;;;244:8:146;223:17;:15;:17::i;:::-;:29;;215:61;;;;;-1:-1:-1;;;215:61:146;;;;;;;;;;;;-1:-1:-1;;;215:61:146;;;;;;;;;;;;;;;5136:10:137::1;5194:925;5221:21;5245:30;:6;:11;;;:28;:30::i;:::-;5221:54;;5387:394;5423:6;:15;;;5456:16;:51;;5491:6;:16;;;5456:51;;;5483:4;5456:51;5576:1;5595:172;;;;;;;;5640:26;:6;:11;;;:24;:26::i;:::-;5595:172;;;;5743:5;-1:-1:-1::0;;;;;5595:172:137::1;;;::::0;5387:18:::1;:394::i;:::-;5369:15;::::0;::::1;:412:::0;5851:258;::::1;;;5982:11:::0;;5907:4:::1;::::0;-1:-1:-1;5982:23:137::1;::::0;:21:::1;:23::i;:::-;5968:37:::0;;5851:258:::1;;;6056:6;:15;;;6044:27;;6089:5;;;5851:258;5194:925;;;;6150:6;:23;;;6137:9;:36;;6129:68;;;;-1:-1:-1::0;;;6129:68:137::1;;;;;;;:::i;:::-;286:1:146;4929:1275:137::0;;;;:::o;999:314:148:-;1203:50;;;-1:-1:-1;;;1203:50:148;;1227:10;1203:50;;;;1247:4;1203:50;;;;;;1256:5;;-1:-1:-1;;;;;1203:23:148;;;;;:50;;;;;;;;;;;;;;;:23;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1203:50:148;:58;1199:107;;;1263:43;1274:5;1281;1288:8;1298:1;1301;1304;1263:10;:43::i;421:41:143:-;;;:::o;328:42::-;;;:::o;7631:732:137:-;7805:16;7771:6;:15;;;244:8:146;223:17;:15;:17::i;:::-;:29;;215:61;;;;;-1:-1:-1;;;215:61:146;;;;;;;;;;;;-1:-1:-1;;;215:61:146;;;;;;;;;;;;;;;7904:247:137::1;7937:16;::::0;::::1;;7967;::::0;;;::::1;::::0;::::1;;:::i;:::-;7997:24;::::0;;;::::1;::::0;::::1;;:::i;:::-;8035:106;;;;;;;;8076:6;:15;;;;;;;;;;:::i;:::-;8093:10;::::0;;;::::1;::::0;::::1;;:::i;:::-;8105:14;;::::0;::::1;:6:::0;:14:::1;:::i;:::-;8059:61;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8035:106;;;;8129:10;-1:-1:-1::0;;;;;8035:106:137::1;;;::::0;7904:19:::1;:247::i;:::-;7893:258;;8182:6;:22;;;8170:8;:34;;8162:65;;;;-1:-1:-1::0;;;8162:65:137::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;8315:14:137::1;:41:::0;7631:732;;-1:-1:-1;7631:732:137:o;1012:365:144:-;1123:20;1153:5;-1:-1:-1;;;;;1146:23:144;;1178:4;1146:38;;;;;;;;;;;;;-1:-1:-1;;;;;1146:38:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1146:38:144;;-1:-1:-1;1202:29:144;;;;1194:60;;;;;-1:-1:-1;;;1194:60:144;;;;;;;;;;;;-1:-1:-1;;;1194:60:144;;;;;;;;;;;;;;;1269:16;;1265:106;;1301:59;1329:5;1336:9;1347:12;1301:27;:59::i;:::-;1012:365;;;;:::o;1353:678:145:-;1574:1;1564:7;:11;:29;;;;;1590:3;1579:7;:14;;1564:29;1556:38;;;;;;1605:20;1635:5;-1:-1:-1;;;;;1628:23:145;;1660:4;1628:38;;;;;;;;;;;;;-1:-1:-1;;;;;1628:38:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1628:38:145;;-1:-1:-1;1684:29:145;;;;1676:60;;;;;-1:-1:-1;;;1676:60:145;;;;;;;;;;;;-1:-1:-1;;;1676:60:145;;;;;;;;;;;;;;;1751:16;;1747:278;;1783:17;1831:6;1803:25;:12;1820:7;1803:16;:25::i;:::-;:34;;;;;;;-1:-1:-1;1855:13:145;;1851:78;;1870:59;1898:5;1905:12;1919:9;1870:27;:59::i;:::-;1943:71;1971:5;1978:9;2004;1989:12;:24;1943:27;:71::i;:::-;1747:278;1353:678;;;;;;:::o;8401:756:137:-;8563:16;8529:6;:15;;;244:8:146;223:17;:15;:17::i;:::-;:29;;215:61;;;;;-1:-1:-1;;;215:61:146;;;;;;;;;;;;-1:-1:-1;;;215:61:146;;;;;;;;;;;;;;;8814:174:137::1;8847:16;::::0;::::1;;8877;::::0;;;::::1;::::0;::::1;;:::i;:::-;8922:56;::::0;;;;::::1;::::0;;;8907:1:::1;::::0;8922:56;8946:11:::1;:6:::0;;:11:::1;:::i;:::-;8922:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;8922:56:137;;;-1:-1:-1;8966:10:137::1;8922:56;::::0;;::::1;::::0;8814:19:::1;:174::i;:::-;;9010:14;;8999:25;;9054:6;:22;;;9042:8;:34;;9034:65;;;;-1:-1:-1::0;;;9034:65:137::1;;;;;;;:::i;688:273:148:-:0;875:79;;;-1:-1:-1;;;875:79:148;;902:10;875:79;;;;922:4;875:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;875:26:148;;;;;:79;;;;;-1:-1:-1;;875:79:148;;;;;;;-1:-1:-1;875:26:148;:79;;;;;;;;;;2295:165:185;2407:12;;;2367;2407;;;;;;;;;-1:-1:-1;;;;;2385:7:185;;;2400:5;;2385:35;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2385:35:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2366:54;;;2438:7;2430:23;;;;;-1:-1:-1;;;2430:23:185;;;;;;;;;;;;-1:-1:-1;;;2430:23:185;;;;;;;;;;;;;;1779:314:178;1883:14;;;1983:17;:4;1883:14;1983;:17::i;:::-;1974:26;-1:-1:-1;2016:24:178;:4;304:2;2016:13;:24::i;:::-;2010:30;-1:-1:-1;2059:27:178;:4;507:20;2059:14;:27::i;:::-;2050:36;;1779:314;;;;;:::o;701:261:171:-;848:19;886:69;901:8;911:43;934:6;942;950:3;911:22;:43::i;:::-;886:14;:69::i;:::-;879:76;701:261;-1:-1:-1;;;;;701:261:171:o;1773:661:144:-;1882:5;-1:-1:-1;;;;;1873:14:144;:5;-1:-1:-1;;;;;1873:14:144;;:48;;;;;1916:5;1891:21;:30;;1873:48;1869:559;;;1974:5;-1:-1:-1;;;;;1967:21:144;;1996:5;1967:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2060:5;-1:-1:-1;;;;;2053:22:144;;2076:9;2087:5;2053:40;;;;;;;;;;;;;-1:-1:-1;;;;;2053:40:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1869:559:144;;-1:-1:-1;1869:559:144;;-1:-1:-1;;;;;2114:22:144;;2131:4;2114:22;2110:318;;;2243:52;2271:5;2278:9;2289:5;2243:27;:52::i;:::-;2110:318;;;2354:63;2386:5;2393;2400:9;2411:5;2354:31;:63::i;992:138:178:-;1083:11;;777:24;-1:-1:-1;1083:40:178;992:138;;;;:::o;2635:149::-;2751:11;;2696:12;;2727:50;;2751:4;;507:20;;-1:-1:-1;;2751:25:178;2727:10;:50::i;:::-;2720:57;2635:149;-1:-1:-1;;2635:149:178:o;6259:1334:137:-;6438:16;-1:-1:-1;;;;;6533:23:137;;6529:54;;6578:4;6558:25;;6529:54;6595:16;6613:15;6630:10;6644:27;:4;:9;;;:25;:27::i;:::-;6594:77;;-1:-1:-1;6594:77:137;-1:-1:-1;6594:77:137;-1:-1:-1;;;;;;6700:18:137;;;;;;;6682:15;;6786:31;6594:77;;;6786:7;:31::i;:::-;-1:-1:-1;;;;;6786:36:137;;6840:9;6867:10;6896:20;:9;:18;:20::i;:::-;6895:21;;-1:-1:-1;;;;;6934:22:137;;;:157;;7074:17;6934:157;;;6980:10;:70;;7023:27;6980:70;;;6993:27;6980:70;7120:4;7109:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;6786:353;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6729:410;;;;7150:25;7217:10;:134;;7313:12;7337;7336:13;;7217:134;;;7251:12;7275;7274:13;;7217:134;7185:166;;-1:-1:-1;7185:166:137;-1:-1:-1;;;;;;7523:22:137;;7519:67;;7576:9;7555:17;:30;7547:39;;;;;;6259:1334;;;;;;;;;;;;;:::o;319:106:139:-;403:15;319:106;:::o;3372:934:137:-;3549:17;-1:-1:-1;;;;;3645:23:137;;3641:54;;3690:4;3670:25;;3641:54;3707:15;3724:16;3742:10;3756:27;:4;:9;;;:25;:27::i;:::-;3706:77;;-1:-1:-1;3706:77:137;-1:-1:-1;3706:77:137;-1:-1:-1;;;;;;3812:18:137;;;;;;;3794:15;;3888:31;3706:77;;;3888:7;:31::i;:::-;-1:-1:-1;;;;;3888:36:137;;3942:9;3969:10;3997:19;:8;:17;:19::i;:::-;-1:-1:-1;;;;;4034:22:137;;;:157;;4174:17;4034:157;;;4080:10;:70;;4123:27;4080:70;;;4093:27;4080:70;4220:4;4209:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;3888:351;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3841:398;;;;4267:10;:30;;4290:7;4267:30;;;4280:7;4267:30;4265:33;;;3372:934;-1:-1:-1;;;;;;;;;;;3372:934:137:o;986:125:88:-;1044:9;1073:6;;;:30;;-1:-1:-1;;1088:5:88;;;1102:1;1097;1088:5;1097:1;1083:15;;;;;:20;1073:30;1065:39;;;;;2319:127:178;2383:12;2414:25;:4;2425:1;618:23;2414:10;:25::i;1196:279:185:-;1326:59;;;-1:-1:-1;;;;;1326:59:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1326:59:185;-1:-1:-1;;;1326:59:185;;;1315:71;;;;1280:12;;;;1315:10;;;;1326:59;1315:71;;;1326:59;1315:71;;1326:59;1315:71;;;;;;;;;;-1:-1:-1;;1315:71:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1279:107;;;;1404:7;:57;;;;-1:-1:-1;1416:11:185;;:16;;:44;;;1447:4;1436:24;;;;;;;;;;;;;;;-1:-1:-1;1436:24:185;1416:44;1396:72;;;;;-1:-1:-1;;;1396:72:185;;;;;;;;;;;;-1:-1:-1;;;1396:72:185;;;;;;;;;;;;;;3412:416:170;3491:7;3533:6;3518;3527:2;3518:11;:21;;3510:52;;;;;-1:-1:-1;;;3510:52:170;;;;;;;;;;;;-1:-1:-1;;;3510:52:170;;;;;;;;;;;;;;;3597:6;3606:2;3597:11;3580:6;:13;:28;;3572:62;;;;;-1:-1:-1;;;3572:62:170;;;;;;;;;;;;-1:-1:-1;;;3572:62:170;;;;;;;;;;;;;;;-1:-1:-1;3722:30:170;3738:4;3722:30;3716:37;-1:-1:-1;;;3712:71:170;;;3412:416::o;3834:365::-;3912:6;3952;3938;3947:1;3938:10;:20;;3930:50;;;;;-1:-1:-1;;;3930:50:170;;;;;;;;;;;;-1:-1:-1;;;3930:50:170;;;;;;;;;;;;;;;4015:6;4024:1;4015:10;3998:6;:13;:27;;3990:60;;;;;-1:-1:-1;;;3990:60:170;;;;;;;;;;;;-1:-1:-1;;;3990:60:170;;;;;;;;;;;;;;;-1:-1:-1;4127:29:170;4143:3;4127:29;4121:36;;3834:365::o;784:244:179:-;871:14;;:::i;:::-;910:6;-1:-1:-1;;;;;901:15:179;:6;-1:-1:-1;;;;;901:15:179;;897:56;;;938:6;;946;897:56;-1:-1:-1;970:51:179;;;;;;;;-1:-1:-1;;;;;970:51:179;;;;;;;;;;;;;;;;;;;;;;;784:244::o;1219:281:171:-;1344:19;1401:45;1428:8;1438:7;1401:26;:45::i;:::-;1379:68;-1:-1:-1;1465:10:171;-1:-1:-1;;;;;1465:27:171;;;1457:36;;;;;574:330:185;735:69;;;-1:-1:-1;;;;;735:69:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;735:69:185;-1:-1:-1;;;735:69:185;;;711:103;;;;676:12;;;;711:10;;;;735:69;711:103;;;735:69;711:103;;735:69;711:103;;;;;;;;;;-1:-1:-1;;711:103:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;675:139;;;;832:7;:57;;;;-1:-1:-1;844:11:185;;:16;;:44;;;875:4;864:24;;;;;;;;;;;;;;;-1:-1:-1;864:24:185;844:44;824:73;;;;;-1:-1:-1;;;824:73:185;;;;;;;;;;;;-1:-1:-1;;;824:73:185;;;;;;;;;;;;;;399:3007:170;521:12;569:7;553;563:2;553:12;:23;;545:50;;;;;-1:-1:-1;;;545:50:170;;;;;;;;;;;;-1:-1:-1;;;545:50:170;;;;;;;;;;;;;;;633:6;622:7;613:6;:16;:26;;605:53;;;;;-1:-1:-1;;;605:53:170;;;;;;;;;;;;-1:-1:-1;;;605:53:170;;;;;;;;;;;;;;;702:7;693:6;:16;676:6;:13;:33;;668:63;;;;;-1:-1:-1;;;668:63:170;;;;;;;;;;;;-1:-1:-1;;;668:63:170;;;;;;;;;;;;;;;742:22;805:15;;837:2099;;;;3089:4;3083:11;3070:24;;3287:1;3276:9;3269:20;3339:4;3328:9;3324:20;3318:4;3311:34;798:2565;;837:2099;1031:4;1025:11;1012:24;;1726:2;1717:7;1713:16;2128:9;2121:17;2115:4;2111:28;2099:9;2088;2084:25;2080:60;2180:7;2176:2;2172:16;2448:6;2434:9;2427:17;2421:4;2417:28;2405:9;2397:6;2393:22;2389:57;2385:70;2210:461;2485:3;2481:2;2478:11;2210:461;;;2639:9;;2628:21;;2530:4;2522:13;;;;2566;2210:461;;;-1:-1:-1;;2693:26:170;;;2913:2;2896:11;-1:-1:-1;;2892:25:170;2886:4;2879:39;-1:-1:-1;798:2565:170;-1:-1:-1;3390:9:170;399:3007;-1:-1:-1;;;;399:3007:170:o;1644:250:137:-;1757:14;1805:81;1832:8;1842:43;1865:6;1873;1881:3;1842:22;:43::i;:::-;1805:26;:81::i;:::-;1783:104;1644:250;-1:-1:-1;;;;1644:250:137:o;924:121:91:-;976:8;-1:-1:-1;;;1004:1:91;:10;996:19;;;;;;-1:-1:-1;1036:1:91;924:121::o;1281:586:179:-;1366:12;1411:3;:10;;;-1:-1:-1;;;;;1398:23:179;:3;:10;;;-1:-1:-1;;;;;1398:23:179;;1390:32;;;;;;-1:-1:-1;1688:10:179;;1700;;;;;1712:7;;;;;1677:43;;-1:-1:-1;;;;;1677:43:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:54;;;;;;-1:-1:-1;;;;;;1546:250:179;;;;;;;-1:-1:-1;;1546:250:179;;;;;;;;;;;;241:66;1546:250;;;;;;;;;;;;;;;;;;;;;;;;;1511:307;;;;;;1281:586::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:138:207:-;84:20;;113:33;84:20;113:33;:::i;157:485::-;;254:3;247:4;239:6;235:17;231:27;221:2;;276:5;269;262:20;221:2;316:6;303:20;347:49;362:33;392:2;362:33;:::i;:::-;347:49;:::i;:::-;421:2;412:7;405:19;467:3;460:4;455:2;447:6;443:15;439:26;436:35;433:2;;;488:5;481;474:20;433:2;557;550:4;542:6;538:17;531:4;522:7;518:18;505:55;580:16;;;598:4;576:27;569:42;;;;584:7;211:431;-1:-1:-1;;211:431:207:o;647:182::-;;770:3;761:6;756:3;752:16;748:26;745:2;;;791:5;784;777:20;834:259;;946:2;934:9;925:7;921:23;917:32;914:2;;;967:6;959;952:22;914:2;1011:9;998:23;1030:33;1057:5;1030:33;:::i;:::-;1082:5;904:189;-1:-1:-1;;;904:189:207:o;1098:470::-;;;;1244:2;1232:9;1223:7;1219:23;1215:32;1212:2;;;1265:6;1257;1250:22;1212:2;1309:9;1296:23;1328:33;1355:5;1328:33;:::i;:::-;1380:5;-1:-1:-1;1432:2:207;1417:18;;1404:32;;-1:-1:-1;1488:2:207;1473:18;;1460:32;1501:35;1460:32;1501:35;:::i;:::-;1555:7;1545:17;;;1202:366;;;;;:::o;1573:683::-;;;;;;1753:3;1741:9;1732:7;1728:23;1724:33;1721:2;;;1775:6;1767;1760:22;1721:2;1819:9;1806:23;1838:33;1865:5;1838:33;:::i;:::-;1890:5;-1:-1:-1;1942:2:207;1927:18;;1914:32;;-1:-1:-1;1998:2:207;1983:18;;1970:32;2011:35;1970:32;2011:35;:::i;:::-;2065:7;-1:-1:-1;2119:2:207;2104:18;;2091:32;;-1:-1:-1;2175:3:207;2160:19;;2147:33;2189:35;2147:33;2189:35;:::i;:::-;2243:7;2233:17;;;1711:545;;;;;;;;:::o;2261:709::-;;;;;;;2456:3;2444:9;2435:7;2431:23;2427:33;2424:2;;;2478:6;2470;2463:22;2424:2;2522:9;2509:23;2541:33;2568:5;2541:33;:::i;:::-;2593:5;-1:-1:-1;2645:2:207;2630:18;;2617:32;;-1:-1:-1;2696:2:207;2681:18;;2668:32;;-1:-1:-1;2752:2:207;2737:18;;2724:32;2800:4;2787:18;;2775:31;;2765:2;;2825:6;2817;2810:22;2765:2;2414:556;;;;-1:-1:-1;2414:556:207;;2907:3;2892:19;;2879:33;;2959:3;2944:19;;;2931:33;;-1:-1:-1;2414:556:207;-1:-1:-1;;2414:556:207:o;2975:677::-;;;3133:2;3121:9;3112:7;3108:23;3104:32;3101:2;;;3154:6;3146;3139:22;3101:2;3199:9;3186:23;3228:18;3269:2;3261:6;3258:14;3255:2;;;3290:6;3282;3275:22;3255:2;3333:6;3322:9;3318:22;3308:32;;3378:7;3371:4;3367:2;3363:13;3359:27;3349:2;;3405:6;3397;3390:22;3349:2;3450;3437:16;3476:2;3468:6;3465:14;3462:2;;;3497:6;3489;3482:22;3462:2;3556:7;3551:2;3545;3537:6;3533:15;3529:2;3525:24;3521:33;3518:46;3515:2;;;3582:6;3574;3567:22;3515:2;3618;3610:11;;;;;3640:6;;-1:-1:-1;3091:561:207;;-1:-1:-1;;;;3091:561:207:o;3657:253::-;;;3795:2;3783:9;3774:7;3770:23;3766:32;3763:2;;;3816:6;3808;3801:22;3763:2;-1:-1:-1;;3844:16:207;;3900:2;3885:18;;;3879:25;3844:16;;3879:25;;-1:-1:-1;3753:157:207:o;3915:775::-;;;;;4078:2;4066:9;4057:7;4053:23;4049:32;4046:2;;;4099:6;4091;4084:22;4046:2;4140:9;4127:23;4117:33;;4197:2;4186:9;4182:18;4169:32;4159:42;;4252:2;4241:9;4237:18;4224:32;4275:18;4316:2;4308:6;4305:14;4302:2;;;4337:6;4329;4322:22;4302:2;4380:6;4369:9;4365:22;4355:32;;4425:7;4418:4;4414:2;4410:13;4406:27;4396:2;;4452:6;4444;4437:22;4396:2;4497;4484:16;4523:2;4515:6;4512:14;4509:2;;;4544:6;4536;4529:22;4509:2;4594:7;4589:2;4580:6;4576:2;4572:15;4568:24;4565:37;4562:2;;;4620:6;4612;4605:22;4562:2;4036:654;;;;-1:-1:-1;;4656:2:207;4648:11;;-1:-1:-1;;;4036:654:207:o;4695:676::-;;4828:2;4816:9;4807:7;4803:23;4799:32;4796:2;;;4849:6;4841;4834:22;4796:2;4887:9;4881:16;4920:18;4912:6;4909:30;4906:2;;;4957:6;4949;4942:22;4906:2;4985:22;;5038:4;5030:13;;5026:27;-1:-1:-1;5016:2:207;;5072:6;5064;5057:22;5016:2;5106;5100:9;5131:49;5146:33;5176:2;5146:33;:::i;5131:49::-;5203:2;5196:5;5189:17;5243:7;5238:2;5233;5229;5225:11;5221:20;5218:33;5215:2;;;5269:6;5261;5254:22;5215:2;5287:54;5338:2;5333;5326:5;5322:14;5317:2;5313;5309:11;5287:54;:::i;5376:1043::-;;5523:2;5511:9;5502:7;5498:23;5494:32;5491:2;;;5544:6;5536;5529:22;5491:2;5589:9;5576:23;5618:18;5659:2;5651:6;5648:14;5645:2;;;5680:6;5672;5665:22;5645:2;5708:22;;;;5764:4;5746:16;;;5742:27;5739:2;;;5787:6;5779;5772:22;5739:2;5825;5819:9;5867:4;5859:6;5855:17;5922:6;5910:10;5907:22;5902:2;5890:10;5887:18;5884:46;5881:2;;;5933:9;5881:2;5960;5953:22;6000:16;;6028;;;6025:2;;;6062:6;6054;6047:22;6025:2;6095:46;6133:7;6122:8;6118:2;6114:17;6095:46;:::i;:::-;6087:6;6080:62;;6175:33;6204:2;6200;6196:11;6175:33;:::i;:::-;6170:2;6162:6;6158:15;6151:58;6263:2;6259;6255:11;6242:25;6237:2;6229:6;6225:15;6218:50;6322:2;6318;6314:11;6301:25;6296:2;6288:6;6284:15;6277:50;6382:3;6378:2;6374:12;6361:26;6355:3;6347:6;6343:16;6336:52;6407:6;6397:16;;;;;5481:938;;;;:::o;6424:283::-;;6579:3;6567:9;6558:7;6554:23;6550:33;6547:2;;;6601:6;6593;6586:22;6547:2;6629:72;6693:7;6682:9;6629:72;:::i;6712:428::-;;6862:2;6850:9;6841:7;6837:23;6833:32;6830:2;;;6883:6;6875;6868:22;6830:2;6928:9;6915:23;6961:18;6953:6;6950:30;6947:2;;;6998:6;6990;6983:22;6947:2;7026:22;;7082:3;7064:16;;;7060:26;7057:2;;;7104:6;7096;7089:22;7434:929;;7581:2;7569:9;7560:7;7556:23;7552:32;7549:2;;;7602:6;7594;7587:22;7549:2;7647:9;7634:23;7676:18;7717:2;7709:6;7706:14;7703:2;;;7738:6;7730;7723:22;7703:2;7766:22;;;;7822:4;7804:16;;;7800:27;7797:2;;;7845:6;7837;7830:22;7797:2;7883:4;7877:11;7927:4;7919:6;7915:17;7982:6;7970:10;7967:22;7962:2;7950:10;7947:18;7944:46;7941:2;;;7993:9;7941:2;8020:4;8013:24;8062:16;;8090;;;8087:2;;;8124:6;8116;8109:22;8087:2;8157:46;8195:7;8184:8;8180:2;8176:17;8157:46;:::i;:::-;8149:6;8142:62;;8247:2;8243;8239:11;8226:25;8213:38;;8260:33;8287:5;8260:33;:::i;:::-;8321:2;8309:15;;8302:30;;;;-1:-1:-1;8313:6:207;7539:824;-1:-1:-1;;;7539:824:207:o;8632:294::-;;8743:2;8731:9;8722:7;8718:23;8714:32;8711:2;;;8764:6;8756;8749:22;8711:2;8808:9;8795:23;8858:8;8851:5;8847:20;8840:5;8837:31;8827:2;;8887:6;8879;8872:22;8931:327;;;9060:2;9048:9;9039:7;9035:23;9031:32;9028:2;;;9081:6;9073;9066:22;9028:2;9122:9;9109:23;9099:33;;9182:2;9171:9;9167:18;9154:32;9195:33;9222:5;9195:33;:::i;:::-;9247:5;9237:15;;;9018:240;;;;;:::o;9263:539::-;;;;;9426:3;9414:9;9405:7;9401:23;9397:33;9394:2;;;9448:6;9440;9433:22;9394:2;9489:9;9476:23;9466:33;;9549:2;9538:9;9534:18;9521:32;9562:33;9589:5;9562:33;:::i;:::-;9614:5;-1:-1:-1;9666:2:207;9651:18;;9638:32;;-1:-1:-1;9722:2:207;9707:18;;9694:32;9735:35;9694:32;9735:35;:::i;:::-;9384:418;;;;-1:-1:-1;9384:418:207;;-1:-1:-1;;9384:418:207:o;9807:259::-;;9888:5;9882:12;9915:6;9910:3;9903:19;9931:63;9987:6;9980:4;9975:3;9971:14;9964:4;9957:5;9953:16;9931:63;:::i;:::-;10048:2;10027:15;-1:-1:-1;;10023:29:207;10014:39;;;;10055:4;10010:50;;9858:208;-1:-1:-1;;9858:208:207:o;10071:431::-;10324:2;10320:15;;;-1:-1:-1;;10316:24:207;;;10304:37;;10397:3;10375:16;;;;-1:-1:-1;;;;;;10371:41:207;10366:2;10357:12;;10350:63;10447:15;;10443:24;10438:2;10429:12;;10422:46;10493:2;10484:12;;10244:258::o;10507:273::-;;10690:6;10682;10677:3;10664:33;10716:16;;10741:15;;;10716:16;10654:126;-1:-1:-1;10654:126:207:o;10785:203::-;-1:-1:-1;;;;;10949:32:207;;;;10931:51;;10919:2;10904:18;;10886:102::o;10993:570::-;-1:-1:-1;;;;;11282:15:207;;;11264:34;;11341:14;;11334:22;11329:2;11314:18;;11307:50;11388:2;11373:18;;11366:34;;;11436:15;;11431:2;11416:18;;11409:43;11244:3;11483;11468:19;;11461:32;;;10993:570;;11510:47;;11537:19;;11529:6;11510:47;:::i;:::-;11502:55;11216:347;-1:-1:-1;;;;;;;11216:347:207:o;11568:806::-;;11757:2;11797;11786:9;11782:18;11827:2;11816:9;11809:21;11850:6;11885;11879:13;11916:6;11908;11901:22;11954:2;11943:9;11939:18;11932:25;;12017:2;12011;12003:6;11999:15;11988:9;11984:31;11980:40;11966:54;;12055:2;12047:6;12043:15;12076:4;12089:256;12103:6;12100:1;12097:13;12089:256;;;12196:2;12192:7;12180:9;12172:6;12168:22;12164:36;12159:3;12152:49;12224:41;12258:6;12249;12243:13;12224:41;:::i;:::-;12214:51;-1:-1:-1;12323:12:207;;;;12288:15;;;;12125:1;12118:9;12089:256;;;-1:-1:-1;12362:6:207;;11737:637;-1:-1:-1;;;;;;;11737:637:207:o;12379:221::-;;12528:2;12517:9;12510:21;12548:46;12590:2;12579:9;12575:18;12567:6;12548:46;:::i;12605:342::-;12807:2;12789:21;;;12846:2;12826:18;;;12819:30;-1:-1:-1;;;12880:2:207;12865:18;;12858:48;12938:2;12923:18;;12779:168::o;12952:343::-;13154:2;13136:21;;;13193:2;13173:18;;;13166:30;-1:-1:-1;;;13227:2:207;13212:18;;13205:49;13286:2;13271:18;;13126:169::o;13300:476::-;;13499:2;13488:9;13481:21;13537:6;13531:13;13580:4;13575:2;13564:9;13560:18;13553:32;13608:52;13656:2;13645:9;13641:18;13627:12;13608:52;:::i;:::-;13720:2;13708:15;;;;13702:22;-1:-1:-1;;;;;13698:48:207;13691:4;13676:20;;;;13669:78;;;;-1:-1:-1;13594:66:207;;13471:305;-1:-1:-1;13471:305:207:o;13781:177::-;13927:25;;;13915:2;13900:18;;13882:76::o;13963:533::-;;;14106:11;14093:25;14200:2;14196:7;14185:8;14169:14;14165:29;14161:43;14141:18;14137:68;14127:2;;14222:4;14216;14209:18;14127:2;14252:33;;14304:20;;;-1:-1:-1;14347:18:207;14336:30;;14333:2;;;14382:4;14376;14369:18;14333:2;14418:4;14406:17;;-1:-1:-1;14449:14:207;14445:27;;;14435:38;;14432:2;;;14486:1;14483;14476:12;14432:2;14057:439;;;;;:::o;14501:242::-;14571:2;14565:9;14601:17;;;14648:18;14633:34;;14669:22;;;14630:62;14627:2;;;14695:9;14627:2;14722;14715:22;14545:198;;-1:-1:-1;14545:198:207:o;14748:181::-;;14831:18;14823:6;14820:30;14817:2;;;14853:9;14817:2;-1:-1:-1;14912:2:207;14889:17;-1:-1:-1;;14885:31:207;14918:4;14881:42;;14807:122::o;14934:258::-;15006:1;15016:113;15030:6;15027:1;15024:13;15016:113;;;15106:11;;;15100:18;15087:11;;;15080:39;15052:2;15045:10;15016:113;;;15147:6;15144:1;15141:13;15138:2;;;-1:-1:-1;;15182:1:207;15164:16;;15157:27;14987:205::o;15197:133::-;-1:-1:-1;;;;;15274:31:207;;15264:42;;15254:2;;15320:1;15317;15310:12;15254:2;15244:86;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "31753": [
        {
          "start": 871,
          "length": 32
        },
        {
          "start": 3322,
          "length": 32
        },
        {
          "start": 7531,
          "length": 32
        }
      ],
      "31757": [
        {
          "start": 3286,
          "length": 32
        }
      ],
      "31761": [
        {
          "start": 285,
          "length": 32
        },
        {
          "start": 1530,
          "length": 32
        },
        {
          "start": 1765,
          "length": 32
        },
        {
          "start": 1906,
          "length": 32
        },
        {
          "start": 1970,
          "length": 32
        },
        {
          "start": 2205,
          "length": 32
        },
        {
          "start": 4849,
          "length": 32
        },
        {
          "start": 4919,
          "length": 32
        },
        {
          "start": 5035,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "WETH9()": "4aa4a4fc",
    "deployer()": "d5f39488",
    "exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
    "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
    "exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
    "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
    "factory()": "c45a0155",
    "multicall(bytes[])": "ac9650d8",
    "pancakeV3SwapCallback(int256,int256,bytes)": "23a69e75",
    "refundETH()": "12210e8a",
    "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": "f3995c67",
    "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": "4659a494",
    "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "a4a78f0c",
    "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "c2e3140a",
    "sweepToken(address,uint256,address)": "df2ab5bb",
    "sweepTokenWithFee(address,uint256,address,uint256,address)": "e0e189a0",
    "unwrapWETH9(uint256,address)": "49404b7c",
    "unwrapWETH9WithFee(uint256,address,uint256,address)": "9b2c0a37"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH9\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"pancakeV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowed\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowedIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeBips\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"sweepTokenWithFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeBips\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9WithFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}},\"pancakeV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a PancakeV3Pool deployed by the canonical PancakeV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IPancakeV3PoolActions#swap call\"}},\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount. And in PancakeSwap Router, this would be called  at the very end of swap\"},\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this).\",\"params\":{\"deadline\":\"A timestamp, the current blocktime must be less than or equal to this timestamp\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\",\"value\":\"The amount that can be spent of token\"}},\"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this)\",\"params\":{\"expiry\":\"The timestamp at which the permit is no longer valid\",\"nonce\":\"The current nonce of the owner\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this) Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.\",\"params\":{\"expiry\":\"The timestamp at which the permit is no longer valid\",\"nonce\":\"The current nonce of the owner\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit\",\"params\":{\"deadline\":\"A timestamp, the current blocktime must be less than or equal to this timestamp\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\",\"value\":\"The amount that can be spent of token\"}},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"sweepTokenWithFee(address,uint256,address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\"},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}},\"unwrapWETH9WithFee(uint256,address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\"}},\"stateVariables\":{\"DEFAULT_AMOUNT_IN_CACHED\":{\"details\":\"Used as the placeholder value for amountInCached, because the computed amount in for an exact output swap can never actually be this value\"},\"amountInCached\":{\"details\":\"Transient storage variable used for returning the computed amount in for an exact output swap.\"}},\"title\":\"Pancake V3 Swap Router\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"},\"pancakeV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IPancakeV3Pool#swap.\"},\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given token from `msg.sender`\"},\"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\"},\"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\"},\"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given token from `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"sweepTokenWithFee(address,uint256,address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient, with a percentage between 0 (exclusive) and 1 (inclusive) going to feeRecipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"},\"unwrapWETH9WithFee(uint256,address,uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH, with a percentage between 0 (exclusive), and 1 (inclusive) going to feeRecipient\"}},\"notice\":\"Router for stateless execution of swaps against Pancake V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/v3-periphery/contracts/SwapRouter.sol\":\"SwapRouter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@beatx/=src/beatx/\",\":@horizondex/=src/horizondex/\",\":@matterlabs/=lib/aa-signature-checker/\",\":@merkle/=src/mproof/\",\":@metazeus/=src/metazeus/\",\":@mute/=src/mute-c4/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@oz4.8.1/=lib/oz4.8.1/\",\":@pancakeswap/=src/\",\":@protomerkle/=lib/protomerkle/\",\":@rabbithole/=src/rabbithole-c4/\",\":@solmate/=lib/solmate/src/\",\":@tokensales/=src/TokenSales/\",\":@uniswap/=lib/\",\":@zks/=src/zks/\",\":base64-sol/=lib/base64/\",\":base64/=lib/base64/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/oz4.9.2/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/oz4.9.2/contracts/\",\":oz4.8.1/=lib/oz4.8.1/\",\":oz4.9.2/=lib/oz4.9.2/\",\":solidity-lib/=lib/solidity-lib/contracts/\",\":v2-core/=lib/v2-core/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/drafts/IERC20Permit.sol\":{\"keccak256\":\"0x1aab7754719ba764a8a05bec47e975001400f62986474945eb3dbee6d871259f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c14e8ff1b384bdb68f262669364b1e79fbbd82b85938b7ce788a1395c40c6a2\",\"dweb:/ipfs/QmUKLXfSeEuRUXkeWLBhjHTKeSFoNBCS1RaMXv1AmHXYzn\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"src/v3-core/contracts/interfaces/IPancakeV3Pool.sol\":{\"keccak256\":\"0x4f22208838b7b85d2d48e9a92a0cee1e5bf5f12fe0f2f5cc521ab1adabb68fbb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f39833bc732ff76e8abe44206981f115116e3c0f4f867099d1c1a3621febefea\",\"dweb:/ipfs/QmcSb8EyNu6y6sueWZmc6uYbPrWz3Z38RuLipeWB2E5JRc\"]},\"src/v3-core/contracts/interfaces/callback/IPancakeV3SwapCallback.sol\":{\"keccak256\":\"0x247e5e6d9c311aa37350fa8298595c83789ac3ba2e2cde3cc73769e1b21a93f8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7aee0c0ba1b7efb9fc00d09d93247fae8ed77d19d358efd8b842b0dbe1ee6132\",\"dweb:/ipfs/QmeUZaxdTQW2aKxAgk5SXpx1ALx4xZSbuSg4XCSn4QzcEU\"]},\"src/v3-core/contracts/interfaces/pool/IPancakeV3PoolActions.sol\":{\"keccak256\":\"0x78ed1c130111169f443c55618ff2d290ce0630b1d016cdeda3a66e12816041f6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://230ba84dfb2cbaadffe4554d9b74ddc7e6b696e51e5e9f327be469a47c332137\",\"dweb:/ipfs/Qmapm23aouHCAMVxLG6eRfUY134QZzDvsAnXqX3UnpdA2o\"]},\"src/v3-core/contracts/interfaces/pool/IPancakeV3PoolDerivedState.sol\":{\"keccak256\":\"0x45a9f30f562b5d0d55b311149c32df5cbcf0c7cfcb72aff2637a29794b06d4b6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a6a90b9532960842ebee061f6acefc680ae06bfd73e7c3536dd67f566137ded8\",\"dweb:/ipfs/QmPDfMp1k417dMPJAcFK4s6nkFX7GxiC8vtis8eAA7Jrk5\"]},\"src/v3-core/contracts/interfaces/pool/IPancakeV3PoolEvents.sol\":{\"keccak256\":\"0xab6ac5bd9ceadd20e3b60bb079489a2942c60f2697a6e145c585ee49b281534c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://50df58f97d6b423605489b3dfad69b0e4f68197d02950d6858072b1bffe5fa44\",\"dweb:/ipfs/QmQGa1CGYRqkr4Mv85z7A7vGRAmCgmpU2hikMuRURu7AUA\"]},\"src/v3-core/contracts/interfaces/pool/IPancakeV3PoolImmutables.sol\":{\"keccak256\":\"0x8cde7ad64b4dced2fa40e91e3c8ffd0eaaf86954c65a1c0f7abc35f1af3a89d0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6dda14811ba9ddf552ecf2c6b7414ea9eda70421ffa05830baec1c12c157fa77\",\"dweb:/ipfs/QmbLT6zzSxFAtD1NsZRPpuDRXKtgQ8vbg3P6NcSRA2K4Qh\"]},\"src/v3-core/contracts/interfaces/pool/IPancakeV3PoolOwnerActions.sol\":{\"keccak256\":\"0x5c522018f94c194608fd0f3f6bb1c7373d53496f5b6cb5e916b7a8d61fc7caf1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4e3b53a05473e3862a40c30bc9ef64c3d835975297577a790309253917d990e9\",\"dweb:/ipfs/QmRSrGUM3AEXjBBWvrHzdvz4ibjAYDFZzfRZoXRnFDz9vi\"]},\"src/v3-core/contracts/interfaces/pool/IPancakeV3PoolState.sol\":{\"keccak256\":\"0xbf4a0b7b13de3cb73722a74cfee8b34fa250855373cd17e54a093f9054efbc61\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a238096b300063a853ccad81ff3141b64784c7ae18f3e254701fdc8763f3b885\",\"dweb:/ipfs/Qmd1RiqVgZgsjdUDAmpHnp9myXDRTJyFkWyNZmZWS4bXRT\"]},\"src/v3-core/contracts/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]},\"src/v3-core/contracts/libraries/SafeCast.sol\":{\"keccak256\":\"0x4c12bf820c0b011f5490a209960ca34dd8af34660ef9e01de0438393d15e3fd8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fed11489e218e55d087d42b4f350a30e10cd2aedec8f432bd3cc712f648d5869\",\"dweb:/ipfs/QmWfRnRxyXwHUDcTQPazxYYk5jxErGeQqdvnYtyg5nBPbU\"]},\"src/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xda8c2c0b12d2976acfd364453ba5f5bf0117ba3c91175ee9e1067d3fb26944d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3f3d2d7c2723c91830c74d96292f28fc1cfe28d388cdb9c1a5ebadb4c2b96f81\",\"dweb:/ipfs/QmYU4wk8MEm33wVWR38LoncvR7b8PP1mLuGBKX3dUpYJVE\"]},\"src/v3-periphery/contracts/SwapRouter.sol\":{\"keccak256\":\"0x90fa9e8bd8e8c1353e8535789db735f13063a4b1e0b3d1a476bfdedb3bb4d36b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9567cb509f21573dd3858ec97c0759dd7c66353e69880cb198008ce9585cc898\",\"dweb:/ipfs/QmNg76udciwAnbN6JJDQPjAe4fTJBBbPVtXBL3mK1cmnkv\"]},\"src/v3-periphery/contracts/base/BlockTimestamp.sol\":{\"keccak256\":\"0x1aa66f71234064a0c0976f62233f2edbd69554e5ad817dc97f318bc8e11f4da6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b3a40450e9d6b0f9cb91b40ffd6215612505bd74e7d954529958f4edc6ee7b93\",\"dweb:/ipfs/QmewsUCHK5N5KhNtqEwK8JgsXFADyFBrQRS5HoDWM5gi3b\"]},\"src/v3-periphery/contracts/base/Multicall.sol\":{\"keccak256\":\"0xfcfd78c62d2145634a791d5680a1af7055fbd301c415d29c09333c99c37d9037\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0d1c8f4a18cec8ad49e5269c5b07c7f6fd497dfc1b7b777f8ddcfb8055efd803\",\"dweb:/ipfs/QmdeCTnfHM3RGtQuo3DMX9m7gPspGGwQp7ho6m9cJjjnER\"]},\"src/v3-periphery/contracts/base/PeripheryImmutableState.sol\":{\"keccak256\":\"0xbe690f025403c72781fddde9cb1a88a5602f4caf50bfa943977ab9444e46224f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://90466b5e0fda1ab7fb85b54e3daad7a1f126e21b5f7711bb5f80bd698621fae7\",\"dweb:/ipfs/QmPbxxogd74YoZKGH7jfGyyWshxhwopqB4CBLwuVt6WpKh\"]},\"src/v3-periphery/contracts/base/PeripheryPayments.sol\":{\"keccak256\":\"0x25b2d32a7688378633d857e1cb04a2e3fc1d0dede331258e409294e76bfd0c06\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7b646f709e2d04d4c079d611f7a95afcb887b9de76dab87c485cd36ee51f474a\",\"dweb:/ipfs/QmZ6G4gyTeoXXRCKwRqryLEJjy5oWzNuFqa1t5JWvQy5H6\"]},\"src/v3-periphery/contracts/base/PeripheryPaymentsWithFee.sol\":{\"keccak256\":\"0x7440d82d1b7ea569be24faf7020c5730b8fa9bf5994335a66b8b44c0c8d9f40c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://93903d2a5747389d2ed583a1479162a47c37b2866b781758e8327b4eea4ee417\",\"dweb:/ipfs/QmRaSGcYQkNix3EuBDTujdemQGTiqsHCAzFgjGZLwAuRcn\"]},\"src/v3-periphery/contracts/base/PeripheryValidation.sol\":{\"keccak256\":\"0xc736bab599912d6212e8414ee4ba7af0c1e08ff6aa11caa85f5f6e07f7d421c3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://06f6c13a86900c71fa486fc029a59d1b7eb96162bb42885b5f845d995294893e\",\"dweb:/ipfs/QmUcBxMsmncw9n6eXhzzwSasGBvBGKH5FT8HSrAxrsXV4A\"]},\"src/v3-periphery/contracts/base/SelfPermit.sol\":{\"keccak256\":\"0x3b450da4ffcae63ba0afb7a3847dc0019fc615901970ed5a5e245f66cdda2740\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9d8bfab6ad3544ff1101cd8787c645d097f47a9f0c6c124256bb0b5c52ff7474\",\"dweb:/ipfs/Qmab7VVttmrGePPAK3J96pXpzkGnUnkywS6WVbehRAQov2\"]},\"src/v3-periphery/contracts/interfaces/IMulticall.sol\":{\"keccak256\":\"0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016\",\"dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD\"]},\"src/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x72e2d91b64685e4c4725cb3d144626e770842c2d2e0525816f9dd2044f6c9483\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5c7aca85d579139d7dc1a68c0b85a73f02a6306009342c9eb5b57c90772564a1\",\"dweb:/ipfs/QmP2BhNYXDEnGLKBZR9guuYL2Q7848pTr5CCzPk1wGtwns\"]},\"src/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0x9f7d06f70bc237ffc6d3cb80c0035d28c1f08395e58aed0f5e85e0cbe402025b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6637101237472ffd1cc53a8af074dd40bc2926f09825ccd1fecbee123b9afb3a\",\"dweb:/ipfs/QmU9PBHq6ow64uRYC7q6p8pKuep7zeSN89fF2c3VCTVdV1\"]},\"src/v3-periphery/contracts/interfaces/IPeripheryPaymentsWithFee.sol\":{\"keccak256\":\"0x23ebe0ced112c7ca3869868874b691fcbb50f90c482580dc9ebe718bda34edfc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://689ebfcb90a26bf31af6e35456e41940c23d145cfc59d1ae5f6fa060945dd768\",\"dweb:/ipfs/QmZxVsaUWqnEEsRcphuWBvuEExQxznztSmFUkMa5ks8AHY\"]},\"src/v3-periphery/contracts/interfaces/ISelfPermit.sol\":{\"keccak256\":\"0xe1a1c072855e687c90317c15b9b6ce81cc683723f73d70e47b40f2f9bad0c2be\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://53b0881a1c55254d157054bd3d1c86982c0f5429bd2a9986c15479f6b71ef678\",\"dweb:/ipfs/Qmc9WZqXzQmqsA3xYxojbx9nXcG3FGuwAjM3opEmRGSnBb\"]},\"src/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0xecc5c75ec063b34819a2d680bb1b0b6c2e1a9ad45b023907de7ed4211d0dc34d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0ca1b7eda36ffac00aefaf77f9faeba2e0e19ca4b2ca57bf4e904875a4d947f9\",\"dweb:/ipfs/QmTw98r2h4qUVC17YqpZJ3Cpv8d4zSSKen6uGNqp5AKieN\"]},\"src/v3-periphery/contracts/interfaces/external/IERC20PermitAllowed.sol\":{\"keccak256\":\"0x8c4c1b8e724e0a78cb691d703dd37cd91b8bd6600537fb227807a194025a792d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://783be851155842a02cdb0483c3a69ecc0e7ae8545f65cec1d4aeb355b2026a7d\",\"dweb:/ipfs/QmZNBQosTjpGNKB3Eo2K6Zzye7FYiLVoEki5iPB2Y69jz2\"]},\"src/v3-periphery/contracts/interfaces/external/IWETH9.sol\":{\"keccak256\":\"0x6dd6547a2085d7882fe38920dfb0ddd9408d0fa8a3c777067a034ba8fd6c1947\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b3a1fd3e242c80cd62063eb19ea08d71eeb9cb5e2dbeabf5e2b1573327b57c5e\",\"dweb:/ipfs/QmZyPYGjKhGhyyTssyQ1p4ovy3heRGJzNCHukEPPodwzip\"]},\"src/v3-periphery/contracts/libraries/BytesLib.sol\":{\"keccak256\":\"0x68629e5b1a30b6490c6ae721c28117f6f963745462b007da0769758eb67f10d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://370e31ceab1a7504f98dec122f65d9b8c6fc6420fd8cdd171b3dd57c4d5d21fc\",\"dweb:/ipfs/QmcquKATbnopgs92RdM5bKewt7GdCpgGhVY4hxmv1KjnnH\"]},\"src/v3-periphery/contracts/libraries/CallbackValidation.sol\":{\"keccak256\":\"0xe666aa91aff1c12fe1ccd9f92a4a1512ce68ae9d7e543b25817ebe84ce7ed73a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6499103de599417de336fa23cdf8558bd4217d5c68f4d1b52ae001b216092596\",\"dweb:/ipfs/QmS5RHggvdLmh5jFn7LxXyW3FQDVtSFt4Zb5j8PztwmshW\"]},\"src/v3-periphery/contracts/libraries/Path.sol\":{\"keccak256\":\"0xb22c562b5175d50dbcc2224325666090d985f052abdcfe275c8dfc884e34de61\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://27aeff27314476ab3c77313ae1f0c5b2442b86315f5ce741cb2150a87c3cbad3\",\"dweb:/ipfs/QmQNno2g1CJvjnH6ych4LuHr1UZDEZPACgYG4XvivxGrqV\"]},\"src/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0x8ff537853fb14f848febb943ef2f7b81d26a3d1f5a020a6f59ddd5723ad3ad23\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6ed45c72a514f3c47656037157af3377f39bb0578cb99287a64e8539c4c4ce92\",\"dweb:/ipfs/QmUDNRkon5VEWdi6QkrLtpJK3LWtMGUN13Snn4EfMSdDeK\"]},\"src/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x44982db20ac97a11aac60dde0fbc4120b05284b2641762264f6aa685d379808a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b4a8049c9cc66d27cdbd693c18f0bd3d6a23419fe4d0ee9fe4df466c71e9b151\",\"dweb:/ipfs/QmXuFbQRVJreqMgiL4hy65BSPEcTzX4zhzss5HQBKRTAbN\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.7.6+commit.7338295f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_deployer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_factory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_WETH9",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH9",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "deployer",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISwapRouter.ExactInputParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "path",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMinimum",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "exactInput",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISwapRouter.ExactInputSingleParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMinimum",
                  "type": "uint256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "exactInputSingle",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISwapRouter.ExactOutputParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "path",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountInMaximum",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "exactOutput",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISwapRouter.ExactOutputSingleParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountInMaximum",
                  "type": "uint256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "exactOutputSingle",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "amount0Delta",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "amount1Delta",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pancakeV3SwapCallback"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "refundETH"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfPermit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfPermitAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfPermitAllowedIfNecessary"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfPermitIfNecessary"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sweepToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "feeBips",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sweepTokenWithFee"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "unwrapWETH9"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "feeBips",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "unwrapWETH9WithFee"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "exactInput((bytes,address,uint256,uint256,uint256))": {
            "params": {
              "params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
            },
            "returns": {
              "amountOut": "The amount of the received token"
            }
          },
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
            "params": {
              "params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
            },
            "returns": {
              "amountOut": "The amount of the received token"
            }
          },
          "exactOutput((bytes,address,uint256,uint256,uint256))": {
            "params": {
              "params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
            },
            "returns": {
              "amountIn": "The amount of the input token"
            }
          },
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
            "params": {
              "params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
            },
            "returns": {
              "amountIn": "The amount of the input token"
            }
          },
          "multicall(bytes[])": {
            "details": "The `msg.value` should not be trusted for any method callable from multicall.",
            "params": {
              "data": "The encoded function data for each of the calls to make to this contract"
            },
            "returns": {
              "results": "The results from each of the calls passed in via data"
            }
          },
          "pancakeV3SwapCallback(int256,int256,bytes)": {
            "details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a PancakeV3Pool deployed by the canonical PancakeV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
            "params": {
              "amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
              "amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
              "data": "Any data passed through by the caller via the IPancakeV3PoolActions#swap call"
            }
          },
          "refundETH()": {
            "details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount. And in PancakeSwap Router, this would be called  at the very end of swap"
          },
          "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "The `owner` is always msg.sender and the `spender` is always address(this).",
            "params": {
              "deadline": "A timestamp, the current blocktime must be less than or equal to this timestamp",
              "r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
              "s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
              "token": "The address of the token spent",
              "v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`",
              "value": "The amount that can be spent of token"
            }
          },
          "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "The `owner` is always msg.sender and the `spender` is always address(this)",
            "params": {
              "expiry": "The timestamp at which the permit is no longer valid",
              "nonce": "The current nonce of the owner",
              "r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
              "s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
              "token": "The address of the token spent",
              "v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
            }
          },
          "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "The `owner` is always msg.sender and the `spender` is always address(this) Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.",
            "params": {
              "expiry": "The timestamp at which the permit is no longer valid",
              "nonce": "The current nonce of the owner",
              "r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
              "s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
              "token": "The address of the token spent",
              "v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
            }
          },
          "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "The `owner` is always msg.sender and the `spender` is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit",
            "params": {
              "deadline": "A timestamp, the current blocktime must be less than or equal to this timestamp",
              "r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
              "s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
              "token": "The address of the token spent",
              "v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`",
              "value": "The amount that can be spent of token"
            }
          },
          "sweepToken(address,uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
            "params": {
              "amountMinimum": "The minimum amount of token required for a transfer",
              "recipient": "The destination address of the token",
              "token": "The contract address of the token which will be transferred to `recipient`"
            }
          },
          "sweepTokenWithFee(address,uint256,address,uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users"
          },
          "unwrapWETH9(uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
            "params": {
              "amountMinimum": "The minimum amount of WETH9 to unwrap",
              "recipient": "The address receiving ETH"
            }
          },
          "unwrapWETH9WithFee(uint256,address,uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "exactInput((bytes,address,uint256,uint256,uint256))": {
            "notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
          },
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
            "notice": "Swaps `amountIn` of one token for as much as possible of another token"
          },
          "exactOutput((bytes,address,uint256,uint256,uint256))": {
            "notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
          },
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
            "notice": "Swaps as little as possible of one token for `amountOut` of another token"
          },
          "multicall(bytes[])": {
            "notice": "Call multiple functions in the current contract and return the data from all of them if they all succeed"
          },
          "pancakeV3SwapCallback(int256,int256,bytes)": {
            "notice": "Called to `msg.sender` after executing a swap via IPancakeV3Pool#swap."
          },
          "refundETH()": {
            "notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
          },
          "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Permits this contract to spend a given token from `msg.sender`"
          },
          "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter"
          },
          "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter"
          },
          "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Permits this contract to spend a given token from `msg.sender`"
          },
          "sweepToken(address,uint256,address)": {
            "notice": "Transfers the full amount of a token held by this contract to recipient"
          },
          "sweepTokenWithFee(address,uint256,address,uint256,address)": {
            "notice": "Transfers the full amount of a token held by this contract to recipient, with a percentage between 0 (exclusive) and 1 (inclusive) going to feeRecipient"
          },
          "unwrapWETH9(uint256,address)": {
            "notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
          },
          "unwrapWETH9WithFee(uint256,address,uint256,address)": {
            "notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH, with a percentage between 0 (exclusive), and 1 (inclusive) going to feeRecipient"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@beatx/=src/beatx/",
        "@horizondex/=src/horizondex/",
        "@matterlabs/=lib/aa-signature-checker/",
        "@merkle/=src/mproof/",
        "@metazeus/=src/metazeus/",
        "@mute/=src/mute-c4/",
        "@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@oz4.8.1/=lib/oz4.8.1/",
        "@pancakeswap/=src/",
        "@protomerkle/=lib/protomerkle/",
        "@rabbithole/=src/rabbithole-c4/",
        "@solmate/=lib/solmate/src/",
        "@tokensales/=src/TokenSales/",
        "@uniswap/=lib/",
        "@zks/=src/zks/",
        "base64-sol/=lib/base64/",
        "base64/=lib/base64/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/oz4.9.2/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "openzeppelin/=lib/oz4.9.2/contracts/",
        "oz4.8.1/=lib/oz4.8.1/",
        "oz4.9.2/=lib/oz4.9.2/",
        "solidity-lib/=lib/solidity-lib/contracts/",
        "v2-core/=lib/v2-core/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/v3-periphery/contracts/SwapRouter.sol": "SwapRouter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/drafts/IERC20Permit.sol": {
        "keccak256": "0x1aab7754719ba764a8a05bec47e975001400f62986474945eb3dbee6d871259f",
        "urls": [
          "bzz-raw://8c14e8ff1b384bdb68f262669364b1e79fbbd82b85938b7ce788a1395c40c6a2",
          "dweb:/ipfs/QmUKLXfSeEuRUXkeWLBhjHTKeSFoNBCS1RaMXv1AmHXYzn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5",
        "urls": [
          "bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08",
          "dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC"
        ],
        "license": "MIT"
      },
      "src/v3-core/contracts/interfaces/IPancakeV3Pool.sol": {
        "keccak256": "0x4f22208838b7b85d2d48e9a92a0cee1e5bf5f12fe0f2f5cc521ab1adabb68fbb",
        "urls": [
          "bzz-raw://f39833bc732ff76e8abe44206981f115116e3c0f4f867099d1c1a3621febefea",
          "dweb:/ipfs/QmcSb8EyNu6y6sueWZmc6uYbPrWz3Z38RuLipeWB2E5JRc"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-core/contracts/interfaces/callback/IPancakeV3SwapCallback.sol": {
        "keccak256": "0x247e5e6d9c311aa37350fa8298595c83789ac3ba2e2cde3cc73769e1b21a93f8",
        "urls": [
          "bzz-raw://7aee0c0ba1b7efb9fc00d09d93247fae8ed77d19d358efd8b842b0dbe1ee6132",
          "dweb:/ipfs/QmeUZaxdTQW2aKxAgk5SXpx1ALx4xZSbuSg4XCSn4QzcEU"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-core/contracts/interfaces/pool/IPancakeV3PoolActions.sol": {
        "keccak256": "0x78ed1c130111169f443c55618ff2d290ce0630b1d016cdeda3a66e12816041f6",
        "urls": [
          "bzz-raw://230ba84dfb2cbaadffe4554d9b74ddc7e6b696e51e5e9f327be469a47c332137",
          "dweb:/ipfs/Qmapm23aouHCAMVxLG6eRfUY134QZzDvsAnXqX3UnpdA2o"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-core/contracts/interfaces/pool/IPancakeV3PoolDerivedState.sol": {
        "keccak256": "0x45a9f30f562b5d0d55b311149c32df5cbcf0c7cfcb72aff2637a29794b06d4b6",
        "urls": [
          "bzz-raw://a6a90b9532960842ebee061f6acefc680ae06bfd73e7c3536dd67f566137ded8",
          "dweb:/ipfs/QmPDfMp1k417dMPJAcFK4s6nkFX7GxiC8vtis8eAA7Jrk5"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-core/contracts/interfaces/pool/IPancakeV3PoolEvents.sol": {
        "keccak256": "0xab6ac5bd9ceadd20e3b60bb079489a2942c60f2697a6e145c585ee49b281534c",
        "urls": [
          "bzz-raw://50df58f97d6b423605489b3dfad69b0e4f68197d02950d6858072b1bffe5fa44",
          "dweb:/ipfs/QmQGa1CGYRqkr4Mv85z7A7vGRAmCgmpU2hikMuRURu7AUA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-core/contracts/interfaces/pool/IPancakeV3PoolImmutables.sol": {
        "keccak256": "0x8cde7ad64b4dced2fa40e91e3c8ffd0eaaf86954c65a1c0f7abc35f1af3a89d0",
        "urls": [
          "bzz-raw://6dda14811ba9ddf552ecf2c6b7414ea9eda70421ffa05830baec1c12c157fa77",
          "dweb:/ipfs/QmbLT6zzSxFAtD1NsZRPpuDRXKtgQ8vbg3P6NcSRA2K4Qh"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-core/contracts/interfaces/pool/IPancakeV3PoolOwnerActions.sol": {
        "keccak256": "0x5c522018f94c194608fd0f3f6bb1c7373d53496f5b6cb5e916b7a8d61fc7caf1",
        "urls": [
          "bzz-raw://4e3b53a05473e3862a40c30bc9ef64c3d835975297577a790309253917d990e9",
          "dweb:/ipfs/QmRSrGUM3AEXjBBWvrHzdvz4ibjAYDFZzfRZoXRnFDz9vi"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-core/contracts/interfaces/pool/IPancakeV3PoolState.sol": {
        "keccak256": "0xbf4a0b7b13de3cb73722a74cfee8b34fa250855373cd17e54a093f9054efbc61",
        "urls": [
          "bzz-raw://a238096b300063a853ccad81ff3141b64784c7ae18f3e254701fdc8763f3b885",
          "dweb:/ipfs/Qmd1RiqVgZgsjdUDAmpHnp9myXDRTJyFkWyNZmZWS4bXRT"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-core/contracts/libraries/LowGasSafeMath.sol": {
        "keccak256": "0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d",
        "urls": [
          "bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37",
          "dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-core/contracts/libraries/SafeCast.sol": {
        "keccak256": "0x4c12bf820c0b011f5490a209960ca34dd8af34660ef9e01de0438393d15e3fd8",
        "urls": [
          "bzz-raw://fed11489e218e55d087d42b4f350a30e10cd2aedec8f432bd3cc712f648d5869",
          "dweb:/ipfs/QmWfRnRxyXwHUDcTQPazxYYk5jxErGeQqdvnYtyg5nBPbU"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0xda8c2c0b12d2976acfd364453ba5f5bf0117ba3c91175ee9e1067d3fb26944d9",
        "urls": [
          "bzz-raw://3f3d2d7c2723c91830c74d96292f28fc1cfe28d388cdb9c1a5ebadb4c2b96f81",
          "dweb:/ipfs/QmYU4wk8MEm33wVWR38LoncvR7b8PP1mLuGBKX3dUpYJVE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/SwapRouter.sol": {
        "keccak256": "0x90fa9e8bd8e8c1353e8535789db735f13063a4b1e0b3d1a476bfdedb3bb4d36b",
        "urls": [
          "bzz-raw://9567cb509f21573dd3858ec97c0759dd7c66353e69880cb198008ce9585cc898",
          "dweb:/ipfs/QmNg76udciwAnbN6JJDQPjAe4fTJBBbPVtXBL3mK1cmnkv"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/base/BlockTimestamp.sol": {
        "keccak256": "0x1aa66f71234064a0c0976f62233f2edbd69554e5ad817dc97f318bc8e11f4da6",
        "urls": [
          "bzz-raw://b3a40450e9d6b0f9cb91b40ffd6215612505bd74e7d954529958f4edc6ee7b93",
          "dweb:/ipfs/QmewsUCHK5N5KhNtqEwK8JgsXFADyFBrQRS5HoDWM5gi3b"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/base/Multicall.sol": {
        "keccak256": "0xfcfd78c62d2145634a791d5680a1af7055fbd301c415d29c09333c99c37d9037",
        "urls": [
          "bzz-raw://0d1c8f4a18cec8ad49e5269c5b07c7f6fd497dfc1b7b777f8ddcfb8055efd803",
          "dweb:/ipfs/QmdeCTnfHM3RGtQuo3DMX9m7gPspGGwQp7ho6m9cJjjnER"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/base/PeripheryImmutableState.sol": {
        "keccak256": "0xbe690f025403c72781fddde9cb1a88a5602f4caf50bfa943977ab9444e46224f",
        "urls": [
          "bzz-raw://90466b5e0fda1ab7fb85b54e3daad7a1f126e21b5f7711bb5f80bd698621fae7",
          "dweb:/ipfs/QmPbxxogd74YoZKGH7jfGyyWshxhwopqB4CBLwuVt6WpKh"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/base/PeripheryPayments.sol": {
        "keccak256": "0x25b2d32a7688378633d857e1cb04a2e3fc1d0dede331258e409294e76bfd0c06",
        "urls": [
          "bzz-raw://7b646f709e2d04d4c079d611f7a95afcb887b9de76dab87c485cd36ee51f474a",
          "dweb:/ipfs/QmZ6G4gyTeoXXRCKwRqryLEJjy5oWzNuFqa1t5JWvQy5H6"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/base/PeripheryPaymentsWithFee.sol": {
        "keccak256": "0x7440d82d1b7ea569be24faf7020c5730b8fa9bf5994335a66b8b44c0c8d9f40c",
        "urls": [
          "bzz-raw://93903d2a5747389d2ed583a1479162a47c37b2866b781758e8327b4eea4ee417",
          "dweb:/ipfs/QmRaSGcYQkNix3EuBDTujdemQGTiqsHCAzFgjGZLwAuRcn"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/base/PeripheryValidation.sol": {
        "keccak256": "0xc736bab599912d6212e8414ee4ba7af0c1e08ff6aa11caa85f5f6e07f7d421c3",
        "urls": [
          "bzz-raw://06f6c13a86900c71fa486fc029a59d1b7eb96162bb42885b5f845d995294893e",
          "dweb:/ipfs/QmUcBxMsmncw9n6eXhzzwSasGBvBGKH5FT8HSrAxrsXV4A"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/base/SelfPermit.sol": {
        "keccak256": "0x3b450da4ffcae63ba0afb7a3847dc0019fc615901970ed5a5e245f66cdda2740",
        "urls": [
          "bzz-raw://9d8bfab6ad3544ff1101cd8787c645d097f47a9f0c6c124256bb0b5c52ff7474",
          "dweb:/ipfs/Qmab7VVttmrGePPAK3J96pXpzkGnUnkywS6WVbehRAQov2"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/interfaces/IMulticall.sol": {
        "keccak256": "0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b",
        "urls": [
          "bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016",
          "dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
        "keccak256": "0x72e2d91b64685e4c4725cb3d144626e770842c2d2e0525816f9dd2044f6c9483",
        "urls": [
          "bzz-raw://5c7aca85d579139d7dc1a68c0b85a73f02a6306009342c9eb5b57c90772564a1",
          "dweb:/ipfs/QmP2BhNYXDEnGLKBZR9guuYL2Q7848pTr5CCzPk1wGtwns"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
        "keccak256": "0x9f7d06f70bc237ffc6d3cb80c0035d28c1f08395e58aed0f5e85e0cbe402025b",
        "urls": [
          "bzz-raw://6637101237472ffd1cc53a8af074dd40bc2926f09825ccd1fecbee123b9afb3a",
          "dweb:/ipfs/QmU9PBHq6ow64uRYC7q6p8pKuep7zeSN89fF2c3VCTVdV1"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/interfaces/IPeripheryPaymentsWithFee.sol": {
        "keccak256": "0x23ebe0ced112c7ca3869868874b691fcbb50f90c482580dc9ebe718bda34edfc",
        "urls": [
          "bzz-raw://689ebfcb90a26bf31af6e35456e41940c23d145cfc59d1ae5f6fa060945dd768",
          "dweb:/ipfs/QmZxVsaUWqnEEsRcphuWBvuEExQxznztSmFUkMa5ks8AHY"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/interfaces/ISelfPermit.sol": {
        "keccak256": "0xe1a1c072855e687c90317c15b9b6ce81cc683723f73d70e47b40f2f9bad0c2be",
        "urls": [
          "bzz-raw://53b0881a1c55254d157054bd3d1c86982c0f5429bd2a9986c15479f6b71ef678",
          "dweb:/ipfs/Qmc9WZqXzQmqsA3xYxojbx9nXcG3FGuwAjM3opEmRGSnBb"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0xecc5c75ec063b34819a2d680bb1b0b6c2e1a9ad45b023907de7ed4211d0dc34d",
        "urls": [
          "bzz-raw://0ca1b7eda36ffac00aefaf77f9faeba2e0e19ca4b2ca57bf4e904875a4d947f9",
          "dweb:/ipfs/QmTw98r2h4qUVC17YqpZJ3Cpv8d4zSSKen6uGNqp5AKieN"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/interfaces/external/IERC20PermitAllowed.sol": {
        "keccak256": "0x8c4c1b8e724e0a78cb691d703dd37cd91b8bd6600537fb227807a194025a792d",
        "urls": [
          "bzz-raw://783be851155842a02cdb0483c3a69ecc0e7ae8545f65cec1d4aeb355b2026a7d",
          "dweb:/ipfs/QmZNBQosTjpGNKB3Eo2K6Zzye7FYiLVoEki5iPB2Y69jz2"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/interfaces/external/IWETH9.sol": {
        "keccak256": "0x6dd6547a2085d7882fe38920dfb0ddd9408d0fa8a3c777067a034ba8fd6c1947",
        "urls": [
          "bzz-raw://b3a1fd3e242c80cd62063eb19ea08d71eeb9cb5e2dbeabf5e2b1573327b57c5e",
          "dweb:/ipfs/QmZyPYGjKhGhyyTssyQ1p4ovy3heRGJzNCHukEPPodwzip"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/libraries/BytesLib.sol": {
        "keccak256": "0x68629e5b1a30b6490c6ae721c28117f6f963745462b007da0769758eb67f10d4",
        "urls": [
          "bzz-raw://370e31ceab1a7504f98dec122f65d9b8c6fc6420fd8cdd171b3dd57c4d5d21fc",
          "dweb:/ipfs/QmcquKATbnopgs92RdM5bKewt7GdCpgGhVY4hxmv1KjnnH"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/libraries/CallbackValidation.sol": {
        "keccak256": "0xe666aa91aff1c12fe1ccd9f92a4a1512ce68ae9d7e543b25817ebe84ce7ed73a",
        "urls": [
          "bzz-raw://6499103de599417de336fa23cdf8558bd4217d5c68f4d1b52ae001b216092596",
          "dweb:/ipfs/QmS5RHggvdLmh5jFn7LxXyW3FQDVtSFt4Zb5j8PztwmshW"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/libraries/Path.sol": {
        "keccak256": "0xb22c562b5175d50dbcc2224325666090d985f052abdcfe275c8dfc884e34de61",
        "urls": [
          "bzz-raw://27aeff27314476ab3c77313ae1f0c5b2442b86315f5ce741cb2150a87c3cbad3",
          "dweb:/ipfs/QmQNno2g1CJvjnH6ych4LuHr1UZDEZPACgYG4XvivxGrqV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/libraries/PoolAddress.sol": {
        "keccak256": "0x8ff537853fb14f848febb943ef2f7b81d26a3d1f5a020a6f59ddd5723ad3ad23",
        "urls": [
          "bzz-raw://6ed45c72a514f3c47656037157af3377f39bb0578cb99287a64e8539c4c4ce92",
          "dweb:/ipfs/QmUDNRkon5VEWdi6QkrLtpJK3LWtMGUN13Snn4EfMSdDeK"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x44982db20ac97a11aac60dde0fbc4120b05284b2641762264f6aa685d379808a",
        "urls": [
          "bzz-raw://b4a8049c9cc66d27cdbd693c18f0bd3d6a23419fe4d0ee9fe4df466c71e9b151",
          "dweb:/ipfs/QmXuFbQRVJreqMgiL4hy65BSPEcTzX4zhzss5HQBKRTAbN"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/v3-periphery/contracts/SwapRouter.sol",
    "id": 30915,
    "exportedSymbols": {
      "BlockTimestamp": [
        31233
      ],
      "BytesLib": [
        35054
      ],
      "CallbackValidation": [
        35116
      ],
      "IERC20": [
        2252
      ],
      "IERC20Permit": [
        1068
      ],
      "IERC20PermitAllowed": [
        33573
      ],
      "IMulticall": [
        32866
      ],
      "IPancakeV3Pool": [
        16124
      ],
      "IPancakeV3PoolActions": [
        16295
      ],
      "IPancakeV3PoolDerivedState": [
        16326
      ],
      "IPancakeV3PoolEvents": [
        16449
      ],
      "IPancakeV3PoolImmutables": [
        16489
      ],
      "IPancakeV3PoolOwnerActions": [
        16521
      ],
      "IPancakeV3PoolState": [
        16629
      ],
      "IPancakeV3SwapCallback": [
        16199
      ],
      "IPeripheryImmutableState": [
        33098
      ],
      "IPeripheryPayments": [
        33124
      ],
      "IPeripheryPaymentsWithFee": [
        33157
      ],
      "ISelfPermit": [
        33392
      ],
      "ISwapRouter": [
        33488
      ],
      "IWETH9": [
        33590
      ],
      "LowGasSafeMath": [
        17280
      ],
      "Multicall": [
        31743
      ],
      "Path": [
        38970
      ],
      "PeripheryImmutableState": [
        31784
      ],
      "PeripheryPayments": [
        31994
      ],
      "PeripheryPaymentsWithFee": [
        32175
      ],
      "PeripheryValidation": [
        32195
      ],
      "PoolAddress": [
        39065
      ],
      "SafeCast": [
        18258
      ],
      "SelfPermit": [
        32454
      ],
      "SwapRouter": [
        30914
      ],
      "TickMath": [
        20294
      ],
      "TransferHelper": [
        40069
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:9115:137",
    "nodes": [
      {
        "id": 30247,
        "nodeType": "PragmaDirective",
        "src": "45:23:137",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.7",
          ".6"
        ]
      },
      {
        "id": 30248,
        "nodeType": "PragmaDirective",
        "src": "69:19:137",
        "nodes": [],
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 30249,
        "nodeType": "ImportDirective",
        "src": "90:63:137",
        "nodes": [],
        "absolutePath": "src/v3-core/contracts/libraries/SafeCast.sol",
        "file": "@pancakeswap/v3-core/contracts/libraries/SafeCast.sol",
        "scope": 30915,
        "sourceUnit": 18259,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30250,
        "nodeType": "ImportDirective",
        "src": "154:63:137",
        "nodes": [],
        "absolutePath": "src/v3-core/contracts/libraries/TickMath.sol",
        "file": "@pancakeswap/v3-core/contracts/libraries/TickMath.sol",
        "scope": 30915,
        "sourceUnit": 20295,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30251,
        "nodeType": "ImportDirective",
        "src": "218:70:137",
        "nodes": [],
        "absolutePath": "src/v3-core/contracts/interfaces/IPancakeV3Pool.sol",
        "file": "@pancakeswap/v3-core/contracts/interfaces/IPancakeV3Pool.sol",
        "scope": 30915,
        "sourceUnit": 16125,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30252,
        "nodeType": "ImportDirective",
        "src": "290:38:137",
        "nodes": [],
        "absolutePath": "src/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "./interfaces/ISwapRouter.sol",
        "scope": 30915,
        "sourceUnit": 33489,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30253,
        "nodeType": "ImportDirective",
        "src": "329:44:137",
        "nodes": [],
        "absolutePath": "src/v3-periphery/contracts/base/PeripheryImmutableState.sol",
        "file": "./base/PeripheryImmutableState.sol",
        "scope": 30915,
        "sourceUnit": 31785,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30254,
        "nodeType": "ImportDirective",
        "src": "374:40:137",
        "nodes": [],
        "absolutePath": "src/v3-periphery/contracts/base/PeripheryValidation.sol",
        "file": "./base/PeripheryValidation.sol",
        "scope": 30915,
        "sourceUnit": 32196,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30255,
        "nodeType": "ImportDirective",
        "src": "415:45:137",
        "nodes": [],
        "absolutePath": "src/v3-periphery/contracts/base/PeripheryPaymentsWithFee.sol",
        "file": "./base/PeripheryPaymentsWithFee.sol",
        "scope": 30915,
        "sourceUnit": 32176,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30256,
        "nodeType": "ImportDirective",
        "src": "461:30:137",
        "nodes": [],
        "absolutePath": "src/v3-periphery/contracts/base/Multicall.sol",
        "file": "./base/Multicall.sol",
        "scope": 30915,
        "sourceUnit": 31744,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30257,
        "nodeType": "ImportDirective",
        "src": "492:31:137",
        "nodes": [],
        "absolutePath": "src/v3-periphery/contracts/base/SelfPermit.sol",
        "file": "./base/SelfPermit.sol",
        "scope": 30915,
        "sourceUnit": 32455,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30258,
        "nodeType": "ImportDirective",
        "src": "524:30:137",
        "nodes": [],
        "absolutePath": "src/v3-periphery/contracts/libraries/Path.sol",
        "file": "./libraries/Path.sol",
        "scope": 30915,
        "sourceUnit": 38971,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30259,
        "nodeType": "ImportDirective",
        "src": "555:37:137",
        "nodes": [],
        "absolutePath": "src/v3-periphery/contracts/libraries/PoolAddress.sol",
        "file": "./libraries/PoolAddress.sol",
        "scope": 30915,
        "sourceUnit": 39066,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30260,
        "nodeType": "ImportDirective",
        "src": "593:44:137",
        "nodes": [],
        "absolutePath": "src/v3-periphery/contracts/libraries/CallbackValidation.sol",
        "file": "./libraries/CallbackValidation.sol",
        "scope": 30915,
        "sourceUnit": 35117,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30261,
        "nodeType": "ImportDirective",
        "src": "638:42:137",
        "nodes": [],
        "absolutePath": "src/v3-periphery/contracts/interfaces/external/IWETH9.sol",
        "file": "./interfaces/external/IWETH9.sol",
        "scope": 30915,
        "sourceUnit": 33591,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30914,
        "nodeType": "ContractDefinition",
        "src": "787:8372:137",
        "nodes": [
          {
            "id": 30277,
            "nodeType": "UsingForDirective",
            "src": "947:21:137",
            "nodes": [],
            "libraryName": {
              "id": 30275,
              "name": "Path",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 38970,
              "src": "953:4:137",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Path_$38970",
                "typeString": "library Path"
              }
            },
            "typeName": {
              "id": 30276,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "962:5:137",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "id": 30280,
            "nodeType": "UsingForDirective",
            "src": "973:27:137",
            "nodes": [],
            "libraryName": {
              "id": 30278,
              "name": "SafeCast",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18258,
              "src": "979:8:137",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeCast_$18258",
                "typeString": "library SafeCast"
              }
            },
            "typeName": {
              "id": 30279,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "992:7:137",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 30288,
            "nodeType": "VariableDeclaration",
            "src": "1166:69:137",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 30281,
              "nodeType": "StructuredDocumentation",
              "src": "1006:155:137",
              "text": "@dev Used as the placeholder value for amountInCached, because the computed amount in for an exact output swap\n can never actually be this value"
            },
            "mutability": "constant",
            "name": "DEFAULT_AMOUNT_IN_CACHED",
            "scope": 30914,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30282,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1166:7:137",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "arguments": [
                  {
                    "id": 30285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1223:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint256_$",
                      "typeString": "type(uint256)"
                    },
                    "typeName": {
                      "id": 30284,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1223:7:137",
                      "typeDescriptions": {}
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_type$_t_uint256_$",
                      "typeString": "type(uint256)"
                    }
                  ],
                  "id": 30283,
                  "name": "type",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -27,
                  "src": "1218:4:137",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                    "typeString": "function () pure"
                  }
                },
                "id": 30286,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "functionCall",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "1218:13:137",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                  "typeString": "type(uint256)"
                }
              },
              "id": 30287,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "max",
              "nodeType": "MemberAccess",
              "src": "1218:17:137",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 30292,
            "nodeType": "VariableDeclaration",
            "src": "1350:57:137",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 30289,
              "nodeType": "StructuredDocumentation",
              "src": "1242:103:137",
              "text": "@dev Transient storage variable used for returning the computed amount in for an exact output swap."
            },
            "mutability": "mutable",
            "name": "amountInCached",
            "scope": 30914,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30290,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1350:7:137",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "id": 30291,
              "name": "DEFAULT_AMOUNT_IN_CACHED",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30288,
              "src": "1383:24:137",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 30307,
            "nodeType": "FunctionDefinition",
            "src": "1414:120:137",
            "nodes": [],
            "body": {
              "id": 30306,
              "nodeType": "Block",
              "src": "1532:2:137",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 30301,
                    "name": "_deployer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30294,
                    "src": "1503:9:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 30302,
                    "name": "_factory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30296,
                    "src": "1514:8:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 30303,
                    "name": "_WETH9",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30298,
                    "src": "1524:6:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 30304,
                "modifierName": {
                  "id": 30300,
                  "name": "PeripheryImmutableState",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 31784,
                  "src": "1479:23:137",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_PeripheryImmutableState_$31784_$",
                    "typeString": "type(contract PeripheryImmutableState)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1479:52:137"
              }
            ],
            "name": "",
            "parameters": {
              "id": 30299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30294,
                  "mutability": "mutable",
                  "name": "_deployer",
                  "nodeType": "VariableDeclaration",
                  "scope": 30307,
                  "src": "1426:17:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1426:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30296,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nodeType": "VariableDeclaration",
                  "scope": 30307,
                  "src": "1445:16:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1445:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30298,
                  "mutability": "mutable",
                  "name": "_WETH9",
                  "nodeType": "VariableDeclaration",
                  "scope": 30307,
                  "src": "1463:14:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1463:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1425:53:137"
            },
            "returnParameters": {
              "id": 30305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1532:0:137"
            },
            "scope": 30914,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30333,
            "nodeType": "FunctionDefinition",
            "src": "1644:250:137",
            "nodes": [],
            "body": {
              "id": 30332,
              "nodeType": "Block",
              "src": "1773:121:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30322,
                            "name": "deployer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31753,
                            "src": "1832:8:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 30325,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30310,
                                "src": "1865:6:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 30326,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30312,
                                "src": "1873:6:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 30327,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30314,
                                "src": "1881:3:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              ],
                              "expression": {
                                "id": 30323,
                                "name": "PoolAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39065,
                                "src": "1842:11:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_PoolAddress_$39065_$",
                                  "typeString": "type(library PoolAddress)"
                                }
                              },
                              "id": 30324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getPoolKey",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 39014,
                              "src": "1842:22:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_uint24_$returns$_t_struct$_PoolKey_$38983_memory_ptr_$",
                                "typeString": "function (address,address,uint24) pure returns (struct PoolAddress.PoolKey memory)"
                              }
                            },
                            "id": 30328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1842:43:137",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolKey_$38983_memory_ptr",
                              "typeString": "struct PoolAddress.PoolKey memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_struct$_PoolKey_$38983_memory_ptr",
                              "typeString": "struct PoolAddress.PoolKey memory"
                            }
                          ],
                          "expression": {
                            "id": 30320,
                            "name": "PoolAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39065,
                            "src": "1805:11:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PoolAddress_$39065_$",
                              "typeString": "type(library PoolAddress)"
                            }
                          },
                          "id": 30321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "computeAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39064,
                          "src": "1805:26:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_address_$_t_struct$_PoolKey_$38983_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (address,struct PoolAddress.PoolKey memory) pure returns (address)"
                          }
                        },
                        "id": 30329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1805:81:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30319,
                      "name": "IPancakeV3Pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16124,
                      "src": "1790:14:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IPancakeV3Pool_$16124_$",
                        "typeString": "type(contract IPancakeV3Pool)"
                      }
                    },
                    "id": 30330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1790:97:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPancakeV3Pool_$16124",
                      "typeString": "contract IPancakeV3Pool"
                    }
                  },
                  "functionReturnParameters": 30318,
                  "id": 30331,
                  "nodeType": "Return",
                  "src": "1783:104:137"
                }
              ]
            },
            "documentation": {
              "id": 30308,
              "nodeType": "StructuredDocumentation",
              "src": "1540:99:137",
              "text": "@dev Returns the pool for the given token pair and fee. The pool contract may or may not exist."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPool",
            "parameters": {
              "id": 30315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30310,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nodeType": "VariableDeclaration",
                  "scope": 30333,
                  "src": "1670:14:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1670:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30312,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nodeType": "VariableDeclaration",
                  "scope": 30333,
                  "src": "1694:14:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1694:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30314,
                  "mutability": "mutable",
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 30333,
                  "src": "1718:10:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 30313,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1718:6:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1660:74:137"
            },
            "returnParameters": {
              "id": 30318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30317,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 30333,
                  "src": "1757:14:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPancakeV3Pool_$16124",
                    "typeString": "contract IPancakeV3Pool"
                  },
                  "typeName": {
                    "id": 30316,
                    "name": "IPancakeV3Pool",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16124,
                    "src": "1757:14:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPancakeV3Pool_$16124",
                      "typeString": "contract IPancakeV3Pool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1756:16:137"
            },
            "scope": 30914,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 30338,
            "nodeType": "StructDefinition",
            "src": "1900:74:137",
            "nodes": [],
            "canonicalName": "SwapRouter.SwapCallbackData",
            "members": [
              {
                "constant": false,
                "id": 30335,
                "mutability": "mutable",
                "name": "path",
                "nodeType": "VariableDeclaration",
                "scope": 30338,
                "src": "1934:10:137",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 30334,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1934:5:137",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30337,
                "mutability": "mutable",
                "name": "payer",
                "nodeType": "VariableDeclaration",
                "scope": 30338,
                "src": "1954:13:137",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 30336,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1954:7:137",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SwapCallbackData",
            "scope": 30914,
            "visibility": "public"
          },
          {
            "id": 30468,
            "nodeType": "FunctionDefinition",
            "src": "2023:1295:137",
            "nodes": [],
            "body": {
              "id": 30467,
              "nodeType": "Block",
              "src": "2166:1152:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 30356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 30352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30350,
                            "name": "amount0Delta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30341,
                            "src": "2184:12:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 30351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2199:1:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2184:16:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 30355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30353,
                            "name": "amount1Delta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30343,
                            "src": "2204:12:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 30354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2219:1:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2204:16:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2184:36:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 30349,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2176:7:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 30357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2176:45:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30358,
                  "nodeType": "ExpressionStatement",
                  "src": "2176:45:137"
                },
                {
                  "assignments": [
                    30360
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30360,
                      "mutability": "mutable",
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 30467,
                      "src": "2294:28:137",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                        "typeString": "struct SwapRouter.SwapCallbackData"
                      },
                      "typeName": {
                        "id": 30359,
                        "name": "SwapCallbackData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 30338,
                        "src": "2294:16:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapCallbackData_$30338_storage_ptr",
                          "typeString": "struct SwapRouter.SwapCallbackData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30367,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30363,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30345,
                        "src": "2336:5:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 30364,
                            "name": "SwapCallbackData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30338,
                            "src": "2344:16:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_SwapCallbackData_$30338_storage_ptr_$",
                              "typeString": "type(struct SwapRouter.SwapCallbackData storage pointer)"
                            }
                          }
                        ],
                        "id": 30365,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2343:18:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_SwapCallbackData_$30338_storage_ptr_$",
                          "typeString": "type(struct SwapRouter.SwapCallbackData storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_SwapCallbackData_$30338_storage_ptr_$",
                          "typeString": "type(struct SwapRouter.SwapCallbackData storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 30361,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2325:3:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 30362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2325:10:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 30366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2325:37:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                      "typeString": "struct SwapRouter.SwapCallbackData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2294:68:137"
                },
                {
                  "assignments": [
                    30369,
                    30371,
                    30373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30369,
                      "mutability": "mutable",
                      "name": "tokenIn",
                      "nodeType": "VariableDeclaration",
                      "scope": 30467,
                      "src": "2373:15:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30368,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2373:7:137",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 30371,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nodeType": "VariableDeclaration",
                      "scope": 30467,
                      "src": "2390:16:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30370,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2390:7:137",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 30373,
                      "mutability": "mutable",
                      "name": "fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 30467,
                      "src": "2408:10:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 30372,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "2408:6:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30378,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 30374,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30360,
                          "src": "2422:4:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                            "typeString": "struct SwapRouter.SwapCallbackData memory"
                          }
                        },
                        "id": 30375,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "path",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30335,
                        "src": "2422:9:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 30376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decodeFirstPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38936,
                      "src": "2422:25:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_uint24_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (address,address,uint24)"
                      }
                    },
                    "id": 30377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2422:27:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint24_$",
                      "typeString": "tuple(address,address,uint24)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2372:77:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30382,
                        "name": "deployer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31753,
                        "src": "2493:8:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 30383,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30369,
                        "src": "2503:7:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 30384,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30371,
                        "src": "2512:8:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 30385,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30373,
                        "src": "2522:3:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      ],
                      "expression": {
                        "id": 30379,
                        "name": "CallbackValidation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35116,
                        "src": "2459:18:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CallbackValidation_$35116_$",
                          "typeString": "type(library CallbackValidation)"
                        }
                      },
                      "id": 30381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verifyCallback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35084,
                      "src": "2459:33:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint24_$returns$_t_contract$_IPancakeV3Pool_$16124_$",
                        "typeString": "function (address,address,address,uint24) view returns (contract IPancakeV3Pool)"
                      }
                    },
                    "id": 30386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2459:67:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPancakeV3Pool_$16124",
                      "typeString": "contract IPancakeV3Pool"
                    }
                  },
                  "id": 30387,
                  "nodeType": "ExpressionStatement",
                  "src": "2459:67:137"
                },
                {
                  "assignments": [
                    30389,
                    30391
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30389,
                      "mutability": "mutable",
                      "name": "isExactInput",
                      "nodeType": "VariableDeclaration",
                      "scope": 30467,
                      "src": "2538:17:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 30388,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2538:4:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 30391,
                      "mutability": "mutable",
                      "name": "amountToPay",
                      "nodeType": "VariableDeclaration",
                      "scope": 30467,
                      "src": "2557:19:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30390,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2557:7:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30412,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 30394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 30392,
                        "name": "amount0Delta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30341,
                        "src": "2592:12:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 30393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2607:1:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2592:16:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 30405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30403,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30371,
                            "src": "2690:8:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 30404,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30369,
                            "src": "2701:7:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2690:18:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 30408,
                              "name": "amount1Delta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30343,
                              "src": "2718:12:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 30407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2710:7:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 30406,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2710:7:137",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2710:21:137",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 30410,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2689:43:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256)"
                      }
                    },
                    "id": 30411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2592:140:137",
                    "trueExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 30397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30395,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30369,
                            "src": "2628:7:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 30396,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30371,
                            "src": "2638:8:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2628:18:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 30400,
                              "name": "amount0Delta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30341,
                              "src": "2656:12:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 30399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2648:7:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 30398,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2648:7:137",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2648:21:137",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 30402,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2627:43:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2537:195:137"
                },
                {
                  "condition": {
                    "id": 30413,
                    "name": "isExactInput",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30389,
                    "src": "2746:12:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 30465,
                    "nodeType": "Block",
                    "src": "2840:472:137",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "expression": {
                                "id": 30424,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30360,
                                "src": "2910:4:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                                  "typeString": "struct SwapRouter.SwapCallbackData memory"
                                }
                              },
                              "id": 30425,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "path",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 30335,
                              "src": "2910:9:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 30426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hasMultiplePools",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38884,
                            "src": "2910:26:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$bound_to$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) pure returns (bool)"
                            }
                          },
                          "id": 30427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2910:28:137",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 30463,
                          "nodeType": "Block",
                          "src": "3083:219:137",
                          "statements": [
                            {
                              "expression": {
                                "id": 30448,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 30446,
                                  "name": "amountInCached",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30292,
                                  "src": "3101:14:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 30447,
                                  "name": "amountToPay",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30391,
                                  "src": "3118:11:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3101:28:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 30449,
                              "nodeType": "ExpressionStatement",
                              "src": "3101:28:137"
                            },
                            {
                              "expression": {
                                "id": 30452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 30450,
                                  "name": "tokenIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30369,
                                  "src": "3147:7:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 30451,
                                  "name": "tokenOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30371,
                                  "src": "3157:8:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3147:18:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 30453,
                              "nodeType": "ExpressionStatement",
                              "src": "3147:18:137"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 30455,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30369,
                                    "src": "3242:7:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 30456,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 30360,
                                      "src": "3251:4:137",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                                        "typeString": "struct SwapRouter.SwapCallbackData memory"
                                      }
                                    },
                                    "id": 30457,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "payer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 30337,
                                    "src": "3251:10:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 30458,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3263:3:137",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 30459,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3263:10:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "id": 30460,
                                    "name": "amountToPay",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30391,
                                    "src": "3275:11:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 30454,
                                  "name": "pay",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31993,
                                  "src": "3238:3:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,address,uint256)"
                                  }
                                },
                                "id": 30461,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3238:49:137",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 30462,
                              "nodeType": "ExpressionStatement",
                              "src": "3238:49:137"
                            }
                          ]
                        },
                        "id": 30464,
                        "nodeType": "IfStatement",
                        "src": "2906:396:137",
                        "trueBody": {
                          "id": 30445,
                          "nodeType": "Block",
                          "src": "2940:137:137",
                          "statements": [
                            {
                              "expression": {
                                "id": 30435,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 30428,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30360,
                                    "src": "2958:4:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                                      "typeString": "struct SwapRouter.SwapCallbackData memory"
                                    }
                                  },
                                  "id": 30430,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "path",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 30335,
                                  "src": "2958:9:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "expression": {
                                        "id": 30431,
                                        "name": "data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 30360,
                                        "src": "2970:4:137",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                                          "typeString": "struct SwapRouter.SwapCallbackData memory"
                                        }
                                      },
                                      "id": 30432,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "path",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 30335,
                                      "src": "2970:9:137",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 30433,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "skipToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 38969,
                                    "src": "2970:19:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 30434,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2970:21:137",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "src": "2958:33:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 30436,
                              "nodeType": "ExpressionStatement",
                              "src": "2958:33:137"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 30438,
                                    "name": "amountToPay",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30391,
                                    "src": "3029:11:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 30439,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3042:3:137",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 30440,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3042:10:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 30441,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3054:1:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "id": 30442,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30360,
                                    "src": "3057:4:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                                      "typeString": "struct SwapRouter.SwapCallbackData memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                                      "typeString": "struct SwapRouter.SwapCallbackData memory"
                                    }
                                  ],
                                  "id": 30437,
                                  "name": "exactOutputInternal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30819,
                                  "src": "3009:19:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint160_$_t_struct$_SwapCallbackData_$30338_memory_ptr_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,address,uint160,struct SwapRouter.SwapCallbackData memory) returns (uint256)"
                                  }
                                },
                                "id": 30443,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3009:53:137",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 30444,
                              "nodeType": "ExpressionStatement",
                              "src": "3009:53:137"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 30466,
                  "nodeType": "IfStatement",
                  "src": "2742:570:137",
                  "trueBody": {
                    "id": 30423,
                    "nodeType": "Block",
                    "src": "2760:74:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30415,
                              "name": "tokenIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30369,
                              "src": "2778:7:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 30416,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30360,
                                "src": "2787:4:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                                  "typeString": "struct SwapRouter.SwapCallbackData memory"
                                }
                              },
                              "id": 30417,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "payer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 30337,
                              "src": "2787:10:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 30418,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2799:3:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 30419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2799:10:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30420,
                              "name": "amountToPay",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30391,
                              "src": "2811:11:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 30414,
                            "name": "pay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31993,
                            "src": "2774:3:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 30421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2774:49:137",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30422,
                        "nodeType": "ExpressionStatement",
                        "src": "2774:49:137"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              16198
            ],
            "documentation": {
              "id": 30339,
              "nodeType": "StructuredDocumentation",
              "src": "1980:38:137",
              "text": "@inheritdoc IPancakeV3SwapCallback"
            },
            "functionSelector": "23a69e75",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pancakeV3SwapCallback",
            "overrides": {
              "id": 30347,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2157:8:137"
            },
            "parameters": {
              "id": 30346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30341,
                  "mutability": "mutable",
                  "name": "amount0Delta",
                  "nodeType": "VariableDeclaration",
                  "scope": 30468,
                  "src": "2063:19:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 30340,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2063:6:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30343,
                  "mutability": "mutable",
                  "name": "amount1Delta",
                  "nodeType": "VariableDeclaration",
                  "scope": 30468,
                  "src": "2092:19:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 30342,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2092:6:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30345,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 30468,
                  "src": "2121:20:137",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 30344,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2121:5:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2053:94:137"
            },
            "returnParameters": {
              "id": 30348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2166:0:137"
            },
            "scope": 30914,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30561,
            "nodeType": "FunctionDefinition",
            "src": "3372:934:137",
            "nodes": [],
            "body": {
              "id": 30560,
              "nodeType": "Block",
              "src": "3568:738:137",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 30487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30482,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30473,
                      "src": "3645:9:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 30485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3666:1:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 30484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3658:7:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 30483,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3658:7:137",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 30486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3658:10:137",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3645:23:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30495,
                  "nodeType": "IfStatement",
                  "src": "3641:54:137",
                  "trueBody": {
                    "expression": {
                      "id": 30493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 30488,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30473,
                        "src": "3670:9:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 30491,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3690:4:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapRouter_$30914",
                              "typeString": "contract SwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapRouter_$30914",
                              "typeString": "contract SwapRouter"
                            }
                          ],
                          "id": 30490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3682:7:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30489,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3682:7:137",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3682:13:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "3670:25:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 30494,
                    "nodeType": "ExpressionStatement",
                    "src": "3670:25:137"
                  }
                },
                {
                  "assignments": [
                    30497,
                    30499,
                    30501
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30497,
                      "mutability": "mutable",
                      "name": "tokenIn",
                      "nodeType": "VariableDeclaration",
                      "scope": 30560,
                      "src": "3707:15:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30496,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3707:7:137",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 30499,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nodeType": "VariableDeclaration",
                      "scope": 30560,
                      "src": "3724:16:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30498,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3724:7:137",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 30501,
                      "mutability": "mutable",
                      "name": "fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 30560,
                      "src": "3742:10:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 30500,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "3742:6:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30506,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 30502,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30477,
                          "src": "3756:4:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                            "typeString": "struct SwapRouter.SwapCallbackData memory"
                          }
                        },
                        "id": 30503,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "path",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30335,
                        "src": "3756:9:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 30504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decodeFirstPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38936,
                      "src": "3756:25:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_uint24_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (address,address,uint24)"
                      }
                    },
                    "id": 30505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3756:27:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint24_$",
                      "typeString": "tuple(address,address,uint24)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3706:77:137"
                },
                {
                  "assignments": [
                    30508
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30508,
                      "mutability": "mutable",
                      "name": "zeroForOne",
                      "nodeType": "VariableDeclaration",
                      "scope": 30560,
                      "src": "3794:15:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 30507,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3794:4:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30512,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 30511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30509,
                      "name": "tokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30497,
                      "src": "3812:7:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 30510,
                      "name": "tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30499,
                      "src": "3822:8:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3812:18:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3794:36:137"
                },
                {
                  "assignments": [
                    30514,
                    30516
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30514,
                      "mutability": "mutable",
                      "name": "amount0",
                      "nodeType": "VariableDeclaration",
                      "scope": 30560,
                      "src": "3842:14:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 30513,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3842:6:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 30516,
                      "mutability": "mutable",
                      "name": "amount1",
                      "nodeType": "VariableDeclaration",
                      "scope": 30560,
                      "src": "3858:14:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 30515,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3858:6:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30549,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30523,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30473,
                        "src": "3942:9:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 30524,
                        "name": "zeroForOne",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30508,
                        "src": "3969:10:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 30525,
                            "name": "amountIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30471,
                            "src": "3997:8:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 30526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "toInt256",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18257,
                          "src": "3997:17:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (int256)"
                          }
                        },
                        "id": 30527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3997:19:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          "id": 30530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30528,
                            "name": "sqrtPriceLimitX96",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30475,
                            "src": "4034:17:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 30529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4055:1:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4034:22:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "id": 30542,
                          "name": "sqrtPriceLimitX96",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30475,
                          "src": "4174:17:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "id": 30543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "4034:157:137",
                        "trueExpression": {
                          "components": [
                            {
                              "condition": {
                                "id": 30531,
                                "name": "zeroForOne",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30508,
                                "src": "4080:10:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                },
                                "id": 30539,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 30536,
                                    "name": "TickMath",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20294,
                                    "src": "4123:8:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TickMath_$20294_$",
                                      "typeString": "type(library TickMath)"
                                    }
                                  },
                                  "id": 30537,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "MAX_SQRT_RATIO",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 19780,
                                  "src": "4123:23:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 30538,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4149:1:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "4123:27:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              "id": 30540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "4080:70:137",
                              "trueExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                },
                                "id": 30535,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 30532,
                                    "name": "TickMath",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20294,
                                    "src": "4093:8:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TickMath_$20294_$",
                                      "typeString": "type(library TickMath)"
                                    }
                                  },
                                  "id": 30533,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "MIN_SQRT_RATIO",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 19776,
                                  "src": "4093:23:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 30534,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4119:1:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "4093:27:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            }
                          ],
                          "id": 30541,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4079:72:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30546,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30477,
                            "src": "4220:4:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                              "typeString": "struct SwapRouter.SwapCallbackData memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                              "typeString": "struct SwapRouter.SwapCallbackData memory"
                            }
                          ],
                          "expression": {
                            "id": 30544,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4209:3:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 30545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "4209:10:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 30547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4209:16:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 30518,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30497,
                            "src": "3896:7:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 30519,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30499,
                            "src": "3905:8:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 30520,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30501,
                            "src": "3915:3:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          ],
                          "id": 30517,
                          "name": "getPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30333,
                          "src": "3888:7:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_contract$_IPancakeV3Pool_$16124_$",
                            "typeString": "function (address,address,uint24) view returns (contract IPancakeV3Pool)"
                          }
                        },
                        "id": 30521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3888:31:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancakeV3Pool_$16124",
                          "typeString": "contract IPancakeV3Pool"
                        }
                      },
                      "id": 30522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16276,
                      "src": "3888:36:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$_t_int256_$_t_uint160_$_t_bytes_memory_ptr_$returns$_t_int256_$_t_int256_$",
                        "typeString": "function (address,bool,int256,uint160,bytes memory) external returns (int256,int256)"
                      }
                    },
                    "id": 30548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3888:351:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
                      "typeString": "tuple(int256,int256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3841:398:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "-",
                        "prefix": true,
                        "src": "4265:33:137",
                        "subExpression": {
                          "components": [
                            {
                              "condition": {
                                "id": 30552,
                                "name": "zeroForOne",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30508,
                                "src": "4267:10:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "id": 30554,
                                "name": "amount0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30514,
                                "src": "4290:7:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 30555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "4267:30:137",
                              "trueExpression": {
                                "id": 30553,
                                "name": "amount1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30516,
                                "src": "4280:7:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "id": 30556,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4266:32:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 30551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4257:7:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 30550,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4257:7:137",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 30558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4257:42:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 30481,
                  "id": 30559,
                  "nodeType": "Return",
                  "src": "4250:49:137"
                }
              ]
            },
            "documentation": {
              "id": 30469,
              "nodeType": "StructuredDocumentation",
              "src": "3324:43:137",
              "text": "@dev Performs a single exact input swap"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exactInputInternal",
            "parameters": {
              "id": 30478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30471,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nodeType": "VariableDeclaration",
                  "scope": 30561,
                  "src": "3409:16:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30470,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3409:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30473,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 30561,
                  "src": "3435:17:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30472,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3435:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30475,
                  "mutability": "mutable",
                  "name": "sqrtPriceLimitX96",
                  "nodeType": "VariableDeclaration",
                  "scope": 30561,
                  "src": "3462:25:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 30474,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "3462:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30477,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 30561,
                  "src": "3497:28:137",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                    "typeString": "struct SwapRouter.SwapCallbackData"
                  },
                  "typeName": {
                    "id": 30476,
                    "name": "SwapCallbackData",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 30338,
                    "src": "3497:16:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SwapCallbackData_$30338_storage_ptr",
                      "typeString": "struct SwapRouter.SwapCallbackData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3399:132:137"
            },
            "returnParameters": {
              "id": 30481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30480,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nodeType": "VariableDeclaration",
                  "scope": 30561,
                  "src": "3549:17:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3549:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3548:19:137"
            },
            "scope": 30914,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 30607,
            "nodeType": "FunctionDefinition",
            "src": "4344:547:137",
            "nodes": [],
            "body": {
              "id": 30606,
              "nodeType": "Block",
              "src": "4539:352:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30574,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30572,
                      "src": "4549:9:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 30576,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30564,
                            "src": "4593:6:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$33416_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                            }
                          },
                          "id": 30577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountIn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33411,
                          "src": "4593:15:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 30578,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30564,
                            "src": "4622:6:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$33416_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                            }
                          },
                          "id": 30579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33407,
                          "src": "4622:16:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 30580,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30564,
                            "src": "4652:6:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$33416_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                            }
                          },
                          "id": 30581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sqrtPriceLimitX96",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33415,
                          "src": "4652:24:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 30585,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30564,
                                    "src": "4731:6:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$33416_calldata_ptr",
                                      "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                                    }
                                  },
                                  "id": 30586,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenIn",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 33401,
                                  "src": "4731:14:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 30587,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30564,
                                    "src": "4747:6:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$33416_calldata_ptr",
                                      "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                                    }
                                  },
                                  "id": 30588,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "fee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 33405,
                                  "src": "4747:10:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 30589,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30564,
                                    "src": "4759:6:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$33416_calldata_ptr",
                                      "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                                    }
                                  },
                                  "id": 30590,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenOut",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 33403,
                                  "src": "4759:15:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 30583,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4714:3:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 30584,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4714:16:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 30591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4714:61:137",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 30592,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4784:3:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 30593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4784:10:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 30582,
                            "name": "SwapCallbackData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30338,
                            "src": "4690:16:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_SwapCallbackData_$30338_storage_ptr_$",
                              "typeString": "type(struct SwapRouter.SwapCallbackData storage pointer)"
                            }
                          },
                          "id": 30594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "path",
                            "payer"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "4690:106:137",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                            "typeString": "struct SwapRouter.SwapCallbackData memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          {
                            "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                            "typeString": "struct SwapRouter.SwapCallbackData memory"
                          }
                        ],
                        "id": 30575,
                        "name": "exactInputInternal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30561,
                        "src": "4561:18:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint160_$_t_struct$_SwapCallbackData_$30338_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (uint256,address,uint160,struct SwapRouter.SwapCallbackData memory) returns (uint256)"
                        }
                      },
                      "id": 30595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4561:245:137",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4549:257:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30597,
                  "nodeType": "ExpressionStatement",
                  "src": "4549:257:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30599,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30572,
                          "src": "4824:9:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 30600,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30564,
                            "src": "4837:6:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$33416_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                            }
                          },
                          "id": 30601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountOutMinimum",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33413,
                          "src": "4837:23:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4824:36:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6f206c6974746c65207265636569766564",
                        "id": 30603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4862:21:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f037a9cbca9be03859489f289f0cf5f85c0414bbfdd9785bc7ab31bd734e249c",
                          "typeString": "literal_string \"Too little received\""
                        },
                        "value": "Too little received"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f037a9cbca9be03859489f289f0cf5f85c0414bbfdd9785bc7ab31bd734e249c",
                          "typeString": "literal_string \"Too little received\""
                        }
                      ],
                      "id": 30598,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4816:7:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 30604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4816:68:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30605,
                  "nodeType": "ExpressionStatement",
                  "src": "4816:68:137"
                }
              ]
            },
            "baseFunctions": [
              33424
            ],
            "documentation": {
              "id": 30562,
              "nodeType": "StructuredDocumentation",
              "src": "4312:27:137",
              "text": "@inheritdoc ISwapRouter"
            },
            "functionSelector": "414bf389",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 30568,
                      "name": "params",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30564,
                      "src": "4482:6:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$33416_calldata_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                      }
                    },
                    "id": 30569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "deadline",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 33409,
                    "src": "4482:15:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 30570,
                "modifierName": {
                  "id": 30567,
                  "name": "checkDeadline",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 32194,
                  "src": "4468:13:137",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4468:30:137"
              }
            ],
            "name": "exactInputSingle",
            "overrides": {
              "id": 30566,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4451:8:137"
            },
            "parameters": {
              "id": 30565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30564,
                  "mutability": "mutable",
                  "name": "params",
                  "nodeType": "VariableDeclaration",
                  "scope": 30607,
                  "src": "4370:38:137",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExactInputSingleParams_$33416_calldata_ptr",
                    "typeString": "struct ISwapRouter.ExactInputSingleParams"
                  },
                  "typeName": {
                    "id": 30563,
                    "name": "ExactInputSingleParams",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 33416,
                    "src": "4370:22:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$33416_storage_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4369:40:137"
            },
            "returnParameters": {
              "id": 30573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30572,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nodeType": "VariableDeclaration",
                  "scope": 30607,
                  "src": "4516:17:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4516:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4515:19:137"
            },
            "scope": 30914,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30695,
            "nodeType": "FunctionDefinition",
            "src": "4929:1275:137",
            "nodes": [],
            "body": {
              "id": 30694,
              "nodeType": "Block",
              "src": "5110:1094:137",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    30621
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30621,
                      "mutability": "mutable",
                      "name": "payer",
                      "nodeType": "VariableDeclaration",
                      "scope": 30694,
                      "src": "5120:13:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30620,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5120:7:137",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30624,
                  "initialValue": {
                    "expression": {
                      "id": 30622,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "5136:3:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 30623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "5136:10:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5120:26:137"
                },
                {
                  "body": {
                    "id": 30684,
                    "nodeType": "Block",
                    "src": "5207:912:137",
                    "statements": [
                      {
                        "assignments": [
                          30627
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30627,
                            "mutability": "mutable",
                            "name": "hasMultiplePools",
                            "nodeType": "VariableDeclaration",
                            "scope": 30684,
                            "src": "5221:21:137",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 30626,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5221:4:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30632,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "expression": {
                                "id": 30628,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30610,
                                "src": "5245:6:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExactInputParams_$33435_memory_ptr",
                                  "typeString": "struct ISwapRouter.ExactInputParams memory"
                                }
                              },
                              "id": 30629,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "path",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33426,
                              "src": "5245:11:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 30630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hasMultiplePools",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38884,
                            "src": "5245:28:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$bound_to$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) pure returns (bool)"
                            }
                          },
                          "id": 30631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5245:30:137",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5221:54:137"
                      },
                      {
                        "expression": {
                          "id": 30656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 30633,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30610,
                              "src": "5369:6:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExactInputParams_$33435_memory_ptr",
                                "typeString": "struct ISwapRouter.ExactInputParams memory"
                              }
                            },
                            "id": 30635,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amountIn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33432,
                            "src": "5369:15:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 30637,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30610,
                                  "src": "5423:6:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ExactInputParams_$33435_memory_ptr",
                                    "typeString": "struct ISwapRouter.ExactInputParams memory"
                                  }
                                },
                                "id": 30638,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amountIn",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 33432,
                                "src": "5423:15:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "condition": {
                                  "id": 30639,
                                  "name": "hasMultiplePools",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30627,
                                  "src": "5456:16:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "expression": {
                                    "id": 30644,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30610,
                                    "src": "5491:6:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactInputParams_$33435_memory_ptr",
                                      "typeString": "struct ISwapRouter.ExactInputParams memory"
                                    }
                                  },
                                  "id": 30645,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "recipient",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 33428,
                                  "src": "5491:16:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 30646,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "5456:51:137",
                                "trueExpression": {
                                  "arguments": [
                                    {
                                      "id": 30642,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5483:4:137",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SwapRouter_$30914",
                                        "typeString": "contract SwapRouter"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SwapRouter_$30914",
                                        "typeString": "contract SwapRouter"
                                      }
                                    ],
                                    "id": 30641,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5475:7:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 30640,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5475:7:137",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 30643,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5475:13:137",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 30647,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5576:1:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "expression": {
                                          "id": 30649,
                                          "name": "params",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 30610,
                                          "src": "5640:6:137",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ExactInputParams_$33435_memory_ptr",
                                            "typeString": "struct ISwapRouter.ExactInputParams memory"
                                          }
                                        },
                                        "id": 30650,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "path",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 33426,
                                        "src": "5640:11:137",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 30651,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "getFirstPool",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 38951,
                                      "src": "5640:24:137",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes memory) pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 30652,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5640:26:137",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "id": 30653,
                                    "name": "payer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30621,
                                    "src": "5743:5:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 30648,
                                  "name": "SwapCallbackData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30338,
                                  "src": "5595:16:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_SwapCallbackData_$30338_storage_ptr_$",
                                    "typeString": "type(struct SwapRouter.SwapCallbackData storage pointer)"
                                  }
                                },
                                "id": 30654,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "names": [
                                  "path",
                                  "payer"
                                ],
                                "nodeType": "FunctionCall",
                                "src": "5595:172:137",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                                  "typeString": "struct SwapRouter.SwapCallbackData memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                                  "typeString": "struct SwapRouter.SwapCallbackData memory"
                                }
                              ],
                              "id": 30636,
                              "name": "exactInputInternal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30561,
                              "src": "5387:18:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint160_$_t_struct$_SwapCallbackData_$30338_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address,uint160,struct SwapRouter.SwapCallbackData memory) returns (uint256)"
                              }
                            },
                            "id": 30655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5387:394:137",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5369:412:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30657,
                        "nodeType": "ExpressionStatement",
                        "src": "5369:412:137"
                      },
                      {
                        "condition": {
                          "id": 30658,
                          "name": "hasMultiplePools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30627,
                          "src": "5855:16:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 30682,
                          "nodeType": "Block",
                          "src": "6026:83:137",
                          "statements": [
                            {
                              "expression": {
                                "id": 30679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 30676,
                                  "name": "amountOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30618,
                                  "src": "6044:9:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 30677,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30610,
                                    "src": "6056:6:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactInputParams_$33435_memory_ptr",
                                      "typeString": "struct ISwapRouter.ExactInputParams memory"
                                    }
                                  },
                                  "id": 30678,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "amountIn",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 33432,
                                  "src": "6056:15:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6044:27:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 30680,
                              "nodeType": "ExpressionStatement",
                              "src": "6044:27:137"
                            },
                            {
                              "id": 30681,
                              "nodeType": "Break",
                              "src": "6089:5:137"
                            }
                          ]
                        },
                        "id": 30683,
                        "nodeType": "IfStatement",
                        "src": "5851:258:137",
                        "trueBody": {
                          "id": 30675,
                          "nodeType": "Block",
                          "src": "5873:147:137",
                          "statements": [
                            {
                              "expression": {
                                "id": 30664,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 30659,
                                  "name": "payer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30621,
                                  "src": "5891:5:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 30662,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5907:4:137",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SwapRouter_$30914",
                                        "typeString": "contract SwapRouter"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SwapRouter_$30914",
                                        "typeString": "contract SwapRouter"
                                      }
                                    ],
                                    "id": 30661,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5899:7:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 30660,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5899:7:137",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 30663,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5899:13:137",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "5891:21:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 30665,
                              "nodeType": "ExpressionStatement",
                              "src": "5891:21:137"
                            },
                            {
                              "expression": {
                                "id": 30673,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 30666,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30610,
                                    "src": "5968:6:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactInputParams_$33435_memory_ptr",
                                      "typeString": "struct ISwapRouter.ExactInputParams memory"
                                    }
                                  },
                                  "id": 30668,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "path",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 33426,
                                  "src": "5968:11:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "expression": {
                                        "id": 30669,
                                        "name": "params",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 30610,
                                        "src": "5982:6:137",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ExactInputParams_$33435_memory_ptr",
                                          "typeString": "struct ISwapRouter.ExactInputParams memory"
                                        }
                                      },
                                      "id": 30670,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "path",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 33426,
                                      "src": "5982:11:137",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 30671,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "skipToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 38969,
                                    "src": "5982:21:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 30672,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5982:23:137",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "src": "5968:37:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 30674,
                              "nodeType": "ExpressionStatement",
                              "src": "5968:37:137"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "hexValue": "74727565",
                    "id": 30625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5201:4:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "id": 30685,
                  "nodeType": "WhileStatement",
                  "src": "5194:925:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30687,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30618,
                          "src": "6137:9:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 30688,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30610,
                            "src": "6150:6:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputParams_$33435_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactInputParams memory"
                            }
                          },
                          "id": 30689,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountOutMinimum",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33434,
                          "src": "6150:23:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6137:36:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6f206c6974746c65207265636569766564",
                        "id": 30691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6175:21:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f037a9cbca9be03859489f289f0cf5f85c0414bbfdd9785bc7ab31bd734e249c",
                          "typeString": "literal_string \"Too little received\""
                        },
                        "value": "Too little received"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f037a9cbca9be03859489f289f0cf5f85c0414bbfdd9785bc7ab31bd734e249c",
                          "typeString": "literal_string \"Too little received\""
                        }
                      ],
                      "id": 30686,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6129:7:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 30692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6129:68:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30693,
                  "nodeType": "ExpressionStatement",
                  "src": "6129:68:137"
                }
              ]
            },
            "baseFunctions": [
              33443
            ],
            "documentation": {
              "id": 30608,
              "nodeType": "StructuredDocumentation",
              "src": "4897:27:137",
              "text": "@inheritdoc ISwapRouter"
            },
            "functionSelector": "c04b8d59",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 30614,
                      "name": "params",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30610,
                      "src": "5053:6:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputParams_$33435_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputParams memory"
                      }
                    },
                    "id": 30615,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "deadline",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 33430,
                    "src": "5053:15:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 30616,
                "modifierName": {
                  "id": 30613,
                  "name": "checkDeadline",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 32194,
                  "src": "5039:13:137",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5039:30:137"
              }
            ],
            "name": "exactInput",
            "overrides": {
              "id": 30612,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5022:8:137"
            },
            "parameters": {
              "id": 30611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30610,
                  "mutability": "mutable",
                  "name": "params",
                  "nodeType": "VariableDeclaration",
                  "scope": 30695,
                  "src": "4949:30:137",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExactInputParams_$33435_memory_ptr",
                    "typeString": "struct ISwapRouter.ExactInputParams"
                  },
                  "typeName": {
                    "id": 30609,
                    "name": "ExactInputParams",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 33435,
                    "src": "4949:16:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputParams_$33435_storage_ptr",
                      "typeString": "struct ISwapRouter.ExactInputParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4948:32:137"
            },
            "returnParameters": {
              "id": 30619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30618,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nodeType": "VariableDeclaration",
                  "scope": 30695,
                  "src": "5087:17:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30617,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5087:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5086:19:137"
            },
            "scope": 30914,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30819,
            "nodeType": "FunctionDefinition",
            "src": "6259:1334:137",
            "nodes": [],
            "body": {
              "id": 30818,
              "nodeType": "Block",
              "src": "6456:1137:137",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 30714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30709,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30700,
                      "src": "6533:9:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 30712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6554:1:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 30711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6546:7:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 30710,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6546:7:137",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 30713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6546:10:137",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6533:23:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30722,
                  "nodeType": "IfStatement",
                  "src": "6529:54:137",
                  "trueBody": {
                    "expression": {
                      "id": 30720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 30715,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30700,
                        "src": "6558:9:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 30718,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6578:4:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapRouter_$30914",
                              "typeString": "contract SwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapRouter_$30914",
                              "typeString": "contract SwapRouter"
                            }
                          ],
                          "id": 30717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6570:7:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30716,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6570:7:137",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6570:13:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "6558:25:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 30721,
                    "nodeType": "ExpressionStatement",
                    "src": "6558:25:137"
                  }
                },
                {
                  "assignments": [
                    30724,
                    30726,
                    30728
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30724,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nodeType": "VariableDeclaration",
                      "scope": 30818,
                      "src": "6595:16:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30723,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6595:7:137",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 30726,
                      "mutability": "mutable",
                      "name": "tokenIn",
                      "nodeType": "VariableDeclaration",
                      "scope": 30818,
                      "src": "6613:15:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30725,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6613:7:137",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 30728,
                      "mutability": "mutable",
                      "name": "fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 30818,
                      "src": "6630:10:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 30727,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "6630:6:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30733,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 30729,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30704,
                          "src": "6644:4:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                            "typeString": "struct SwapRouter.SwapCallbackData memory"
                          }
                        },
                        "id": 30730,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "path",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30335,
                        "src": "6644:9:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 30731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decodeFirstPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38936,
                      "src": "6644:25:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_uint24_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (address,address,uint24)"
                      }
                    },
                    "id": 30732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6644:27:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint24_$",
                      "typeString": "tuple(address,address,uint24)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6594:77:137"
                },
                {
                  "assignments": [
                    30735
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30735,
                      "mutability": "mutable",
                      "name": "zeroForOne",
                      "nodeType": "VariableDeclaration",
                      "scope": 30818,
                      "src": "6682:15:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 30734,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6682:4:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30739,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 30738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30736,
                      "name": "tokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30726,
                      "src": "6700:7:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 30737,
                      "name": "tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30724,
                      "src": "6710:8:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6700:18:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6682:36:137"
                },
                {
                  "assignments": [
                    30741,
                    30743
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30741,
                      "mutability": "mutable",
                      "name": "amount0Delta",
                      "nodeType": "VariableDeclaration",
                      "scope": 30818,
                      "src": "6730:19:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 30740,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6730:6:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 30743,
                      "mutability": "mutable",
                      "name": "amount1Delta",
                      "nodeType": "VariableDeclaration",
                      "scope": 30818,
                      "src": "6751:19:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 30742,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6751:6:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30777,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30750,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30700,
                        "src": "6840:9:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 30751,
                        "name": "zeroForOne",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30735,
                        "src": "6867:10:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 30755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "-",
                        "prefix": true,
                        "src": "6895:21:137",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 30752,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30698,
                              "src": "6896:9:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 30753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "toInt256",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18257,
                            "src": "6896:18:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256) pure returns (int256)"
                            }
                          },
                          "id": 30754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6896:20:137",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          "id": 30758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30756,
                            "name": "sqrtPriceLimitX96",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30702,
                            "src": "6934:17:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 30757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6955:1:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6934:22:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "id": 30770,
                          "name": "sqrtPriceLimitX96",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30702,
                          "src": "7074:17:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "id": 30771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "6934:157:137",
                        "trueExpression": {
                          "components": [
                            {
                              "condition": {
                                "id": 30759,
                                "name": "zeroForOne",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30735,
                                "src": "6980:10:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                },
                                "id": 30767,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 30764,
                                    "name": "TickMath",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20294,
                                    "src": "7023:8:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TickMath_$20294_$",
                                      "typeString": "type(library TickMath)"
                                    }
                                  },
                                  "id": 30765,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "MAX_SQRT_RATIO",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 19780,
                                  "src": "7023:23:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 30766,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7049:1:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "7023:27:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              "id": 30768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "6980:70:137",
                              "trueExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                },
                                "id": 30763,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 30760,
                                    "name": "TickMath",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20294,
                                    "src": "6993:8:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TickMath_$20294_$",
                                      "typeString": "type(library TickMath)"
                                    }
                                  },
                                  "id": 30761,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "MIN_SQRT_RATIO",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 19776,
                                  "src": "6993:23:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 30762,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7019:1:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "6993:27:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            }
                          ],
                          "id": 30769,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6979:72:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30774,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30704,
                            "src": "7120:4:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                              "typeString": "struct SwapRouter.SwapCallbackData memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                              "typeString": "struct SwapRouter.SwapCallbackData memory"
                            }
                          ],
                          "expression": {
                            "id": 30772,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7109:3:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 30773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7109:10:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 30775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7109:16:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 30745,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30726,
                            "src": "6794:7:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 30746,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30724,
                            "src": "6803:8:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 30747,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30728,
                            "src": "6813:3:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          ],
                          "id": 30744,
                          "name": "getPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30333,
                          "src": "6786:7:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_contract$_IPancakeV3Pool_$16124_$",
                            "typeString": "function (address,address,uint24) view returns (contract IPancakeV3Pool)"
                          }
                        },
                        "id": 30748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6786:31:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancakeV3Pool_$16124",
                          "typeString": "contract IPancakeV3Pool"
                        }
                      },
                      "id": 30749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16276,
                      "src": "6786:36:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$_t_int256_$_t_uint160_$_t_bytes_memory_ptr_$returns$_t_int256_$_t_int256_$",
                        "typeString": "function (address,bool,int256,uint160,bytes memory) external returns (int256,int256)"
                      }
                    },
                    "id": 30776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6786:353:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
                      "typeString": "tuple(int256,int256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6729:410:137"
                },
                {
                  "assignments": [
                    30779
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30779,
                      "mutability": "mutable",
                      "name": "amountOutReceived",
                      "nodeType": "VariableDeclaration",
                      "scope": 30818,
                      "src": "7150:25:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30778,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7150:7:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30780,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7150:25:137"
                },
                {
                  "expression": {
                    "id": 30806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 30781,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30707,
                          "src": "7186:8:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 30782,
                          "name": "amountOutReceived",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30779,
                          "src": "7196:17:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 30783,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "7185:29:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "id": 30784,
                        "name": "zeroForOne",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30735,
                        "src": "7217:10:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "components": [
                          {
                            "arguments": [
                              {
                                "id": 30797,
                                "name": "amount1Delta",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30743,
                                "src": "7313:12:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 30796,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7305:7:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 30795,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7305:7:137",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7305:21:137",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 30802,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "7336:13:137",
                                "subExpression": {
                                  "id": 30801,
                                  "name": "amount0Delta",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30741,
                                  "src": "7337:12:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 30800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7328:7:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 30799,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7328:7:137",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7328:22:137",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 30804,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7304:47:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256)"
                        }
                      },
                      "id": 30805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "7217:134:137",
                      "trueExpression": {
                        "components": [
                          {
                            "arguments": [
                              {
                                "id": 30787,
                                "name": "amount0Delta",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30741,
                                "src": "7251:12:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 30786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7243:7:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 30785,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7243:7:137",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7243:21:137",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 30792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "7274:13:137",
                                "subExpression": {
                                  "id": 30791,
                                  "name": "amount1Delta",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30743,
                                  "src": "7275:12:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 30790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7266:7:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 30789,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7266:7:137",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7266:22:137",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 30794,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7242:47:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256)"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "7185:166:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30807,
                  "nodeType": "ExpressionStatement",
                  "src": "7185:166:137"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    },
                    "id": 30810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30808,
                      "name": "sqrtPriceLimitX96",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30702,
                      "src": "7523:17:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 30809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7544:1:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7523:22:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30817,
                  "nodeType": "IfStatement",
                  "src": "7519:67:137",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 30814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30812,
                            "name": "amountOutReceived",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30779,
                            "src": "7555:17:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 30813,
                            "name": "amountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30698,
                            "src": "7576:9:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7555:30:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 30811,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "7547:7:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                          "typeString": "function (bool) pure"
                        }
                      },
                      "id": 30815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7547:39:137",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 30816,
                    "nodeType": "ExpressionStatement",
                    "src": "7547:39:137"
                  }
                }
              ]
            },
            "documentation": {
              "id": 30696,
              "nodeType": "StructuredDocumentation",
              "src": "6210:44:137",
              "text": "@dev Performs a single exact output swap"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exactOutputInternal",
            "parameters": {
              "id": 30705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30698,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nodeType": "VariableDeclaration",
                  "scope": 30819,
                  "src": "6297:17:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6297:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30700,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 30819,
                  "src": "6324:17:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30699,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6324:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30702,
                  "mutability": "mutable",
                  "name": "sqrtPriceLimitX96",
                  "nodeType": "VariableDeclaration",
                  "scope": 30819,
                  "src": "6351:25:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 30701,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "6351:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30704,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 30819,
                  "src": "6386:28:137",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                    "typeString": "struct SwapRouter.SwapCallbackData"
                  },
                  "typeName": {
                    "id": 30703,
                    "name": "SwapCallbackData",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 30338,
                    "src": "6386:16:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SwapCallbackData_$30338_storage_ptr",
                      "typeString": "struct SwapRouter.SwapCallbackData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6287:133:137"
            },
            "returnParameters": {
              "id": 30708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30707,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nodeType": "VariableDeclaration",
                  "scope": 30819,
                  "src": "6438:16:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30706,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6438:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6437:18:137"
            },
            "scope": 30914,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 30869,
            "nodeType": "FunctionDefinition",
            "src": "7631:732:137",
            "nodes": [],
            "body": {
              "id": 30868,
              "nodeType": "Block",
              "src": "7827:536:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30832,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30830,
                      "src": "7893:8:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 30834,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30822,
                            "src": "7937:6:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactOutputSingleParams_$33460_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                            }
                          },
                          "id": 30835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountOut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33455,
                          "src": "7937:16:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 30836,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30822,
                            "src": "7967:6:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactOutputSingleParams_$33460_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                            }
                          },
                          "id": 30837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33451,
                          "src": "7967:16:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 30838,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30822,
                            "src": "7997:6:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactOutputSingleParams_$33460_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                            }
                          },
                          "id": 30839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sqrtPriceLimitX96",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33459,
                          "src": "7997:24:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 30843,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30822,
                                    "src": "8076:6:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactOutputSingleParams_$33460_calldata_ptr",
                                      "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                                    }
                                  },
                                  "id": 30844,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenOut",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 33447,
                                  "src": "8076:15:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 30845,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30822,
                                    "src": "8093:6:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactOutputSingleParams_$33460_calldata_ptr",
                                      "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                                    }
                                  },
                                  "id": 30846,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "fee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 33449,
                                  "src": "8093:10:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 30847,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30822,
                                    "src": "8105:6:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactOutputSingleParams_$33460_calldata_ptr",
                                      "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                                    }
                                  },
                                  "id": 30848,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenIn",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 33445,
                                  "src": "8105:14:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 30841,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "8059:3:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 30842,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "8059:16:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 30849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8059:61:137",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 30850,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8129:3:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 30851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8129:10:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 30840,
                            "name": "SwapCallbackData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30338,
                            "src": "8035:16:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_SwapCallbackData_$30338_storage_ptr_$",
                              "typeString": "type(struct SwapRouter.SwapCallbackData storage pointer)"
                            }
                          },
                          "id": 30852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "path",
                            "payer"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "8035:106:137",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                            "typeString": "struct SwapRouter.SwapCallbackData memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          {
                            "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                            "typeString": "struct SwapRouter.SwapCallbackData memory"
                          }
                        ],
                        "id": 30833,
                        "name": "exactOutputInternal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30819,
                        "src": "7904:19:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint160_$_t_struct$_SwapCallbackData_$30338_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (uint256,address,uint160,struct SwapRouter.SwapCallbackData memory) returns (uint256)"
                        }
                      },
                      "id": 30853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7904:247:137",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7893:258:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30855,
                  "nodeType": "ExpressionStatement",
                  "src": "7893:258:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30857,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30830,
                          "src": "8170:8:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 30858,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30822,
                            "src": "8182:6:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactOutputSingleParams_$33460_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                            }
                          },
                          "id": 30859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountInMaximum",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33457,
                          "src": "8182:22:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8170:34:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6f206d75636820726571756573746564",
                        "id": 30861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8206:20:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5c1362ddf12293b907d8907d79f16e40792a7ddc4f09ee6d70cfec4ad443305",
                          "typeString": "literal_string \"Too much requested\""
                        },
                        "value": "Too much requested"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5c1362ddf12293b907d8907d79f16e40792a7ddc4f09ee6d70cfec4ad443305",
                          "typeString": "literal_string \"Too much requested\""
                        }
                      ],
                      "id": 30856,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8162:7:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 30862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8162:65:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30863,
                  "nodeType": "ExpressionStatement",
                  "src": "8162:65:137"
                },
                {
                  "expression": {
                    "id": 30866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30864,
                      "name": "amountInCached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30292,
                      "src": "8315:14:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 30865,
                      "name": "DEFAULT_AMOUNT_IN_CACHED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30288,
                      "src": "8332:24:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8315:41:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30867,
                  "nodeType": "ExpressionStatement",
                  "src": "8315:41:137"
                }
              ]
            },
            "baseFunctions": [
              33468
            ],
            "documentation": {
              "id": 30820,
              "nodeType": "StructuredDocumentation",
              "src": "7599:27:137",
              "text": "@inheritdoc ISwapRouter"
            },
            "functionSelector": "db3e2198",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 30826,
                      "name": "params",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30822,
                      "src": "7771:6:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactOutputSingleParams_$33460_calldata_ptr",
                        "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                      }
                    },
                    "id": 30827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "deadline",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 33453,
                    "src": "7771:15:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 30828,
                "modifierName": {
                  "id": 30825,
                  "name": "checkDeadline",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 32194,
                  "src": "7757:13:137",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7757:30:137"
              }
            ],
            "name": "exactOutputSingle",
            "overrides": {
              "id": 30824,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7740:8:137"
            },
            "parameters": {
              "id": 30823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30822,
                  "mutability": "mutable",
                  "name": "params",
                  "nodeType": "VariableDeclaration",
                  "scope": 30869,
                  "src": "7658:39:137",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExactOutputSingleParams_$33460_calldata_ptr",
                    "typeString": "struct ISwapRouter.ExactOutputSingleParams"
                  },
                  "typeName": {
                    "id": 30821,
                    "name": "ExactOutputSingleParams",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 33460,
                    "src": "7658:23:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactOutputSingleParams_$33460_storage_ptr",
                      "typeString": "struct ISwapRouter.ExactOutputSingleParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7657:41:137"
            },
            "returnParameters": {
              "id": 30831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30830,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nodeType": "VariableDeclaration",
                  "scope": 30869,
                  "src": "7805:16:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7805:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7804:18:137"
            },
            "scope": 30914,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30913,
            "nodeType": "FunctionDefinition",
            "src": "8401:756:137",
            "nodes": [],
            "body": {
              "id": 30912,
              "nodeType": "Block",
              "src": "8585:572:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 30883,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30872,
                          "src": "8847:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactOutputParams_$33479_calldata_ptr",
                            "typeString": "struct ISwapRouter.ExactOutputParams calldata"
                          }
                        },
                        "id": 30884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33476,
                        "src": "8847:16:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 30885,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30872,
                          "src": "8877:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactOutputParams_$33479_calldata_ptr",
                            "typeString": "struct ISwapRouter.ExactOutputParams calldata"
                          }
                        },
                        "id": 30886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33472,
                        "src": "8877:16:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 30887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8907:1:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 30889,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30872,
                              "src": "8946:6:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExactOutputParams_$33479_calldata_ptr",
                                "typeString": "struct ISwapRouter.ExactOutputParams calldata"
                              }
                            },
                            "id": 30890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "path",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33470,
                            "src": "8946:11:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "expression": {
                              "id": 30891,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8966:3:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 30892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8966:10:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 30888,
                          "name": "SwapCallbackData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30338,
                          "src": "8922:16:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SwapCallbackData_$30338_storage_ptr_$",
                            "typeString": "type(struct SwapRouter.SwapCallbackData storage pointer)"
                          }
                        },
                        "id": 30893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "path",
                          "payer"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "8922:56:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                          "typeString": "struct SwapRouter.SwapCallbackData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_struct$_SwapCallbackData_$30338_memory_ptr",
                          "typeString": "struct SwapRouter.SwapCallbackData memory"
                        }
                      ],
                      "id": 30882,
                      "name": "exactOutputInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30819,
                      "src": "8814:19:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint160_$_t_struct$_SwapCallbackData_$30338_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,uint160,struct SwapRouter.SwapCallbackData memory) returns (uint256)"
                      }
                    },
                    "id": 30894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8814:174:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30895,
                  "nodeType": "ExpressionStatement",
                  "src": "8814:174:137"
                },
                {
                  "expression": {
                    "id": 30898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30896,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30880,
                      "src": "8999:8:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 30897,
                      "name": "amountInCached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30292,
                      "src": "9010:14:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8999:25:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30899,
                  "nodeType": "ExpressionStatement",
                  "src": "8999:25:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30901,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30880,
                          "src": "9042:8:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 30902,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30872,
                            "src": "9054:6:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactOutputParams_$33479_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactOutputParams calldata"
                            }
                          },
                          "id": 30903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountInMaximum",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33478,
                          "src": "9054:22:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9042:34:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6f206d75636820726571756573746564",
                        "id": 30905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9078:20:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5c1362ddf12293b907d8907d79f16e40792a7ddc4f09ee6d70cfec4ad443305",
                          "typeString": "literal_string \"Too much requested\""
                        },
                        "value": "Too much requested"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5c1362ddf12293b907d8907d79f16e40792a7ddc4f09ee6d70cfec4ad443305",
                          "typeString": "literal_string \"Too much requested\""
                        }
                      ],
                      "id": 30900,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9034:7:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 30906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9034:65:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30907,
                  "nodeType": "ExpressionStatement",
                  "src": "9034:65:137"
                },
                {
                  "expression": {
                    "id": 30910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30908,
                      "name": "amountInCached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30292,
                      "src": "9109:14:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 30909,
                      "name": "DEFAULT_AMOUNT_IN_CACHED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30288,
                      "src": "9126:24:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9109:41:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30911,
                  "nodeType": "ExpressionStatement",
                  "src": "9109:41:137"
                }
              ]
            },
            "baseFunctions": [
              33487
            ],
            "documentation": {
              "id": 30870,
              "nodeType": "StructuredDocumentation",
              "src": "8369:27:137",
              "text": "@inheritdoc ISwapRouter"
            },
            "functionSelector": "f28c0498",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 30876,
                      "name": "params",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30872,
                      "src": "8529:6:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactOutputParams_$33479_calldata_ptr",
                        "typeString": "struct ISwapRouter.ExactOutputParams calldata"
                      }
                    },
                    "id": 30877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "deadline",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 33474,
                    "src": "8529:15:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 30878,
                "modifierName": {
                  "id": 30875,
                  "name": "checkDeadline",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 32194,
                  "src": "8515:13:137",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8515:30:137"
              }
            ],
            "name": "exactOutput",
            "overrides": {
              "id": 30874,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8498:8:137"
            },
            "parameters": {
              "id": 30873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30872,
                  "mutability": "mutable",
                  "name": "params",
                  "nodeType": "VariableDeclaration",
                  "scope": 30913,
                  "src": "8422:33:137",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExactOutputParams_$33479_calldata_ptr",
                    "typeString": "struct ISwapRouter.ExactOutputParams"
                  },
                  "typeName": {
                    "id": 30871,
                    "name": "ExactOutputParams",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 33479,
                    "src": "8422:17:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactOutputParams_$33479_storage_ptr",
                      "typeString": "struct ISwapRouter.ExactOutputParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8421:35:137"
            },
            "returnParameters": {
              "id": 30881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30880,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nodeType": "VariableDeclaration",
                  "scope": 30913,
                  "src": "8563:16:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30879,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8563:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8562:18:137"
            },
            "scope": 30914,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 30263,
              "name": "ISwapRouter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 33488,
              "src": "814:11:137",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$33488",
                "typeString": "contract ISwapRouter"
              }
            },
            "id": 30264,
            "nodeType": "InheritanceSpecifier",
            "src": "814:11:137"
          },
          {
            "baseName": {
              "id": 30265,
              "name": "PeripheryImmutableState",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 31784,
              "src": "831:23:137",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PeripheryImmutableState_$31784",
                "typeString": "contract PeripheryImmutableState"
              }
            },
            "id": 30266,
            "nodeType": "InheritanceSpecifier",
            "src": "831:23:137"
          },
          {
            "baseName": {
              "id": 30267,
              "name": "PeripheryValidation",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 32195,
              "src": "860:19:137",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PeripheryValidation_$32195",
                "typeString": "contract PeripheryValidation"
              }
            },
            "id": 30268,
            "nodeType": "InheritanceSpecifier",
            "src": "860:19:137"
          },
          {
            "baseName": {
              "id": 30269,
              "name": "PeripheryPaymentsWithFee",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 32175,
              "src": "885:24:137",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PeripheryPaymentsWithFee_$32175",
                "typeString": "contract PeripheryPaymentsWithFee"
              }
            },
            "id": 30270,
            "nodeType": "InheritanceSpecifier",
            "src": "885:24:137"
          },
          {
            "baseName": {
              "id": 30271,
              "name": "Multicall",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 31743,
              "src": "915:9:137",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Multicall_$31743",
                "typeString": "contract Multicall"
              }
            },
            "id": 30272,
            "nodeType": "InheritanceSpecifier",
            "src": "915:9:137"
          },
          {
            "baseName": {
              "id": 30273,
              "name": "SelfPermit",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 32454,
              "src": "930:10:137",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SelfPermit_$32454",
                "typeString": "contract SelfPermit"
              }
            },
            "id": 30274,
            "nodeType": "InheritanceSpecifier",
            "src": "930:10:137"
          }
        ],
        "contractDependencies": [
          16199,
          31233,
          31743,
          31784,
          31994,
          32175,
          32195,
          32454,
          32866,
          33098,
          33124,
          33157,
          33392,
          33488
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 30262,
          "nodeType": "StructuredDocumentation",
          "src": "682:105:137",
          "text": "@title Pancake V3 Swap Router\n @notice Router for stateless execution of swaps against Pancake V3"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          30914,
          32454,
          33392,
          31743,
          32866,
          32175,
          33157,
          31994,
          32195,
          31784,
          33098,
          33124,
          31233,
          33488,
          16199
        ],
        "name": "SwapRouter",
        "scope": 30915
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 137
}