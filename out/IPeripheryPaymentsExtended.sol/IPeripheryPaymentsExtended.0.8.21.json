{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "pull",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refundETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "sweepToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        }
      ],
      "name": "sweepToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "unwrapWETH9",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "wrapETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "pull(address,uint256)": "f2d5d56b",
    "refundETH()": "12210e8a",
    "sweepToken(address,uint256)": "e90a182f",
    "sweepToken(address,uint256,address)": "df2ab5bb",
    "unwrapWETH9(uint256,address)": "49404b7c",
    "wrapETH(uint256)": "1c58db4f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"wrapETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"pull(address,uint256)\":{\"params\":{\"token\":\"The token to pull\",\"value\":\"The amount to pay\"}},\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount. And in PancakeSwap Router, this would be called  at the very end of swap\"},\"sweepToken(address,uint256)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"token\":\"The contract address of the token which will be transferred to msg.sender\"}},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}},\"wrapETH(uint256)\":{\"details\":\"The resulting WETH9 is custodied by the router, thus will require further distribution\",\"params\":{\"value\":\"The amount of ETH to wrap\"}}},\"title\":\"Periphery Payments Extended\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"pull(address,uint256)\":{\"notice\":\"Transfers the specified amount of a token from the msg.sender to address(this)\"},\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256)\":{\"notice\":\"Transfers the full amount of a token held by this contract to msg.sender\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"},\"wrapETH(uint256)\":{\"notice\":\"Wraps the contract's ETH balance into WETH9\"}},\"notice\":\"Functions to ease deposits and withdrawals of ETH and tokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/router/contracts/interfaces/IPeripheryPaymentsExtended.sol\":\"IPeripheryPaymentsExtended\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@beatx/=src/beatx/\",\":@horizondex/=src/horizondex/\",\":@matterlabs/=lib/aa-signature-checker/\",\":@merkle/=src/mproof/\",\":@metazeus/=src/metazeus/\",\":@mute/=src/mute-c4/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@oz4.8.1/=lib/oz4.8.1/\",\":@pancakeswap/=src/\",\":@protomerkle/=lib/protomerkle/\",\":@rabbithole/=src/rabbithole-c4/\",\":@solmate/=lib/solmate/src/\",\":@tokensales/=src/TokenSales/\",\":@uniswap/=lib/\",\":@zks/=src/zks/\",\":base64-sol/=lib/base64/\",\":base64/=lib/base64/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/oz4.9.2/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/oz4.9.2/contracts/\",\":oz4.8.1/=lib/oz4.8.1/\",\":oz4.9.2/=lib/oz4.9.2/\",\":solidity-lib/=lib/solidity-lib/contracts/\",\":v2-core/=lib/v2-core/contracts/\"]},\"sources\":{\"src/router/contracts/interfaces/IPeripheryPaymentsExtended.sol\":{\"keccak256\":\"0x0951f1a9d7792135c99b1d387f3c7c16d74a6bb8a394dd8c9868487dc2628c5d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea954ee121bbc3ed3bec24867e5660a5ff10b2fb93cb0a2e730f59304c1c2393\",\"dweb:/ipfs/Qmewb9ZTr1ybiLzrNGHw8kpJHnkVyF2JBWjFo9nNV8bnQE\"]},\"src/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0x9f7d06f70bc237ffc6d3cb80c0035d28c1f08395e58aed0f5e85e0cbe402025b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6637101237472ffd1cc53a8af074dd40bc2926f09825ccd1fecbee123b9afb3a\",\"dweb:/ipfs/QmU9PBHq6ow64uRYC7q6p8pKuep7zeSN89fF2c3VCTVdV1\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "pull"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "refundETH"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sweepToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sweepToken"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "unwrapWETH9"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "wrapETH"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "pull(address,uint256)": {
            "params": {
              "token": "The token to pull",
              "value": "The amount to pay"
            }
          },
          "refundETH()": {
            "details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount. And in PancakeSwap Router, this would be called  at the very end of swap"
          },
          "sweepToken(address,uint256)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
            "params": {
              "amountMinimum": "The minimum amount of token required for a transfer",
              "token": "The contract address of the token which will be transferred to msg.sender"
            }
          },
          "sweepToken(address,uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
            "params": {
              "amountMinimum": "The minimum amount of token required for a transfer",
              "recipient": "The destination address of the token",
              "token": "The contract address of the token which will be transferred to `recipient`"
            }
          },
          "unwrapWETH9(uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
            "params": {
              "amountMinimum": "The minimum amount of WETH9 to unwrap",
              "recipient": "The address receiving ETH"
            }
          },
          "wrapETH(uint256)": {
            "details": "The resulting WETH9 is custodied by the router, thus will require further distribution",
            "params": {
              "value": "The amount of ETH to wrap"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "pull(address,uint256)": {
            "notice": "Transfers the specified amount of a token from the msg.sender to address(this)"
          },
          "refundETH()": {
            "notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
          },
          "sweepToken(address,uint256)": {
            "notice": "Transfers the full amount of a token held by this contract to msg.sender"
          },
          "sweepToken(address,uint256,address)": {
            "notice": "Transfers the full amount of a token held by this contract to recipient"
          },
          "unwrapWETH9(uint256,address)": {
            "notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
          },
          "wrapETH(uint256)": {
            "notice": "Wraps the contract's ETH balance into WETH9"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@beatx/=src/beatx/",
        "@horizondex/=src/horizondex/",
        "@matterlabs/=lib/aa-signature-checker/",
        "@merkle/=src/mproof/",
        "@metazeus/=src/metazeus/",
        "@mute/=src/mute-c4/",
        "@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@oz4.8.1/=lib/oz4.8.1/",
        "@pancakeswap/=src/",
        "@protomerkle/=lib/protomerkle/",
        "@rabbithole/=src/rabbithole-c4/",
        "@solmate/=lib/solmate/src/",
        "@tokensales/=src/TokenSales/",
        "@uniswap/=lib/",
        "@zks/=src/zks/",
        "base64-sol/=lib/base64/",
        "base64/=lib/base64/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/oz4.9.2/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "openzeppelin/=lib/oz4.9.2/contracts/",
        "oz4.8.1/=lib/oz4.8.1/",
        "oz4.9.2/=lib/oz4.9.2/",
        "solidity-lib/=lib/solidity-lib/contracts/",
        "v2-core/=lib/v2-core/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/router/contracts/interfaces/IPeripheryPaymentsExtended.sol": "IPeripheryPaymentsExtended"
      },
      "libraries": {}
    },
    "sources": {
      "src/router/contracts/interfaces/IPeripheryPaymentsExtended.sol": {
        "keccak256": "0x0951f1a9d7792135c99b1d387f3c7c16d74a6bb8a394dd8c9868487dc2628c5d",
        "urls": [
          "bzz-raw://ea954ee121bbc3ed3bec24867e5660a5ff10b2fb93cb0a2e730f59304c1c2393",
          "dweb:/ipfs/Qmewb9ZTr1ybiLzrNGHw8kpJHnkVyF2JBWjFo9nNV8bnQE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
        "keccak256": "0x9f7d06f70bc237ffc6d3cb80c0035d28c1f08395e58aed0f5e85e0cbe402025b",
        "urls": [
          "bzz-raw://6637101237472ffd1cc53a8af074dd40bc2926f09825ccd1fecbee123b9afb3a",
          "dweb:/ipfs/QmU9PBHq6ow64uRYC7q6p8pKuep7zeSN89fF2c3VCTVdV1"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/router/contracts/interfaces/IPeripheryPaymentsExtended.sol",
    "id": 48317,
    "exportedSymbols": {
      "IPeripheryPayments": [
        50734
      ],
      "IPeripheryPaymentsExtended": [
        48316
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:1308:52",
    "nodes": [
      {
        "id": 48289,
        "nodeType": "PragmaDirective",
        "src": "45:24:52",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".5"
        ]
      },
      {
        "id": 48290,
        "nodeType": "ImportDirective",
        "src": "71:79:52",
        "nodes": [],
        "absolutePath": "src/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
        "file": "@pancakeswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48317,
        "sourceUnit": 50735,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 48316,
        "nodeType": "ContractDefinition",
        "src": "264:1088:52",
        "nodes": [
          {
            "id": 48299,
            "nodeType": "FunctionDefinition",
            "src": "610:49:52",
            "nodes": [],
            "documentation": {
              "id": 48294,
              "nodeType": "StructuredDocumentation",
              "src": "403:202:52",
              "text": "@notice Wraps the contract's ETH balance into WETH9\n @dev The resulting WETH9 is custodied by the router, thus will require further distribution\n @param value The amount of ETH to wrap"
            },
            "functionSelector": "1c58db4f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "wrapETH",
            "nameLocation": "619:7:52",
            "parameters": {
              "id": 48297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48296,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "635:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 48299,
                  "src": "627:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48295,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "627:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "626:15:52"
            },
            "returnParameters": {
              "id": 48298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "658:0:52"
            },
            "scope": 48316,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48307,
            "nodeType": "FunctionDefinition",
            "src": "1035:75:52",
            "nodes": [],
            "documentation": {
              "id": 48300,
              "nodeType": "StructuredDocumentation",
              "src": "665:365:52",
              "text": "@notice Transfers the full amount of a token held by this contract to msg.sender\n @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n @param token The contract address of the token which will be transferred to msg.sender\n @param amountMinimum The minimum amount of token required for a transfer"
            },
            "functionSelector": "e90a182f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "sweepToken",
            "nameLocation": "1044:10:52",
            "parameters": {
              "id": 48305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48302,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1063:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 48307,
                  "src": "1055:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1055:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48304,
                  "mutability": "mutable",
                  "name": "amountMinimum",
                  "nameLocation": "1078:13:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 48307,
                  "src": "1070:21:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1070:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1054:38:52"
            },
            "returnParameters": {
              "id": 48306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1109:0:52"
            },
            "scope": 48316,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48315,
            "nodeType": "FunctionDefinition",
            "src": "1289:61:52",
            "nodes": [],
            "documentation": {
              "id": 48308,
              "nodeType": "StructuredDocumentation",
              "src": "1116:168:52",
              "text": "@notice Transfers the specified amount of a token from the msg.sender to address(this)\n @param token The token to pull\n @param value The amount to pay"
            },
            "functionSelector": "f2d5d56b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pull",
            "nameLocation": "1298:4:52",
            "parameters": {
              "id": 48313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48310,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1311:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 48315,
                  "src": "1303:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1303:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48312,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1326:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 48315,
                  "src": "1318:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48311,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1318:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1302:30:52"
            },
            "returnParameters": {
              "id": 48314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1349:0:52"
            },
            "scope": 48316,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 48292,
              "name": "IPeripheryPayments",
              "nameLocations": [
                "304:18:52"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50734,
              "src": "304:18:52"
            },
            "id": 48293,
            "nodeType": "InheritanceSpecifier",
            "src": "304:18:52"
          }
        ],
        "canonicalName": "IPeripheryPaymentsExtended",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 48291,
          "nodeType": "StructuredDocumentation",
          "src": "152:112:52",
          "text": "@title Periphery Payments Extended\n @notice Functions to ease deposits and withdrawals of ETH and tokens"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          48316,
          50734
        ],
        "name": "IPeripheryPaymentsExtended",
        "nameLocation": "274:26:52",
        "scope": 48317,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 52
}