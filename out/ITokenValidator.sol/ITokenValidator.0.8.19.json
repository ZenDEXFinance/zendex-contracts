{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "baseTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "amountToBorrow",
          "type": "uint256"
        }
      ],
      "name": "batchValidate",
      "outputs": [
        {
          "internalType": "enum ITokenValidator.Status[]",
          "name": "",
          "type": "uint8[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "baseTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "amountToBorrow",
          "type": "uint256"
        }
      ],
      "name": "validate",
      "outputs": [
        {
          "internalType": "enum ITokenValidator.Status",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "batchValidate(address[],address[],uint256)": "be7672e5",
    "validate(address,address[],uint256)": "0143aace"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"baseTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amountToBorrow\",\"type\":\"uint256\"}],\"name\":\"batchValidate\",\"outputs\":[{\"internalType\":\"enum ITokenValidator.Status[]\",\"name\":\"\",\"type\":\"uint8[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"baseTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amountToBorrow\",\"type\":\"uint256\"}],\"name\":\"validate\",\"outputs\":[{\"internalType\":\"enum ITokenValidator.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"We can not guarantee the result of this lens is correct for a few reasons:1/ Some tokens take fees or allow transfers under specific conditions, for example some have an allowlistof addresses that do/dont require fees. Therefore the result is not guaranteed to be correctin all circumstances.2/ It is possible that the token does not have any pools on V2 therefore we are not able to performa flashloan to test the token.These functions are not marked view because they rely on calling non-view functions and reverting to compute the result.\",\"kind\":\"dev\",\"methods\":{\"batchValidate(address[],address[],uint256)\":{\"params\":{\"amountToBorrow\":\"The amount to try flash borrowing from the pools\",\"baseTokens\":\"The addresses of the tokens to try pairing with token when looking for a pool to flash loan from.\",\"tokens\":\"The addresses of the tokens to check for fee on transfer\"},\"returns\":{\"_0\":\"The status of the token\"}},\"validate(address,address[],uint256)\":{\"params\":{\"amountToBorrow\":\"The amount to try flash borrowing from the pools\",\"baseTokens\":\"The addresses of the tokens to try pairing with token when looking for a pool to flash loan from.\",\"token\":\"The address of the token to check for fee on transfer\"},\"returns\":{\"_0\":\"The status of the token\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchValidate(address[],address[],uint256)\":{\"notice\":\"Validates each token by detecting if its transferable or takes a fee on transfer\"},\"validate(address,address[],uint256)\":{\"notice\":\"Validates a token by detecting if its transferable or takes a fee on transfer\"}},\"notice\":\"Validates tokens by flash borrowing from the token/<base token> pool on V2.Returns     Status.FOT if we detected a fee is taken on transfer.     Status.STF if transfer failed for the token.     Status.UNKN if we did not detect any issues with the token.A return value of Status.UNKN does not mean the token is definitely not a fee on transfer token     or definitely has no problems with its transfer. It just means we cant say for sure that it has any     issues.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/router/contracts/interfaces/ITokenValidator.sol\":\"ITokenValidator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@beatx/=src/beatx/\",\":@horizondex/=src/horizondex/\",\":@matterlabs/=lib/aa-signature-checker/\",\":@merkle/=src/mproof/\",\":@metazeus/=src/metazeus/\",\":@mute/=src/mute-c4/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@pancakeswap/=src/\",\":@protomerkle/=lib/protomerkle/\",\":@rabbithole/=src/rabbithole-c4/\",\":@solmate/=lib/solmate/src/\",\":@tokensales/=src/TokenSales/\",\":@uniswap/=lib/\",\":@zks/=src/zks/\",\":base64-sol/=lib/base64/\",\":base64/=lib/base64/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solidity-lib/=lib/solidity-lib/contracts/\",\":v2-core/=lib/v2-core/contracts/\"]},\"sources\":{\"src/router/contracts/interfaces/ITokenValidator.sol\":{\"keccak256\":\"0xf58c6fd42f5a94295958d70842578e2f23fc888a0fea00b028c5f16cfe8be753\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://092899260ed33495bc76d13b8b10c521fa90c426db681e49388c80cb8710e197\",\"dweb:/ipfs/QmQbXJovdUmLqmuUsBziYjWv28tnxo9P6kryCMCF2YqeBW\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "baseTokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "amountToBorrow",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchValidate",
          "outputs": [
            {
              "internalType": "enum ITokenValidator.Status[]",
              "name": "",
              "type": "uint8[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "baseTokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "amountToBorrow",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validate",
          "outputs": [
            {
              "internalType": "enum ITokenValidator.Status",
              "name": "",
              "type": "uint8"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "batchValidate(address[],address[],uint256)": {
            "params": {
              "amountToBorrow": "The amount to try flash borrowing from the pools",
              "baseTokens": "The addresses of the tokens to try pairing with token when looking for a pool to flash loan from.",
              "tokens": "The addresses of the tokens to check for fee on transfer"
            },
            "returns": {
              "_0": "The status of the token"
            }
          },
          "validate(address,address[],uint256)": {
            "params": {
              "amountToBorrow": "The amount to try flash borrowing from the pools",
              "baseTokens": "The addresses of the tokens to try pairing with token when looking for a pool to flash loan from.",
              "token": "The address of the token to check for fee on transfer"
            },
            "returns": {
              "_0": "The status of the token"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "batchValidate(address[],address[],uint256)": {
            "notice": "Validates each token by detecting if its transferable or takes a fee on transfer"
          },
          "validate(address,address[],uint256)": {
            "notice": "Validates a token by detecting if its transferable or takes a fee on transfer"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@beatx/=src/beatx/",
        "@horizondex/=src/horizondex/",
        "@matterlabs/=lib/aa-signature-checker/",
        "@merkle/=src/mproof/",
        "@metazeus/=src/metazeus/",
        "@mute/=src/mute-c4/",
        "@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@pancakeswap/=src/",
        "@protomerkle/=lib/protomerkle/",
        "@rabbithole/=src/rabbithole-c4/",
        "@solmate/=lib/solmate/src/",
        "@tokensales/=src/TokenSales/",
        "@uniswap/=lib/",
        "@zks/=src/zks/",
        "base64-sol/=lib/base64/",
        "base64/=lib/base64/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "solidity-lib/=lib/solidity-lib/contracts/",
        "v2-core/=lib/v2-core/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/router/contracts/interfaces/ITokenValidator.sol": "ITokenValidator"
      },
      "libraries": {}
    },
    "sources": {
      "src/router/contracts/interfaces/ITokenValidator.sol": {
        "keccak256": "0xf58c6fd42f5a94295958d70842578e2f23fc888a0fea00b028c5f16cfe8be753",
        "urls": [
          "bzz-raw://092899260ed33495bc76d13b8b10c521fa90c426db681e49388c80cb8710e197",
          "dweb:/ipfs/QmQbXJovdUmLqmuUsBziYjWv28tnxo9P6kryCMCF2YqeBW"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/router/contracts/interfaces/ITokenValidator.sol",
    "id": 43346,
    "exportedSymbols": {
      "ITokenValidator": [
        43345
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:2587:29",
    "nodes": [
      {
        "id": 43308,
        "nodeType": "PragmaDirective",
        "src": "45:24:29",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".5"
        ]
      },
      {
        "id": 43309,
        "nodeType": "PragmaDirective",
        "src": "70:19:29",
        "nodes": [],
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 43345,
        "nodeType": "ContractDefinition",
        "src": "1238:1393:29",
        "nodes": [
          {
            "id": 43314,
            "nodeType": "EnumDefinition",
            "src": "1428:28:29",
            "nodes": [],
            "canonicalName": "ITokenValidator.Status",
            "members": [
              {
                "id": 43311,
                "name": "UNKN",
                "nameLocation": "1441:4:29",
                "nodeType": "EnumValue",
                "src": "1441:4:29"
              },
              {
                "id": 43312,
                "name": "FOT",
                "nameLocation": "1447:3:29",
                "nodeType": "EnumValue",
                "src": "1447:3:29"
              },
              {
                "id": 43313,
                "name": "STF",
                "nameLocation": "1452:3:29",
                "nodeType": "EnumValue",
                "src": "1452:3:29"
              }
            ],
            "name": "Status",
            "nameLocation": "1433:6:29"
          },
          {
            "id": 43328,
            "nodeType": "FunctionDefinition",
            "src": "1882:144:29",
            "nodes": [],
            "documentation": {
              "id": 43315,
              "nodeType": "StructuredDocumentation",
              "src": "1462:415:29",
              "text": "@notice Validates a token by detecting if its transferable or takes a fee on transfer\n @param token The address of the token to check for fee on transfer\n @param baseTokens The addresses of the tokens to try pairing with\n token when looking for a pool to flash loan from.\n @param amountToBorrow The amount to try flash borrowing from the pools\n @return The status of the token"
            },
            "functionSelector": "0143aace",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "validate",
            "nameLocation": "1891:8:29",
            "parameters": {
              "id": 43323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43317,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1917:5:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 43328,
                  "src": "1909:13:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1909:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43320,
                  "mutability": "mutable",
                  "name": "baseTokens",
                  "nameLocation": "1951:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 43328,
                  "src": "1932:29:29",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 43318,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1932:7:29",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 43319,
                    "nodeType": "ArrayTypeName",
                    "src": "1932:9:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43322,
                  "mutability": "mutable",
                  "name": "amountToBorrow",
                  "nameLocation": "1979:14:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 43328,
                  "src": "1971:22:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1971:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1899:100:29"
            },
            "returnParameters": {
              "id": 43327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43326,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43328,
                  "src": "2018:6:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Status_$43314",
                    "typeString": "enum ITokenValidator.Status"
                  },
                  "typeName": {
                    "id": 43325,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43324,
                      "name": "Status",
                      "nameLocations": [
                        "2018:6:29"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43314,
                      "src": "2018:6:29"
                    },
                    "referencedDeclaration": 43314,
                    "src": "2018:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$43314",
                      "typeString": "enum ITokenValidator.Status"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2017:8:29"
            },
            "scope": 43345,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43344,
            "nodeType": "FunctionDefinition",
            "src": "2459:170:29",
            "nodes": [],
            "documentation": {
              "id": 43329,
              "nodeType": "StructuredDocumentation",
              "src": "2032:422:29",
              "text": "@notice Validates each token by detecting if its transferable or takes a fee on transfer\n @param tokens The addresses of the tokens to check for fee on transfer\n @param baseTokens The addresses of the tokens to try pairing with\n token when looking for a pool to flash loan from.\n @param amountToBorrow The amount to try flash borrowing from the pools\n @return The status of the token"
            },
            "functionSelector": "be7672e5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "batchValidate",
            "nameLocation": "2468:13:29",
            "parameters": {
              "id": 43338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43332,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "2510:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 43344,
                  "src": "2491:25:29",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 43330,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2491:7:29",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 43331,
                    "nodeType": "ArrayTypeName",
                    "src": "2491:9:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43335,
                  "mutability": "mutable",
                  "name": "baseTokens",
                  "nameLocation": "2545:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 43344,
                  "src": "2526:29:29",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 43333,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2526:7:29",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 43334,
                    "nodeType": "ArrayTypeName",
                    "src": "2526:9:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43337,
                  "mutability": "mutable",
                  "name": "amountToBorrow",
                  "nameLocation": "2573:14:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 43344,
                  "src": "2565:22:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2565:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2481:112:29"
            },
            "returnParameters": {
              "id": 43343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43342,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43344,
                  "src": "2612:15:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_Status_$43314_$dyn_memory_ptr",
                    "typeString": "enum ITokenValidator.Status[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 43340,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 43339,
                        "name": "Status",
                        "nameLocations": [
                          "2612:6:29"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 43314,
                        "src": "2612:6:29"
                      },
                      "referencedDeclaration": 43314,
                      "src": "2612:6:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$43314",
                        "typeString": "enum ITokenValidator.Status"
                      }
                    },
                    "id": 43341,
                    "nodeType": "ArrayTypeName",
                    "src": "2612:8:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_Status_$43314_$dyn_storage_ptr",
                      "typeString": "enum ITokenValidator.Status[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2611:17:29"
            },
            "scope": 43345,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ITokenValidator",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 43310,
          "nodeType": "StructuredDocumentation",
          "src": "91:1147:29",
          "text": "@notice Validates tokens by flash borrowing from the token/<base token> pool on V2.\n @notice Returns\n     Status.FOT if we detected a fee is taken on transfer.\n     Status.STF if transfer failed for the token.\n     Status.UNKN if we did not detect any issues with the token.\n @notice A return value of Status.UNKN does not mean the token is definitely not a fee on transfer token\n     or definitely has no problems with its transfer. It just means we cant say for sure that it has any\n     issues.\n @dev We can not guarantee the result of this lens is correct for a few reasons:\n @dev 1/ Some tokens take fees or allow transfers under specific conditions, for example some have an allowlist\n @dev    of addresses that do/dont require fees. Therefore the result is not guaranteed to be correct\n @dev    in all circumstances.\n @dev 2/ It is possible that the token does not have any pools on V2 therefore we are not able to perform\n @dev    a flashloan to test the token.\n @dev These functions are not marked view because they rely on calling non-view functions and reverting\n to compute the result."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          43345
        ],
        "name": "ITokenValidator",
        "nameLocation": "1248:15:29",
        "scope": 43346,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 29
}