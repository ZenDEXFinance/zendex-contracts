{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "previousBlockhash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "multicall(bytes32,bytes[])": "1f0464d1",
    "multicall(bytes[])": "ac9650d8",
    "multicall(uint256,bytes[])": "5ae401dc"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"previousBlockhash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"multicall(bytes32,bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\",\"previousBlockhash\":\"The expected parent blockHash\"},\"returns\":{\"_0\":\"The results from each of the calls passed in via data\"}},\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}},\"multicall(uint256,bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\",\"deadline\":\"The time by which this function must be called before failing\"},\"returns\":{\"_0\":\"The results from each of the calls passed in via data\"}}},\"title\":\"Multicall\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"multicall(bytes32,bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"},\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"},\"multicall(uint256,bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"}},\"notice\":\"Enables calling multiple methods in a single call to the contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/router/contracts/base/MulticallExtended.sol\":\"MulticallExtended\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@beatx/=src/beatx/\",\":@horizondex/=src/horizondex/\",\":@matterlabs/=lib/aa-signature-checker/\",\":@merkle/=src/mproof/\",\":@metazeus/=src/metazeus/\",\":@mute/=src/mute-c4/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@oz4.8.1/=lib/oz4.8.1/\",\":@pancakeswap/=src/\",\":@protomerkle/=lib/protomerkle/\",\":@rabbithole/=src/rabbithole-c4/\",\":@solmate/=lib/solmate/src/\",\":@tokensales/=src/TokenSales/\",\":@uniswap/=lib/\",\":@zks/=src/zks/\",\":base64-sol/=lib/base64/\",\":base64/=lib/base64/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/oz4.9.2/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/oz4.9.2/contracts/\",\":oz4.8.1/=lib/oz4.8.1/\",\":oz4.9.2/=lib/oz4.9.2/\",\":solidity-lib/=lib/solidity-lib/contracts/\",\":v2-core/=lib/v2-core/contracts/\"]},\"sources\":{\"src/router/contracts/base/MulticallExtended.sol\":{\"keccak256\":\"0x4bacb5f980dbb07c24ff416095ddda2ce8f4abd285421408c0138b736884aaca\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4902da837943e69ca428de2fca75ad7521ffb64a768630f96ad7406717f28cd1\",\"dweb:/ipfs/QmPqpMZwwzEqRMxeVhGDxMdvqbX6w23ELk4zcEQci7WTTr\"]},\"src/router/contracts/base/PeripheryValidationExtended.sol\":{\"keccak256\":\"0x8a6d484e40e8c00f939dfb22bee3a558fcdb4cb06a49e74acd6035c37e561340\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf6b544de3c808c9abf7335ef73715b90f81f8898f3f7686def923c9576462e\",\"dweb:/ipfs/QmS2aa2pomQ7av6kxfute7AymcgtYEpifWGu7bbH8HMVWv\"]},\"src/router/contracts/interfaces/IMulticallExtended.sol\":{\"keccak256\":\"0xf302e53e0d54511327c61225a4a006d174d6cd473a6ddb4dcbdcdfb2b09f27f6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://44334dc45417652919086e13be9cdae4ce92768a2e4d46a7b6b38ce10a58b575\",\"dweb:/ipfs/QmTumYYegUPSDSf6xUQSLwjvt113KUq49bwuZyYveNJAx3\"]},\"src/v3-periphery/contracts/base/BlockTimestamp.sol\":{\"keccak256\":\"0x1aa66f71234064a0c0976f62233f2edbd69554e5ad817dc97f318bc8e11f4da6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b3a40450e9d6b0f9cb91b40ffd6215612505bd74e7d954529958f4edc6ee7b93\",\"dweb:/ipfs/QmewsUCHK5N5KhNtqEwK8JgsXFADyFBrQRS5HoDWM5gi3b\"]},\"src/v3-periphery/contracts/base/Multicall.sol\":{\"keccak256\":\"0xfcfd78c62d2145634a791d5680a1af7055fbd301c415d29c09333c99c37d9037\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0d1c8f4a18cec8ad49e5269c5b07c7f6fd497dfc1b7b777f8ddcfb8055efd803\",\"dweb:/ipfs/QmdeCTnfHM3RGtQuo3DMX9m7gPspGGwQp7ho6m9cJjjnER\"]},\"src/v3-periphery/contracts/base/PeripheryValidation.sol\":{\"keccak256\":\"0xc736bab599912d6212e8414ee4ba7af0c1e08ff6aa11caa85f5f6e07f7d421c3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://06f6c13a86900c71fa486fc029a59d1b7eb96162bb42885b5f845d995294893e\",\"dweb:/ipfs/QmUcBxMsmncw9n6eXhzzwSasGBvBGKH5FT8HSrAxrsXV4A\"]},\"src/v3-periphery/contracts/interfaces/IMulticall.sol\":{\"keccak256\":\"0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016\",\"dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.7.6+commit.7338295f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "previousBlockhash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "multicall(bytes32,bytes[])": {
            "details": "The `msg.value` should not be trusted for any method callable from multicall.",
            "params": {
              "data": "The encoded function data for each of the calls to make to this contract",
              "previousBlockhash": "The expected parent blockHash"
            },
            "returns": {
              "_0": "The results from each of the calls passed in via data"
            }
          },
          "multicall(bytes[])": {
            "details": "The `msg.value` should not be trusted for any method callable from multicall.",
            "params": {
              "data": "The encoded function data for each of the calls to make to this contract"
            },
            "returns": {
              "results": "The results from each of the calls passed in via data"
            }
          },
          "multicall(uint256,bytes[])": {
            "details": "The `msg.value` should not be trusted for any method callable from multicall.",
            "params": {
              "data": "The encoded function data for each of the calls to make to this contract",
              "deadline": "The time by which this function must be called before failing"
            },
            "returns": {
              "_0": "The results from each of the calls passed in via data"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "multicall(bytes32,bytes[])": {
            "notice": "Call multiple functions in the current contract and return the data from all of them if they all succeed"
          },
          "multicall(bytes[])": {
            "notice": "Call multiple functions in the current contract and return the data from all of them if they all succeed"
          },
          "multicall(uint256,bytes[])": {
            "notice": "Call multiple functions in the current contract and return the data from all of them if they all succeed"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@beatx/=src/beatx/",
        "@horizondex/=src/horizondex/",
        "@matterlabs/=lib/aa-signature-checker/",
        "@merkle/=src/mproof/",
        "@metazeus/=src/metazeus/",
        "@mute/=src/mute-c4/",
        "@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@oz4.8.1/=lib/oz4.8.1/",
        "@pancakeswap/=src/",
        "@protomerkle/=lib/protomerkle/",
        "@rabbithole/=src/rabbithole-c4/",
        "@solmate/=lib/solmate/src/",
        "@tokensales/=src/TokenSales/",
        "@uniswap/=lib/",
        "@zks/=src/zks/",
        "base64-sol/=lib/base64/",
        "base64/=lib/base64/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/oz4.9.2/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "openzeppelin/=lib/oz4.9.2/contracts/",
        "oz4.8.1/=lib/oz4.8.1/",
        "oz4.9.2/=lib/oz4.9.2/",
        "solidity-lib/=lib/solidity-lib/contracts/",
        "v2-core/=lib/v2-core/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/router/contracts/base/MulticallExtended.sol": "MulticallExtended"
      },
      "libraries": {}
    },
    "sources": {
      "src/router/contracts/base/MulticallExtended.sol": {
        "keccak256": "0x4bacb5f980dbb07c24ff416095ddda2ce8f4abd285421408c0138b736884aaca",
        "urls": [
          "bzz-raw://4902da837943e69ca428de2fca75ad7521ffb64a768630f96ad7406717f28cd1",
          "dweb:/ipfs/QmPqpMZwwzEqRMxeVhGDxMdvqbX6w23ELk4zcEQci7WTTr"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/router/contracts/base/PeripheryValidationExtended.sol": {
        "keccak256": "0x8a6d484e40e8c00f939dfb22bee3a558fcdb4cb06a49e74acd6035c37e561340",
        "urls": [
          "bzz-raw://5cf6b544de3c808c9abf7335ef73715b90f81f8898f3f7686def923c9576462e",
          "dweb:/ipfs/QmS2aa2pomQ7av6kxfute7AymcgtYEpifWGu7bbH8HMVWv"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/router/contracts/interfaces/IMulticallExtended.sol": {
        "keccak256": "0xf302e53e0d54511327c61225a4a006d174d6cd473a6ddb4dcbdcdfb2b09f27f6",
        "urls": [
          "bzz-raw://44334dc45417652919086e13be9cdae4ce92768a2e4d46a7b6b38ce10a58b575",
          "dweb:/ipfs/QmTumYYegUPSDSf6xUQSLwjvt113KUq49bwuZyYveNJAx3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/base/BlockTimestamp.sol": {
        "keccak256": "0x1aa66f71234064a0c0976f62233f2edbd69554e5ad817dc97f318bc8e11f4da6",
        "urls": [
          "bzz-raw://b3a40450e9d6b0f9cb91b40ffd6215612505bd74e7d954529958f4edc6ee7b93",
          "dweb:/ipfs/QmewsUCHK5N5KhNtqEwK8JgsXFADyFBrQRS5HoDWM5gi3b"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/base/Multicall.sol": {
        "keccak256": "0xfcfd78c62d2145634a791d5680a1af7055fbd301c415d29c09333c99c37d9037",
        "urls": [
          "bzz-raw://0d1c8f4a18cec8ad49e5269c5b07c7f6fd497dfc1b7b777f8ddcfb8055efd803",
          "dweb:/ipfs/QmdeCTnfHM3RGtQuo3DMX9m7gPspGGwQp7ho6m9cJjjnER"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/base/PeripheryValidation.sol": {
        "keccak256": "0xc736bab599912d6212e8414ee4ba7af0c1e08ff6aa11caa85f5f6e07f7d421c3",
        "urls": [
          "bzz-raw://06f6c13a86900c71fa486fc029a59d1b7eb96162bb42885b5f845d995294893e",
          "dweb:/ipfs/QmUcBxMsmncw9n6eXhzzwSasGBvBGKH5FT8HSrAxrsXV4A"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/v3-periphery/contracts/interfaces/IMulticall.sol": {
        "keccak256": "0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b",
        "urls": [
          "bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016",
          "dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/router/contracts/base/MulticallExtended.sol",
    "id": 7758,
    "exportedSymbols": {
      "BlockTimestamp": [
        31233
      ],
      "IMulticall": [
        32866
      ],
      "IMulticallExtended": [
        8659
      ],
      "Multicall": [
        31743
      ],
      "MulticallExtended": [
        7757
      ],
      "PeripheryValidation": [
        32195
      ],
      "PeripheryValidationExtended": [
        8432
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:962:38",
    "nodes": [
      {
        "id": 7703,
        "nodeType": "PragmaDirective",
        "src": "45:23:38",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.7",
          ".6"
        ]
      },
      {
        "id": 7704,
        "nodeType": "PragmaDirective",
        "src": "69:19:38",
        "nodes": [],
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 7705,
        "nodeType": "ImportDirective",
        "src": "90:64:38",
        "nodes": [],
        "absolutePath": "src/v3-periphery/contracts/base/Multicall.sol",
        "file": "@pancakeswap/v3-periphery/contracts/base/Multicall.sol",
        "scope": 7758,
        "sourceUnit": 31744,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7706,
        "nodeType": "ImportDirective",
        "src": "156:46:38",
        "nodes": [],
        "absolutePath": "src/router/contracts/interfaces/IMulticallExtended.sol",
        "file": "../interfaces/IMulticallExtended.sol",
        "scope": 7758,
        "sourceUnit": 8660,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7707,
        "nodeType": "ImportDirective",
        "src": "203:49:38",
        "nodes": [],
        "absolutePath": "src/router/contracts/base/PeripheryValidationExtended.sol",
        "file": "../base/PeripheryValidationExtended.sol",
        "scope": 7758,
        "sourceUnit": 8433,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7757,
        "nodeType": "ContractDefinition",
        "src": "353:653:38",
        "nodes": [
          {
            "id": 7735,
            "nodeType": "FunctionDefinition",
            "src": "496:218:38",
            "nodes": [],
            "body": {
              "id": 7734,
              "nodeType": "Block",
              "src": "675:39:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7731,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7720,
                        "src": "702:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes calldata[] calldata"
                        }
                      ],
                      "id": 7730,
                      "name": "multicall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31742,
                      "src": "692:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (bytes calldata[] calldata) returns (bytes memory[] memory)"
                      }
                    },
                    "id": 7732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:15:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "functionReturnParameters": 7729,
                  "id": 7733,
                  "nodeType": "Return",
                  "src": "685:22:38"
                }
              ]
            },
            "baseFunctions": [
              8646
            ],
            "documentation": {
              "id": 7715,
              "nodeType": "StructuredDocumentation",
              "src": "457:34:38",
              "text": "@inheritdoc IMulticallExtended"
            },
            "functionSelector": "5ae401dc",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 7724,
                    "name": "deadline",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7717,
                    "src": "628:8:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 7725,
                "modifierName": {
                  "id": 7723,
                  "name": "checkDeadline",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 32194,
                  "src": "614:13:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "614:23:38"
              }
            ],
            "name": "multicall",
            "overrides": {
              "id": 7722,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "597:8:38"
            },
            "parameters": {
              "id": 7721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7717,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "scope": 7735,
                  "src": "515:16:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "515:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7720,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 7735,
                  "src": "533:21:38",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7718,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "533:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 7719,
                    "nodeType": "ArrayTypeName",
                    "src": "533:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "514:41:38"
            },
            "returnParameters": {
              "id": 7729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7728,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7735,
                  "src": "655:14:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7726,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "655:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 7727,
                    "nodeType": "ArrayTypeName",
                    "src": "655:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "654:16:38"
            },
            "scope": 7757,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7756,
            "nodeType": "FunctionDefinition",
            "src": "759:245:38",
            "nodes": [],
            "body": {
              "id": 7755,
              "nodeType": "Block",
              "src": "965:39:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7752,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7741,
                        "src": "992:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes calldata[] calldata"
                        }
                      ],
                      "id": 7751,
                      "name": "multicall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31742,
                      "src": "982:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (bytes calldata[] calldata) returns (bytes memory[] memory)"
                      }
                    },
                    "id": 7753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "982:15:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "functionReturnParameters": 7750,
                  "id": 7754,
                  "nodeType": "Return",
                  "src": "975:22:38"
                }
              ]
            },
            "baseFunctions": [
              8658
            ],
            "documentation": {
              "id": 7736,
              "nodeType": "StructuredDocumentation",
              "src": "720:34:38",
              "text": "@inheritdoc IMulticallExtended"
            },
            "functionSelector": "1f0464d1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 7745,
                    "name": "previousBlockhash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7738,
                    "src": "909:17:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 7746,
                "modifierName": {
                  "id": 7744,
                  "name": "checkPreviousBlockhash",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8431,
                  "src": "886:22:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "886:41:38"
              }
            ],
            "name": "multicall",
            "overrides": {
              "id": 7743,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "869:8:38"
            },
            "parameters": {
              "id": 7742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7738,
                  "mutability": "mutable",
                  "name": "previousBlockhash",
                  "nodeType": "VariableDeclaration",
                  "scope": 7756,
                  "src": "778:25:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7737,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7741,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 7756,
                  "src": "805:21:38",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7739,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "805:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 7740,
                    "nodeType": "ArrayTypeName",
                    "src": "805:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "777:50:38"
            },
            "returnParameters": {
              "id": 7750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7749,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7756,
                  "src": "945:14:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7747,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "945:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 7748,
                    "nodeType": "ArrayTypeName",
                    "src": "945:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "944:16:38"
            },
            "scope": 7757,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 7709,
              "name": "IMulticallExtended",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8659,
              "src": "392:18:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMulticallExtended_$8659",
                "typeString": "contract IMulticallExtended"
              }
            },
            "id": 7710,
            "nodeType": "InheritanceSpecifier",
            "src": "392:18:38"
          },
          {
            "baseName": {
              "id": 7711,
              "name": "Multicall",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 31743,
              "src": "412:9:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Multicall_$31743",
                "typeString": "contract Multicall"
              }
            },
            "id": 7712,
            "nodeType": "InheritanceSpecifier",
            "src": "412:9:38"
          },
          {
            "baseName": {
              "id": 7713,
              "name": "PeripheryValidationExtended",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8432,
              "src": "423:27:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PeripheryValidationExtended_$8432",
                "typeString": "contract PeripheryValidationExtended"
              }
            },
            "id": 7714,
            "nodeType": "InheritanceSpecifier",
            "src": "423:27:38"
          }
        ],
        "contractDependencies": [
          8432,
          8659,
          31233,
          31743,
          32195,
          32866
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 7708,
          "nodeType": "StructuredDocumentation",
          "src": "254:99:38",
          "text": "@title Multicall\n @notice Enables calling multiple methods in a single call to the contract"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          7757,
          8432,
          32195,
          31233,
          31743,
          8659,
          32866
        ],
        "name": "MulticallExtended",
        "scope": 7758
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 38
}