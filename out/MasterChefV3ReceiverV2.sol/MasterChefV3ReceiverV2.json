{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IMasterChefV3",
          "name": "_v3",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_cake",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NoBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwnerOrOperator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddress",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operatorAddress",
          "type": "address"
        }
      ],
      "name": "NewOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "withUpdate",
          "type": "bool"
        }
      ],
      "name": "Upkeep",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "Cake",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MasterChefV3",
      "outputs": [
        {
          "internalType": "contract IMasterChefV3",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operatorAddress",
          "type": "address"
        }
      ],
      "name": "setOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_withUpdate",
          "type": "bool"
        }
      ],
      "name": "upkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "262:2357:46:-:0;;;1017:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:19;719:10:26;936:18:19;:32::i;:::-;-1:-1:-1;;;;;1072:18:46;;;;;1100:12;;;;;;1123:49;;1087:3;-1:-1:-1;;1123:16:46;:49::i;:::-;1017:162;;262:2357;;2433:187:19;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:19;;;-1:-1:-1;;;;;;2541:17:19;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1475:603:23:-;1830:10;;;1829:62;;-1:-1:-1;1846:39:23;;-1:-1:-1;;;1846:39:23;;1870:4;1846:39;;;836:34:105;-1:-1:-1;;;;;906:15:105;;;886:18;;;879:43;1846:15:23;;;;;771:18:105;;1846:39:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1829:62;1808:163;;;;-1:-1:-1;;;1808:163:23;;1324:2:105;1808:163:23;;;1306:21:105;1363:2;1343:18;;;1336:30;1402:34;1382:18;;;1375:62;1473:24;1453:18;;;1446:52;1515:19;;1808:163:23;;;;;;;;;2008:62;;;-1:-1:-1;;;;;1737:32:105;;2008:62:23;;;1719:51:105;1786:18;;;;1779:34;;;2008:62:23;;;;;;;;;;1692:18:105;;;;2008:62:23;;;;;;;;-1:-1:-1;;;;;2008:62:23;;;-1:-1:-1;;;2008:62:23;;;;1981:90;;2001:5;;1981:19;:90;:::i;:::-;1475:603;;;:::o;3747:706::-;4192:69;;;;;;;;;;;;;;;;;;4166:23;;4192:69;;-1:-1:-1;;;;;4192:27:23;;;4220:4;;4192:27;:69::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:23;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:23;;2308:2:105;4351:85:23;;;2290:21:105;2347:2;2327:18;;;2320:30;2386:34;2366:18;;;2359:62;-1:-1:-1;;;2437:18:105;;;2430:40;2487:19;;4351:85:23;2106:406:105;3873:223:25;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:25:o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:25;;2719:2:105;5149:81:25;;;2701:21:105;2758:2;2738:18;;;2731:30;2797:34;2777:18;;;2770:62;-1:-1:-1;;;2848:18:105;;;2841:36;2894:19;;5149:81:25;2517:402:105;5149:81:25;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:25;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5240:73:25;;-1:-1:-1;5240:73:25;-1:-1:-1;5330:69:25;5357:6;5240:73;;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:25:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:25;;;7908:60;;;;-1:-1:-1;;;7908:60:25;;3673:2:105;7908:60:25;;;3655:21:105;3712:2;3692:18;;;3685:30;3751:31;3731:18;;;3724:59;3800:18;;7908:60:25;3471:353:105;7908:60:25;-1:-1:-1;8003:10:25;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:25;;;;;;;;:::i;14:146:105:-;-1:-1:-1;;;;;104:31:105;;94:42;;84:70;;150:1;147;140:12;84:70;14:146;:::o;165:454::-;283:6;291;344:2;332:9;323:7;319:23;315:32;312:52;;;360:1;357;350:12;312:52;392:9;386:16;411:46;451:5;411:46;:::i;:::-;526:2;511:18;;505:25;476:5;;-1:-1:-1;539:48:105;505:25;539:48;:::i;:::-;606:7;596:17;;;165:454;;;;;:::o;933:184::-;1003:6;1056:2;1044:9;1035:7;1031:23;1027:32;1024:52;;;1072:1;1069;1062:12;1024:52;-1:-1:-1;1095:16:105;;933:184;-1:-1:-1;933:184:105:o;1824:277::-;1891:6;1944:2;1932:9;1923:7;1919:23;1915:32;1912:52;;;1960:1;1957;1950:12;1912:52;1992:9;1986:16;2045:5;2038:13;2031:21;2024:5;2021:32;2011:60;;2067:1;2064;2057:12;2011:60;2090:5;1824:277;-1:-1:-1;;;1824:277:105:o;2924:250::-;3009:1;3019:113;3033:6;3030:1;3027:13;3019:113;;;3109:11;;;3103:18;3090:11;;;3083:39;3055:2;3048:10;3019:113;;;-1:-1:-1;;3166:1:105;3148:16;;3141:27;2924:250::o;3179:287::-;3308:3;3346:6;3340:13;3362:66;3421:6;3416:3;3409:4;3401:6;3397:17;3362:66;:::i;:::-;3444:16;;;;;3179:287;-1:-1:-1;;3179:287:105:o;3829:396::-;3978:2;3967:9;3960:21;3941:4;4010:6;4004:13;4053:6;4048:2;4037:9;4033:18;4026:34;4069:79;4141:6;4136:2;4125:9;4121:18;4116:2;4108:6;4104:15;4069:79;:::i;:::-;4209:2;4188:15;-1:-1:-1;;4184:29:105;4169:45;;;;4216:2;4165:54;;3829:396;-1:-1:-1;;3829:396:105:o;:::-;262:2357:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c806360911f2a1161006657806360911f2a14610116578063715018a61461013d5780638da5cb5b14610145578063b3ab15fb14610156578063f2fde38b1461016957600080fd5b80630ce5d4cc14610098578063127effb2146100ad5780631ad8c1e4146100dc57806351cff8d914610103575b600080fd5b6100ab6100a63660046108a2565b61017c565b005b6001546100c0906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100c07f000000000000000000000000000000000000000000000000000000000000000081565b6100ab6101113660046108f0565b610359565b6100c07f000000000000000000000000000000000000000000000000000000000000000081565b6100ab610426565b6000546001600160a01b03166100c0565b6100ab6101643660046108f0565b61043a565b6100ab6101773660046108f0565b6104b3565b6001546001600160a01b031633148015906101a257506000546001600160a01b03163314155b156101c057604051634c7bb68760e11b815260040160405180910390fd5b6040516370a0823160e01b815230600482015283906000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610229573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024d9190610914565b905084158061025b57508085115b15610264578091505b604051630339753360e21b8152600481018390526024810185905283151560448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630ce5d4cc90606401600060405180830381600087803b1580156102d557600080fd5b505af11580156102e9573d6000803e3d6000fd5b50506040805185815286151560208201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001693507f9bc0a7d1ea34f5c0b59023cff769f5d2cc8860bf24be25254ce420e658d48a7c92500160405180910390a25050505050565b610361610531565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156103a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cc9190610914565b90506103e26001600160a01b038316338361058b565b60405181815233906001600160a01b038416907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9060200160405180910390a35050565b61042e610531565b61043860006105e2565b565b610442610531565b6001600160a01b0381166104695760405163d92e233d60e01b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040517fda12ee837e6978172aaf54b16145ffe08414fd8710092ef033c71b8eb6ec189a90600090a250565b6104bb610531565b6001600160a01b0381166105255760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61052e816105e2565b50565b6000546001600160a01b031633146104385760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161051c565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526105dd908490610632565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610687826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107049092919063ffffffff16565b8051909150156105dd57808060200190518101906106a5919061092d565b6105dd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161051c565b6060610713848460008561071b565b949350505050565b60608247101561077c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161051c565b600080866001600160a01b03168587604051610798919061096e565b60006040518083038185875af1925050503d80600081146107d5576040519150601f19603f3d011682016040523d82523d6000602084013e6107da565b606091505b50915091506107eb878383876107f6565b979650505050505050565b6060831561086557825160000361085e576001600160a01b0385163b61085e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161051c565b5081610713565b610713838381511561087a5781518083602001fd5b8060405162461bcd60e51b815260040161051c919061098a565b801515811461052e57600080fd5b6000806000606084860312156108b757600080fd5b833592506020840135915060408401356108d081610894565b809150509250925092565b6001600160a01b038116811461052e57600080fd5b60006020828403121561090257600080fd5b813561090d816108db565b9392505050565b60006020828403121561092657600080fd5b5051919050565b60006020828403121561093f57600080fd5b815161090d81610894565b60005b8381101561096557818101518382015260200161094d565b50506000910152565b6000825161098081846020870161094a565b9190910192915050565b60208152600082518060208401526109a981604085016020870161094a565b601f01601f1916919091016040019291505056fea2646970667358221220e25f8feb3aee415763c555025170b2e09851d2ed30d59f0a5c7164abf092c00564736f6c63430008150033",
    "sourceMap": "262:2357:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1458:412;;;;;;:::i;:::-;;:::i;:::-;;428:30;;;;;-1:-1:-1;;;;;428:30:46;;;;;;-1:-1:-1;;;;;683:32:105;;;665:51;;653:2;638:18;428:30:46;;;;;;;378:43;;;;;2391:226;;;;;;:::i;:::-;;:::i;344:28::-;;;;;1831:101:19;;;:::i;1201:85::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:19;1201:85;;2000:227:46;;;;;;:::i;:::-;;:::i;2081:198:19:-;;;;;;:::i;:::-;;:::i;1458:412:46:-;812:15;;-1:-1:-1;;;;;812:15:46;798:10;:29;;;;:54;;-1:-1:-1;1247:7:19;1273:6;-1:-1:-1;;;;;1273:6:19;831:10:46;:21;;798:54;794:87;;;861:20;;-1:-1:-1;;;861:20:46;;;;;;;;;;;794:87;1619:29:::1;::::0;-1:-1:-1;;;1619:29:46;;1642:4:::1;1619:29;::::0;::::1;665:51:105::0;1584:7:46;;1567:14:::1;::::0;1619:4:::1;-1:-1:-1::0;;;;;1619:14:46::1;::::0;::::1;::::0;638:18:105;;1619:29:46::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1601:47:::0;-1:-1:-1;1662:12:46;;;:33:::1;;;1688:7;1678;:17;1662:33;1658:80;;;1720:7;1711:16;;1658:80;1747:51;::::0;-1:-1:-1;;;1747:51:46;;::::1;::::0;::::1;2247:25:105::0;;;2288:18;;;2281:34;;;2358:14;;2351:22;2331:18;;;2324:50;1747:12:46::1;-1:-1:-1::0;;;;;1747:19:46::1;::::0;::::1;::::0;2220:18:105;;1747:51:46::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1813:50:46::1;::::0;;2553:25:105;;;2621:14;;2614:22;2609:2;2594:18;;2587:50;-1:-1:-1;;;;;1828:12:46::1;1813:50;::::0;-1:-1:-1;1813:50:46::1;::::0;-1:-1:-1;2526:18:105;1813:50:46::1;;;;;;;1557:313;;1458:412:::0;;;:::o;2391:226::-;1094:13:19;:11;:13::i;:::-;2470:31:46::1;::::0;-1:-1:-1;;;2470:31:46;;2495:4:::1;2470:31;::::0;::::1;665:51:105::0;2453:14:46::1;::::0;-1:-1:-1;;;;;2470:16:46;::::1;::::0;::::1;::::0;638:18:105;;2470:31:46::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2453:48:::0;-1:-1:-1;2511:39:46::1;-1:-1:-1::0;;;;;2511:19:46;::::1;2531:10;2453:48:::0;2511:19:::1;:39::i;:::-;2565:45;::::0;2794:25:105;;;2591:10:46::1;::::0;-1:-1:-1;;;;;2565:45:46;::::1;::::0;::::1;::::0;2782:2:105;2767:18;2565:45:46::1;;;;;;;2443:174;2391:226:::0;:::o;1831:101:19:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2000:227:46:-;1094:13:19;:11;:13::i;:::-;-1:-1:-1;;;;;2080:30:46;::::1;2076:56;;2119:13;;-1:-1:-1::0;;;2119:13:46::1;;;;;;;;;;;2076:56;2142:15;:34:::0;;-1:-1:-1;;;;;;2142:34:46::1;-1:-1:-1::0;;;;;2142:34:46;::::1;::::0;;::::1;::::0;;;2191:29:::1;::::0;::::1;::::0;-1:-1:-1;;2191:29:46::1;2000:227:::0;:::o;2081:198:19:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:19;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:19;;3032:2:105;2161:73:19::1;::::0;::::1;3014:21:105::0;3071:2;3051:18;;;3044:30;3110:34;3090:18;;;3083:62;-1:-1:-1;;;3161:18:105;;;3154:36;3207:19;;2161:73:19::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:19;719:10:26;1422:23:19;1414:68;;;;-1:-1:-1;;;1414:68:19;;3439:2:105;1414:68:19;;;3421:21:105;;;3458:18;;;3451:30;3517:34;3497:18;;;3490:62;3569:18;;1414:68:19;3237:356:105;763:205:23;902:58;;;-1:-1:-1;;;;;3790:32:105;;902:58:23;;;3772:51:105;3839:18;;;;3832:34;;;902:58:23;;;;;;;;;;3745:18:105;;;;902:58:23;;;;;;;;-1:-1:-1;;;;;902:58:23;-1:-1:-1;;;902:58:23;;;875:86;;895:5;;875:19;:86::i;:::-;763:205;;;:::o;2433:187:19:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:19;;;-1:-1:-1;;;;;;2541:17:19;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;3747:706:23:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:23;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:23;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:23;;4329:2:105;4351:85:23;;;4311:21:105;4368:2;4348:18;;;4341:30;4407:34;4387:18;;;4380:62;-1:-1:-1;;;4458:18:105;;;4451:40;4508:19;;4351:85:23;4127:406:105;3873:223:25;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:25:o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:25;;4740:2:105;5149:81:25;;;4722:21:105;4779:2;4759:18;;;4752:30;4818:34;4798:18;;;4791:62;-1:-1:-1;;;4869:18:105;;;4862:36;4915:19;;5149:81:25;4538:402:105;5149:81:25;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:25;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:25:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:25;;;7908:60;;;;-1:-1:-1;;;7908:60:25;;5694:2:105;7908:60:25;;;5676:21:105;5733:2;5713:18;;;5706:30;5772:31;5752:18;;;5745:59;5821:18;;7908:60:25;5492:353:105;7908:60:25;-1:-1:-1;8003:10:25;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:25;;;;;;;;:::i;14:118:105:-;100:5;93:13;86:21;79:5;76:32;66:60;;122:1;119;112:12;137:377;211:6;219;227;280:2;268:9;259:7;255:23;251:32;248:52;;;296:1;293;286:12;248:52;332:9;319:23;309:33;;389:2;378:9;374:18;361:32;351:42;;443:2;432:9;428:18;415:32;456:28;478:5;456:28;:::i;:::-;503:5;493:15;;;137:377;;;;;:::o;958:139::-;-1:-1:-1;;;;;1041:31:105;;1031:42;;1021:70;;1087:1;1084;1077:12;1102:271;1177:6;1230:2;1218:9;1209:7;1205:23;1201:32;1198:52;;;1246:1;1243;1236:12;1198:52;1285:9;1272:23;1304:39;1337:5;1304:39;:::i;:::-;1362:5;1102:271;-1:-1:-1;;;1102:271:105:o;1862:184::-;1932:6;1985:2;1973:9;1964:7;1960:23;1956:32;1953:52;;;2001:1;1998;1991:12;1953:52;-1:-1:-1;2024:16:105;;1862:184;-1:-1:-1;1862:184:105:o;3877:245::-;3944:6;3997:2;3985:9;3976:7;3972:23;3968:32;3965:52;;;4013:1;4010;4003:12;3965:52;4045:9;4039:16;4064:28;4086:5;4064:28;:::i;4945:250::-;5030:1;5040:113;5054:6;5051:1;5048:13;5040:113;;;5130:11;;;5124:18;5111:11;;;5104:39;5076:2;5069:10;5040:113;;;-1:-1:-1;;5187:1:105;5169:16;;5162:27;4945:250::o;5200:287::-;5329:3;5367:6;5361:13;5383:66;5442:6;5437:3;5430:4;5422:6;5418:17;5383:66;:::i;:::-;5465:16;;;;;5200:287;-1:-1:-1;;5200:287:105:o;5850:396::-;5999:2;5988:9;5981:21;5962:4;6031:6;6025:13;6074:6;6069:2;6058:9;6054:18;6047:34;6090:79;6162:6;6157:2;6146:9;6142:18;6137:2;6129:6;6125:15;6090:79;:::i;:::-;6230:2;6209:15;-1:-1:-1;;6205:29:105;6190:45;;;;6237:2;6186:54;;5850:396;-1:-1:-1;;5850:396:105:o",
    "linkReferences": {},
    "immutableReferences": {
      "47840": [
        {
          "start": 283,
          "length": 32
        },
        {
          "start": 474,
          "length": 32
        }
      ],
      "47843": [
        {
          "start": 225,
          "length": 32
        },
        {
          "start": 649,
          "length": 32
        },
        {
          "start": 772,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "Cake()": "60911f2a",
    "MasterChefV3()": "1ad8c1e4",
    "operatorAddress()": "127effb2",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setOperator(address)": "b3ab15fb",
    "transferOwnership(address)": "f2fde38b",
    "upkeep(uint256,uint256,bool)": "0ce5d4cc",
    "withdraw(address)": "51cff8d9"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IMasterChefV3\",\"name\":\"_v3\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_cake\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NoBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwnerOrOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operatorAddress\",\"type\":\"address\"}],\"name\":\"NewOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"withUpdate\",\"type\":\"bool\"}],\"name\":\"Upkeep\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Cake\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MasterChefV3\",\"outputs\":[{\"internalType\":\"contract IMasterChefV3\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operatorAddress\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"upkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_cake\":\"Cake token address.\",\"_v3\":\"MasterChef V3 address.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setOperator(address)\":{\"details\":\"Callable by owner.\",\"params\":{\"_operatorAddress\":\"New operator address.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upkeep(uint256,uint256,bool)\":{\"details\":\"Callable by owner or operator.\",\"params\":{\"_amount\":\"Injection amount, the injection amount can be flexibly controlled.\",\"_duration\":\"The period duration.\",\"_withUpdate\":\"Whether call \\\"massUpdatePools\\\" operation.\"}},\"withdraw(address)\":{\"details\":\"Callable by owner.\",\"params\":{\"_token\":\"Token address.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor.\"},\"setOperator(address)\":{\"notice\":\"Set operator address.\"},\"upkeep(uint256,uint256,bool)\":{\"notice\":\"upkeep.\"},\"withdraw(address)\":{\"notice\":\"Withdraw unexpected tokens sent to the receiver, can also withdraw cake.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/masterchef-v3/contracts/receiver/MasterChefV3ReceiverV2.sol\":\"MasterChefV3ReceiverV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@beatx/=src/beatx/\",\":@horizondex/=src/horizondex/\",\":@matterlabs/=lib/aa-signature-checker/\",\":@merkle/=src/mproof/\",\":@metazeus/=src/metazeus/\",\":@mute/=src/mute-c4/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@oz4.8.1/=lib/oz4.8.1/\",\":@pancakeswap/=src/\",\":@protomerkle/=lib/protomerkle/\",\":@rabbithole/=src/rabbithole-c4/\",\":@solmate/=lib/solmate/src/\",\":@tokensales/=src/TokenSales/\",\":@uniswap/=lib/\",\":@zks/=src/zks/\",\":base64-sol/=lib/base64/\",\":base64/=lib/base64/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/oz4.9.2/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/oz4.9.2/contracts/\",\":oz4.8.1/=lib/oz4.8.1/\",\":oz4.9.2/=lib/oz4.9.2/\",\":solidity-lib/=lib/solidity-lib/contracts/\",\":v2-core/=lib/v2-core/contracts/\"]},\"sources\":{\"lib/oz4.8.1/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/oz4.8.1/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/oz4.8.1/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/oz4.8.1/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/oz4.8.1/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/oz4.8.1/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/masterchef-v3/contracts/interfaces/IMasterChefV3.sol\":{\"keccak256\":\"0x868cac7fb2a98ae223aa1dd1977d63505acab8bfb8b655860063c8dda468f600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b570997da0f77b41d6ce0a086f71d5fd830046b1d9b4c7faae8da7d67bd42e32\",\"dweb:/ipfs/QmPANyJjnEkMQMTe8VuVz12zjzseFyZVWfY8VRJPmEQwFG\"]},\"src/masterchef-v3/contracts/receiver/MasterChefV3ReceiverV2.sol\":{\"keccak256\":\"0xf8f4eb96883d1ee5a037be2498039d8ac828fa0b54aefddba86d1b10f367e192\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a614a2b91c85a3855e209918a98754f27dc7ba03d4440e81f747096b09914e3\",\"dweb:/ipfs/QmTyAM3Nu2KvugrV74aBC8XYQhe4BhQMAbZmTGMxNcHqVG\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IMasterChefV3",
              "name": "_v3",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "_cake",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotOwnerOrOperator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operatorAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "withUpdate",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Upkeep",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "Cake",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MasterChefV3",
          "outputs": [
            {
              "internalType": "contract IMasterChefV3",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operatorAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_duration",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_withUpdate",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upkeep"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_cake": "Cake token address.",
              "_v3": "MasterChef V3 address."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setOperator(address)": {
            "details": "Callable by owner.",
            "params": {
              "_operatorAddress": "New operator address."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "upkeep(uint256,uint256,bool)": {
            "details": "Callable by owner or operator.",
            "params": {
              "_amount": "Injection amount, the injection amount can be flexibly controlled.",
              "_duration": "The period duration.",
              "_withUpdate": "Whether call \"massUpdatePools\" operation."
            }
          },
          "withdraw(address)": {
            "details": "Callable by owner.",
            "params": {
              "_token": "Token address."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Constructor."
          },
          "setOperator(address)": {
            "notice": "Set operator address."
          },
          "upkeep(uint256,uint256,bool)": {
            "notice": "upkeep."
          },
          "withdraw(address)": {
            "notice": "Withdraw unexpected tokens sent to the receiver, can also withdraw cake."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@beatx/=src/beatx/",
        "@horizondex/=src/horizondex/",
        "@matterlabs/=lib/aa-signature-checker/",
        "@merkle/=src/mproof/",
        "@metazeus/=src/metazeus/",
        "@mute/=src/mute-c4/",
        "@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@oz4.8.1/=lib/oz4.8.1/",
        "@pancakeswap/=src/",
        "@protomerkle/=lib/protomerkle/",
        "@rabbithole/=src/rabbithole-c4/",
        "@solmate/=lib/solmate/src/",
        "@tokensales/=src/TokenSales/",
        "@uniswap/=lib/",
        "@zks/=src/zks/",
        "base64-sol/=lib/base64/",
        "base64/=lib/base64/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/oz4.9.2/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "openzeppelin/=lib/oz4.9.2/contracts/",
        "oz4.8.1/=lib/oz4.8.1/",
        "oz4.9.2/=lib/oz4.9.2/",
        "solidity-lib/=lib/solidity-lib/contracts/",
        "v2-core/=lib/v2-core/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/masterchef-v3/contracts/receiver/MasterChefV3ReceiverV2.sol": "MasterChefV3ReceiverV2"
      },
      "libraries": {}
    },
    "sources": {
      "lib/oz4.8.1/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/oz4.8.1/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/oz4.8.1/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/oz4.8.1/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/oz4.8.1/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/oz4.8.1/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/masterchef-v3/contracts/interfaces/IMasterChefV3.sol": {
        "keccak256": "0x868cac7fb2a98ae223aa1dd1977d63505acab8bfb8b655860063c8dda468f600",
        "urls": [
          "bzz-raw://b570997da0f77b41d6ce0a086f71d5fd830046b1d9b4c7faae8da7d67bd42e32",
          "dweb:/ipfs/QmPANyJjnEkMQMTe8VuVz12zjzseFyZVWfY8VRJPmEQwFG"
        ],
        "license": "MIT"
      },
      "src/masterchef-v3/contracts/receiver/MasterChefV3ReceiverV2.sol": {
        "keccak256": "0xf8f4eb96883d1ee5a037be2498039d8ac828fa0b54aefddba86d1b10f367e192",
        "urls": [
          "bzz-raw://8a614a2b91c85a3855e209918a98754f27dc7ba03d4440e81f747096b09914e3",
          "dweb:/ipfs/QmTyAM3Nu2KvugrV74aBC8XYQhe4BhQMAbZmTGMxNcHqVG"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/masterchef-v3/contracts/receiver/MasterChefV3ReceiverV2.sol",
    "id": 48046,
    "exportedSymbols": {
      "Address": [
        43899
      ],
      "Context": [
        43921
      ],
      "IERC20": [
        43136
      ],
      "IERC20Permit": [
        43172
      ],
      "IMasterChefV3": [
        47289
      ],
      "MasterChefV3ReceiverV2": [
        48045
      ],
      "Ownable": [
        43004
      ],
      "SafeERC20": [
        43453
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2588:46",
    "nodes": [
      {
        "id": 47827,
        "nodeType": "PragmaDirective",
        "src": "32:24:46",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 47828,
        "nodeType": "ImportDirective",
        "src": "57:47:46",
        "nodes": [],
        "absolutePath": "lib/oz4.8.1/contracts/access/Ownable.sol",
        "file": "@oz4.8.1/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48046,
        "sourceUnit": 43005,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47829,
        "nodeType": "ImportDirective",
        "src": "105:51:46",
        "nodes": [],
        "absolutePath": "lib/oz4.8.1/contracts/token/ERC20/IERC20.sol",
        "file": "@oz4.8.1/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48046,
        "sourceUnit": 43137,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47830,
        "nodeType": "ImportDirective",
        "src": "157:60:46",
        "nodes": [],
        "absolutePath": "lib/oz4.8.1/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@oz4.8.1/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48046,
        "sourceUnit": 43454,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47831,
        "nodeType": "ImportDirective",
        "src": "219:41:46",
        "nodes": [],
        "absolutePath": "src/masterchef-v3/contracts/interfaces/IMasterChefV3.sol",
        "file": "../interfaces/IMasterChefV3.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48046,
        "sourceUnit": 47290,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 48045,
        "nodeType": "ContractDefinition",
        "src": "262:2357:46",
        "nodes": [
          {
            "id": 47837,
            "nodeType": "UsingForDirective",
            "src": "311:27:46",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 47834,
              "name": "SafeERC20",
              "nameLocations": [
                "317:9:46"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43453,
              "src": "317:9:46"
            },
            "typeName": {
              "id": 47836,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47835,
                "name": "IERC20",
                "nameLocations": [
                  "331:6:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 43136,
                "src": "331:6:46"
              },
              "referencedDeclaration": 43136,
              "src": "331:6:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$43136",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 47840,
            "nodeType": "VariableDeclaration",
            "src": "344:28:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "60911f2a",
            "mutability": "immutable",
            "name": "Cake",
            "nameLocation": "368:4:46",
            "scope": 48045,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$43136",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 47839,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47838,
                "name": "IERC20",
                "nameLocations": [
                  "344:6:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 43136,
                "src": "344:6:46"
              },
              "referencedDeclaration": 43136,
              "src": "344:6:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$43136",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47843,
            "nodeType": "VariableDeclaration",
            "src": "378:43:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "1ad8c1e4",
            "mutability": "immutable",
            "name": "MasterChefV3",
            "nameLocation": "409:12:46",
            "scope": 48045,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
              "typeString": "contract IMasterChefV3"
            },
            "typeName": {
              "id": 47842,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47841,
                "name": "IMasterChefV3",
                "nameLocations": [
                  "378:13:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47289,
                "src": "378:13:46"
              },
              "referencedDeclaration": 47289,
              "src": "378:13:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
                "typeString": "contract IMasterChefV3"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47845,
            "nodeType": "VariableDeclaration",
            "src": "428:30:46",
            "nodes": [],
            "constant": false,
            "functionSelector": "127effb2",
            "mutability": "mutable",
            "name": "operatorAddress",
            "nameLocation": "443:15:46",
            "scope": 48045,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47844,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "428:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47847,
            "nodeType": "ErrorDefinition",
            "src": "465:27:46",
            "nodes": [],
            "errorSelector": "98f76d0e",
            "name": "NotOwnerOrOperator",
            "nameLocation": "471:18:46",
            "parameters": {
              "id": 47846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "489:2:46"
            }
          },
          {
            "id": 47849,
            "nodeType": "ErrorDefinition",
            "src": "497:20:46",
            "nodes": [],
            "errorSelector": "d92e233d",
            "name": "ZeroAddress",
            "nameLocation": "503:11:46",
            "parameters": {
              "id": 47848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "514:2:46"
            }
          },
          {
            "id": 47851,
            "nodeType": "ErrorDefinition",
            "src": "522:18:46",
            "nodes": [],
            "errorSelector": "c2caa2a6",
            "name": "NoBalance",
            "nameLocation": "528:9:46",
            "parameters": {
              "id": 47850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "537:2:46"
            }
          },
          {
            "id": 47855,
            "nodeType": "EventDefinition",
            "src": "546:51:46",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "da12ee837e6978172aaf54b16145ffe08414fd8710092ef033c71b8eb6ec189a",
            "name": "NewOperator",
            "nameLocation": "552:11:46",
            "parameters": {
              "id": 47854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47853,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operatorAddress",
                  "nameLocation": "580:15:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 47855,
                  "src": "564:31:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "564:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "563:33:46"
            }
          },
          {
            "id": 47863,
            "nodeType": "EventDefinition",
            "src": "602:66:46",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "9bc0a7d1ea34f5c0b59023cff769f5d2cc8860bf24be25254ce420e658d48a7c",
            "name": "Upkeep",
            "nameLocation": "608:6:46",
            "parameters": {
              "id": 47862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47857,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "631:2:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 47863,
                  "src": "615:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47856,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "615:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47859,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "643:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 47863,
                  "src": "635:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "635:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47861,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withUpdate",
                  "nameLocation": "656:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 47863,
                  "src": "651:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 47860,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "651:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "614:53:46"
            }
          },
          {
            "id": 47871,
            "nodeType": "EventDefinition",
            "src": "673:74:46",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb",
            "name": "Withdraw",
            "nameLocation": "679:8:46",
            "parameters": {
              "id": 47870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47865,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "704:5:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 47871,
                  "src": "688:21:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47867,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "727:2:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 47871,
                  "src": "711:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47869,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "739:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 47871,
                  "src": "731:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "731:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "687:59:46"
            }
          },
          {
            "id": 47889,
            "nodeType": "ModifierDefinition",
            "src": "753:146:46",
            "nodes": [],
            "body": {
              "id": 47888,
              "nodeType": "Block",
              "src": "784:115:46",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 47882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 47876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 47873,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "798:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "802:6:46",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "798:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 47875,
                        "name": "operatorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47845,
                        "src": "812:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "798:29:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 47881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 47877,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "831:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "835:6:46",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "831:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 47879,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42932,
                          "src": "845:5:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 47880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "845:7:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "831:21:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "798:54:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47886,
                  "nodeType": "IfStatement",
                  "src": "794:87:46",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47883,
                        "name": "NotOwnerOrOperator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47847,
                        "src": "861:18:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "861:20:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47885,
                    "nodeType": "RevertStatement",
                    "src": "854:27:46"
                  }
                },
                {
                  "id": 47887,
                  "nodeType": "PlaceholderStatement",
                  "src": "891:1:46"
                }
              ]
            },
            "name": "onlyOwnerOrOperator",
            "nameLocation": "762:19:46",
            "parameters": {
              "id": 47872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "781:2:46"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 47922,
            "nodeType": "FunctionDefinition",
            "src": "1017:162:46",
            "nodes": [],
            "body": {
              "id": 47921,
              "nodeType": "Block",
              "src": "1062:117:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 47901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47899,
                      "name": "MasterChefV3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47843,
                      "src": "1072:12:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
                        "typeString": "contract IMasterChefV3"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47900,
                      "name": "_v3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47893,
                      "src": "1087:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
                        "typeString": "contract IMasterChefV3"
                      }
                    },
                    "src": "1072:18:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
                      "typeString": "contract IMasterChefV3"
                    }
                  },
                  "id": 47902,
                  "nodeType": "ExpressionStatement",
                  "src": "1072:18:46"
                },
                {
                  "expression": {
                    "id": 47905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47903,
                      "name": "Cake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47840,
                      "src": "1100:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$43136",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47904,
                      "name": "_cake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47896,
                      "src": "1107:5:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$43136",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1100:12:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$43136",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 47906,
                  "nodeType": "ExpressionStatement",
                  "src": "1100:12:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47912,
                            "name": "_v3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47893,
                            "src": "1148:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
                              "typeString": "contract IMasterChefV3"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
                              "typeString": "contract IMasterChefV3"
                            }
                          ],
                          "id": 47911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1140:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47910,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1140:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1140:12:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 47916,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1159:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 47915,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1159:7:46",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 47914,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1154:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 47917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1154:13:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 47918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1168:3:46",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1154:17:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 47907,
                        "name": "Cake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47840,
                        "src": "1123:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$43136",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 47909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1128:11:46",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43274,
                      "src": "1123:16:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$43136_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$43136_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 47919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1123:49:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47920,
                  "nodeType": "ExpressionStatement",
                  "src": "1123:49:46"
                }
              ]
            },
            "documentation": {
              "id": 47890,
              "nodeType": "StructuredDocumentation",
              "src": "905:107:46",
              "text": "@notice Constructor.\n @param _v3 MasterChef V3 address.\n @param _cake Cake token address."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 47897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47893,
                  "mutability": "mutable",
                  "name": "_v3",
                  "nameLocation": "1043:3:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 47922,
                  "src": "1029:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
                    "typeString": "contract IMasterChefV3"
                  },
                  "typeName": {
                    "id": 47892,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47891,
                      "name": "IMasterChefV3",
                      "nameLocations": [
                        "1029:13:46"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47289,
                      "src": "1029:13:46"
                    },
                    "referencedDeclaration": 47289,
                    "src": "1029:13:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
                      "typeString": "contract IMasterChefV3"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47896,
                  "mutability": "mutable",
                  "name": "_cake",
                  "nameLocation": "1055:5:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 47922,
                  "src": "1048:12:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$43136",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 47895,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47894,
                      "name": "IERC20",
                      "nameLocations": [
                        "1048:6:46"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43136,
                      "src": "1048:6:46"
                    },
                    "referencedDeclaration": 43136,
                    "src": "1048:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$43136",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1028:33:46"
            },
            "returnParameters": {
              "id": 47898,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1062:0:46"
            },
            "scope": 48045,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 47979,
            "nodeType": "FunctionDefinition",
            "src": "1458:412:46",
            "nodes": [],
            "body": {
              "id": 47978,
              "nodeType": "Block",
              "src": "1557:313:46",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    47935
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 47935,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1575:6:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 47978,
                      "src": "1567:14:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 47934,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1567:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 47937,
                  "initialValue": {
                    "id": 47936,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47925,
                    "src": "1584:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1567:24:46"
                },
                {
                  "assignments": [
                    47939
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 47939,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "1609:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 47978,
                      "src": "1601:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 47938,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1601:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 47947,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47944,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1642:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterChefV3ReceiverV2_$48045",
                              "typeString": "contract MasterChefV3ReceiverV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterChefV3ReceiverV2_$48045",
                              "typeString": "contract MasterChefV3ReceiverV2"
                            }
                          ],
                          "id": 47943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1634:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47942,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1634:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1634:13:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 47940,
                        "name": "Cake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47840,
                        "src": "1619:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$43136",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 47941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1624:9:46",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43093,
                      "src": "1619:14:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 47946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1619:29:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1601:47:46"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 47954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 47950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 47948,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47925,
                        "src": "1662:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 47949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1673:1:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1662:12:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 47953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 47951,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47925,
                        "src": "1678:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 47952,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47939,
                        "src": "1688:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1678:17:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1662:33:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47960,
                  "nodeType": "IfStatement",
                  "src": "1658:80:46",
                  "trueBody": {
                    "id": 47959,
                    "nodeType": "Block",
                    "src": "1697:41:46",
                    "statements": [
                      {
                        "expression": {
                          "id": 47957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 47955,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47935,
                            "src": "1711:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 47956,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47939,
                            "src": "1720:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1711:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 47958,
                        "nodeType": "ExpressionStatement",
                        "src": "1711:16:46"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47964,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47935,
                        "src": "1767:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 47965,
                        "name": "_duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47927,
                        "src": "1775:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 47966,
                        "name": "_withUpdate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47929,
                        "src": "1786:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 47961,
                        "name": "MasterChefV3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47843,
                        "src": "1747:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
                          "typeString": "contract IMasterChefV3"
                        }
                      },
                      "id": 47963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1760:6:46",
                      "memberName": "upkeep",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47288,
                      "src": "1747:19:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,uint256,bool) external"
                      }
                    },
                    "id": 47967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1747:51:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47968,
                  "nodeType": "ExpressionStatement",
                  "src": "1747:51:46"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47972,
                            "name": "MasterChefV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47843,
                            "src": "1828:12:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
                              "typeString": "contract IMasterChefV3"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
                              "typeString": "contract IMasterChefV3"
                            }
                          ],
                          "id": 47971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1820:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47970,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1820:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1820:21:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47974,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47935,
                        "src": "1843:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 47975,
                        "name": "_withUpdate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47929,
                        "src": "1851:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 47969,
                      "name": "Upkeep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47863,
                      "src": "1813:6:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,bool)"
                      }
                    },
                    "id": 47976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1813:50:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47977,
                  "nodeType": "EmitStatement",
                  "src": "1808:55:46"
                }
              ]
            },
            "documentation": {
              "id": 47923,
              "nodeType": "StructuredDocumentation",
              "src": "1185:268:46",
              "text": "@notice upkeep.\n @dev Callable by owner or operator.\n @param _amount Injection amount, the injection amount can be flexibly controlled.\n @param _duration The period duration.\n @param _withUpdate Whether call \"massUpdatePools\" operation."
            },
            "functionSelector": "0ce5d4cc",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 47932,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47931,
                  "name": "onlyOwnerOrOperator",
                  "nameLocations": [
                    "1537:19:46"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47889,
                  "src": "1537:19:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "1537:19:46"
              }
            ],
            "name": "upkeep",
            "nameLocation": "1467:6:46",
            "parameters": {
              "id": 47930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47925,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1482:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 47979,
                  "src": "1474:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47927,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nameLocation": "1499:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 47979,
                  "src": "1491:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1491:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47929,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nameLocation": "1515:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 47979,
                  "src": "1510:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 47928,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1510:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1473:54:46"
            },
            "returnParameters": {
              "id": 47933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1557:0:46"
            },
            "scope": 48045,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48006,
            "nodeType": "FunctionDefinition",
            "src": "2000:227:46",
            "nodes": [],
            "body": {
              "id": 48005,
              "nodeType": "Block",
              "src": "2066:161:46",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 47992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47987,
                      "name": "_operatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47982,
                      "src": "2080:16:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 47990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2108:1:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 47989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2100:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 47988,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2100:7:46",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 47991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2100:10:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2080:30:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47996,
                  "nodeType": "IfStatement",
                  "src": "2076:56:46",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47993,
                        "name": "ZeroAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47849,
                        "src": "2119:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2119:13:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47995,
                    "nodeType": "RevertStatement",
                    "src": "2112:20:46"
                  }
                },
                {
                  "expression": {
                    "id": 47999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47997,
                      "name": "operatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47845,
                      "src": "2142:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47998,
                      "name": "_operatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47982,
                      "src": "2160:16:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2142:34:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 48000,
                  "nodeType": "ExpressionStatement",
                  "src": "2142:34:46"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 48002,
                        "name": "_operatorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47982,
                        "src": "2203:16:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48001,
                      "name": "NewOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47855,
                      "src": "2191:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 48003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2191:29:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48004,
                  "nodeType": "EmitStatement",
                  "src": "2186:34:46"
                }
              ]
            },
            "documentation": {
              "id": 47980,
              "nodeType": "StructuredDocumentation",
              "src": "1876:119:46",
              "text": "@notice Set operator address.\n @dev Callable by owner.\n @param _operatorAddress New operator address."
            },
            "functionSelector": "b3ab15fb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 47985,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47984,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2056:9:46"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42923,
                  "src": "2056:9:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "2056:9:46"
              }
            ],
            "name": "setOperator",
            "nameLocation": "2009:11:46",
            "parameters": {
              "id": 47983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47982,
                  "mutability": "mutable",
                  "name": "_operatorAddress",
                  "nameLocation": "2029:16:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 48006,
                  "src": "2021:24:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47981,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2021:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2020:26:46"
            },
            "returnParameters": {
              "id": 47986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2066:0:46"
            },
            "scope": 48045,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48044,
            "nodeType": "FunctionDefinition",
            "src": "2391:226:46",
            "nodes": [],
            "body": {
              "id": 48043,
              "nodeType": "Block",
              "src": "2443:174:46",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48016
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48016,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "2461:6:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 48043,
                      "src": "2453:14:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48015,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2453:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48024,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48021,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2495:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterChefV3ReceiverV2_$48045",
                              "typeString": "contract MasterChefV3ReceiverV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterChefV3ReceiverV2_$48045",
                              "typeString": "contract MasterChefV3ReceiverV2"
                            }
                          ],
                          "id": 48020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2487:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48019,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2487:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2487:13:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48017,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48010,
                        "src": "2470:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$43136",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 48018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2477:9:46",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43093,
                      "src": "2470:16:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 48023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2470:31:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2453:48:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48028,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2531:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 48029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2535:6:46",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2531:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48030,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48016,
                        "src": "2543:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 48025,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48010,
                        "src": "2511:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$43136",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 48027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2518:12:46",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43204,
                      "src": "2511:19:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$43136_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$43136_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 48031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2511:39:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48032,
                  "nodeType": "ExpressionStatement",
                  "src": "2511:39:46"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48036,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48010,
                            "src": "2582:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$43136",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$43136",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 48035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2574:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48034,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2574:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2574:15:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 48038,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2591:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 48039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2595:6:46",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2591:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48040,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48016,
                        "src": "2603:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48033,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47871,
                      "src": "2565:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 48041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2565:45:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48042,
                  "nodeType": "EmitStatement",
                  "src": "2560:50:46"
                }
              ]
            },
            "documentation": {
              "id": 48007,
              "nodeType": "StructuredDocumentation",
              "src": "2233:153:46",
              "text": "@notice Withdraw unexpected tokens sent to the receiver, can also withdraw cake.\n @dev Callable by owner.\n @param _token Token address."
            },
            "functionSelector": "51cff8d9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 48013,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 48012,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2433:9:46"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42923,
                  "src": "2433:9:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "2433:9:46"
              }
            ],
            "name": "withdraw",
            "nameLocation": "2400:8:46",
            "parameters": {
              "id": 48011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48010,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2416:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 48044,
                  "src": "2409:13:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$43136",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 48009,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48008,
                      "name": "IERC20",
                      "nameLocations": [
                        "2409:6:46"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43136,
                      "src": "2409:6:46"
                    },
                    "referencedDeclaration": 43136,
                    "src": "2409:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$43136",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2408:15:46"
            },
            "returnParameters": {
              "id": 48014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2443:0:46"
            },
            "scope": 48045,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 47832,
              "name": "Ownable",
              "nameLocations": [
                "297:7:46"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43004,
              "src": "297:7:46"
            },
            "id": 47833,
            "nodeType": "InheritanceSpecifier",
            "src": "297:7:46"
          }
        ],
        "canonicalName": "MasterChefV3ReceiverV2",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          48045,
          43004,
          43921
        ],
        "name": "MasterChefV3ReceiverV2",
        "nameLocation": "271:22:46",
        "scope": 48046,
        "usedErrors": [
          47847,
          47849,
          47851
        ],
        "usedEvents": [
          42905,
          47855,
          47863,
          47871
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 46
}