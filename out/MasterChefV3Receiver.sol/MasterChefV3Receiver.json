{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IMasterChefV2",
          "name": "_v2",
          "type": "address"
        },
        {
          "internalType": "contract IMasterChefV3",
          "name": "_v3",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_cake",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_v2Pid",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NoBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwnerOrOperator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddress",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operatorAddress",
          "type": "address"
        }
      ],
      "name": "NewOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "withUpdate",
          "type": "bool"
        }
      ],
      "name": "Upkeep",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "Cake",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MasterChefV2",
      "outputs": [
        {
          "internalType": "contract IMasterChefV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MasterChefV3",
      "outputs": [
        {
          "internalType": "contract IMasterChefV3",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "V2_Pid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_dummyToken",
          "type": "address"
        }
      ],
      "name": "depositForMasterChefV2Pool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operatorAddress",
          "type": "address"
        }
      ],
      "name": "setOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_withUpdate",
          "type": "bool"
        }
      ],
      "name": "upkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "304:3592:45:-:0;;;1340:250;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:19;719:10:26;936:18:19;:32::i;:::-;-1:-1:-1;;;;;1430:18:45;;;;;1458;;;;;1486:12;;;;;;1508:15;;;;1534:49;;1473:3;-1:-1:-1;;1534:16:45;:49::i;:::-;1340:250;;;;304:3592;;2433:187:19;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:19;;;-1:-1:-1;;;;;;2541:17:19;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1475:603:23:-;1830:10;;;1829:62;;-1:-1:-1;1846:39:23;;-1:-1:-1;;;1846:39:23;;1870:4;1846:39;;;1070:34:105;-1:-1:-1;;;;;1140:15:105;;;1120:18;;;1113:43;1846:15:23;;;;;1005:18:105;;1846:39:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1829:62;1808:163;;;;-1:-1:-1;;;1808:163:23;;1558:2:105;1808:163:23;;;1540:21:105;1597:2;1577:18;;;1570:30;1636:34;1616:18;;;1609:62;1707:24;1687:18;;;1680:52;1749:19;;1808:163:23;;;;;;;;;2008:62;;;-1:-1:-1;;;;;1971:32:105;;2008:62:23;;;1953:51:105;2020:18;;;;2013:34;;;2008:62:23;;;;;;;;;;1926:18:105;;;;2008:62:23;;;;;;;;-1:-1:-1;;;;;2008:62:23;;;-1:-1:-1;;;2008:62:23;;;;1981:90;;2001:5;;1981:19;:90;:::i;:::-;1475:603;;;:::o;3747:706::-;4192:69;;;;;;;;;;;;;;;;;;4166:23;;4192:69;;-1:-1:-1;;;;;4192:27:23;;;4220:4;;4192:27;:69::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:23;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:23;;2542:2:105;4351:85:23;;;2524:21:105;2581:2;2561:18;;;2554:30;2620:34;2600:18;;;2593:62;-1:-1:-1;;;2671:18:105;;;2664:40;2721:19;;4351:85:23;2340:406:105;3873:223:25;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:25:o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:25;;2953:2:105;5149:81:25;;;2935:21:105;2992:2;2972:18;;;2965:30;3031:34;3011:18;;;3004:62;-1:-1:-1;;;3082:18:105;;;3075:36;3128:19;;5149:81:25;2751:402:105;5149:81:25;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:25;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5240:73:25;;-1:-1:-1;5240:73:25;-1:-1:-1;5330:69:25;5357:6;5240:73;;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:25:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:25;;;7908:60;;;;-1:-1:-1;;;7908:60:25;;3907:2:105;7908:60:25;;;3889:21:105;3946:2;3926:18;;;3919:30;3985:31;3965:18;;;3958:59;4034:18;;7908:60:25;3705:353:105;7908:60:25;-1:-1:-1;8003:10:25;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:25;;;;;;;;:::i;14:146:105:-;-1:-1:-1;;;;;104:31:105;;94:42;;84:70;;150:1;147;140:12;84:70;14:146;:::o;165:688::-;324:6;332;340;348;401:3;389:9;380:7;376:23;372:33;369:53;;;418:1;415;408:12;369:53;450:9;444:16;469:46;509:5;469:46;:::i;:::-;584:2;569:18;;563:25;534:5;;-1:-1:-1;597:48:105;563:25;597:48;:::i;:::-;716:2;701:18;;695:25;664:7;;-1:-1:-1;729:48:105;695:25;729:48;:::i;:::-;843:2;828:18;;;;822:25;165:688;;;;-1:-1:-1;;;165:688:105:o;1167:184::-;1237:6;1290:2;1278:9;1269:7;1265:23;1261:32;1258:52;;;1306:1;1303;1296:12;1258:52;-1:-1:-1;1329:16:105;;1167:184;-1:-1:-1;1167:184:105:o;2058:277::-;2125:6;2178:2;2166:9;2157:7;2153:23;2149:32;2146:52;;;2194:1;2191;2184:12;2146:52;2226:9;2220:16;2279:5;2272:13;2265:21;2258:5;2255:32;2245:60;;2301:1;2298;2291:12;2245:60;2324:5;2058:277;-1:-1:-1;;;2058:277:105:o;3158:250::-;3243:1;3253:113;3267:6;3264:1;3261:13;3253:113;;;3343:11;;;3337:18;3324:11;;;3317:39;3289:2;3282:10;3253:113;;;-1:-1:-1;;3400:1:105;3382:16;;3375:27;3158:250::o;3413:287::-;3542:3;3580:6;3574:13;3596:66;3655:6;3650:3;3643:4;3635:6;3631:17;3596:66;:::i;:::-;3678:16;;;;;3413:287;-1:-1:-1;;3413:287:105:o;4063:396::-;4212:2;4201:9;4194:21;4175:4;4244:6;4238:13;4287:6;4282:2;4271:9;4267:18;4260:34;4303:79;4375:6;4370:2;4359:9;4355:18;4350:2;4342:6;4338:15;4303:79;:::i;:::-;4443:2;4422:15;-1:-1:-1;;4418:29:105;4403:45;;;;4450:2;4399:54;;4063:396;-1:-1:-1;;4063:396:105:o;:::-;304:3592:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063715018a611610071578063715018a6146101945780638da5cb5b1461019c5780639d9e97d9146101ad578063b3ab15fb146101c0578063e5653aa1146101d3578063f2fde38b146101fa57600080fd5b80630ce5d4cc146100b9578063127effb2146100ce5780631ad8c1e4146100fe5780634d88ad791461012557806351cff8d91461015a57806360911f2a1461016d575b600080fd5b6100cc6100c7366004610c88565b61020d565b005b6001546100e1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e17f000000000000000000000000000000000000000000000000000000000000000081565b61014c7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100f5565b6100cc610168366004610cd6565b6103f2565b6100e17f000000000000000000000000000000000000000000000000000000000000000081565b6100cc6104c0565b6000546001600160a01b03166100e1565b6100cc6101bb366004610cd6565b6104d4565b6100cc6101ce366004610cd6565b610735565b6100e17f000000000000000000000000000000000000000000000000000000000000000081565b6100cc610208366004610cd6565b6107ae565b6001546001600160a01b0316331480159061023357506000546001600160a01b03163314155b1561025157604051634c7bb68760e11b815260040160405180910390fd5b61025961082c565b6040516370a0823160e01b815230600482015283906000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156102c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e69190610cfa565b90508415806102f457508085115b156102fd578091505b604051630339753360e21b8152600481018390526024810185905283151560448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630ce5d4cc90606401600060405180830381600087803b15801561036e57600080fd5b505af1158015610382573d6000803e3d6000fd5b50506040805185815286151560208201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001693507f9bc0a7d1ea34f5c0b59023cff769f5d2cc8860bf24be25254ce420e658d48a7c92500160405180910390a25050505050565b6103fa6108ce565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610441573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104659190610cfa565b905061047b6001600160a01b0383163383610928565b60405181815233906001600160a01b038416907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb906020015b60405180910390a35050565b6104c86108ce565b6104d26000610990565b565b6104dc6108ce565b6040516370a0823160e01b81523360048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610523573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105479190610cfa565b90508060000361056a57604051636165515360e11b815260040160405180910390fd5b61057f6001600160a01b0383163330846109e0565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820183905283169063095ea7b3906044016020604051808303816000875af11580156105ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106129190610d13565b50604051631c57762b60e31b81527f00000000000000000000000000000000000000000000000000000000000000006004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e2bbb15890604401600060405180830381600087803b15801561069b57600080fd5b505af11580156106af573d6000803e3d6000fd5b5050604080518481527f000000000000000000000000000000000000000000000000000000000000000060208201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001693503392507fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d791016104b4565b61073d6108ce565b6001600160a01b0381166107645760405163d92e233d60e01b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040517fda12ee837e6978172aaf54b16145ffe08414fd8710092ef033c71b8eb6ec189a90600090a250565b6107b66108ce565b6001600160a01b0381166108205760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61082981610990565b50565b604051630441a3e760e41b81527f00000000000000000000000000000000000000000000000000000000000000006004820152600060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063441a3e7090604401600060405180830381600087803b1580156108b457600080fd5b505af11580156108c8573d6000803e3d6000fd5b50505050565b6000546001600160a01b031633146104d25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610817565b6040516001600160a01b03831660248201526044810182905261098b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610a18565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526108c89085906323b872dd60e01b90608401610954565b6000610a6d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610aea9092919063ffffffff16565b80519091501561098b5780806020019051810190610a8b9190610d13565b61098b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610817565b6060610af98484600085610b01565b949350505050565b606082471015610b625760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610817565b600080866001600160a01b03168587604051610b7e9190610d54565b60006040518083038185875af1925050503d8060008114610bbb576040519150601f19603f3d011682016040523d82523d6000602084013e610bc0565b606091505b5091509150610bd187838387610bdc565b979650505050505050565b60608315610c4b578251600003610c44576001600160a01b0385163b610c445760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610817565b5081610af9565b610af98383815115610c605781518083602001fd5b8060405162461bcd60e51b81526004016108179190610d70565b801515811461082957600080fd5b600080600060608486031215610c9d57600080fd5b83359250602084013591506040840135610cb681610c7a565b809150509250925092565b6001600160a01b038116811461082957600080fd5b600060208284031215610ce857600080fd5b8135610cf381610cc1565b9392505050565b600060208284031215610d0c57600080fd5b5051919050565b600060208284031215610d2557600080fd5b8151610cf381610c7a565b60005b83811015610d4b578181015183820152602001610d33565b50506000910152565b60008251610d66818460208701610d30565b9190910192915050565b6020815260008251806020840152610d8f816040850160208701610d30565b601f01601f1916919091016040019291505056fea26469706673582212202d44607a622412ab56759ab94516c3f9be1f885c036767ceac18e2e02553d85d64736f6c63430008150033",
    "sourceMap": "304:3592:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2710:437;;;;;;:::i;:::-;;:::i;:::-;;554:30;;;;;-1:-1:-1;;;;;554:30:45;;;;;;-1:-1:-1;;;;;683:32:105;;;665:51;;653:2;638:18;554:30:45;;;;;;;;504:43;;;;;467:31;;;;;;;;1104:25:105;;;1092:2;1077:18;467:31:45;958:177:105;3668:226:45;;;;;;:::i;:::-;;:::i;384:28::-;;;;;1831:101:19;;;:::i;1201:85::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:19;1201:85;;1833:445:45;;;;;;:::i;:::-;;:::i;3277:227::-;;;;;;:::i;:::-;;:::i;418:43::-;;;;;2081:198:19;;;;;;:::i;:::-;;:::i;2710:437:45:-;1028:15;;-1:-1:-1;;;;;1028:15:45;1014:10;:29;;;;:54;;-1:-1:-1;1247:7:19;1273:6;-1:-1:-1;;;;;1273:6:19;1047:10:45;:21;;1014:54;1010:87;;;1077:20;;-1:-1:-1;;;1077:20:45;;;;;;;;;;;1010:87;2819:15:::1;:13;:15::i;:::-;2896:29;::::0;-1:-1:-1;;;2896:29:45;;2919:4:::1;2896:29;::::0;::::1;665:51:105::0;2861:7:45;;2844:14:::1;::::0;2896:4:::1;-1:-1:-1::0;;;;;2896:14:45::1;::::0;::::1;::::0;638:18:105;;2896:29:45::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2878:47:::0;-1:-1:-1;2939:12:45;;;:33:::1;;;2965:7;2955;:17;2939:33;2935:80;;;2997:7;2988:16;;2935:80;3024:51;::::0;-1:-1:-1;;;3024:51:45;;::::1;::::0;::::1;2660:25:105::0;;;2701:18;;;2694:34;;;2771:14;;2764:22;2744:18;;;2737:50;3024:12:45::1;-1:-1:-1::0;;;;;3024:19:45::1;::::0;::::1;::::0;2633:18:105;;3024:51:45::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3090:50:45::1;::::0;;2966:25:105;;;3034:14;;3027:22;3022:2;3007:18;;3000:50;-1:-1:-1;;;;;3105:12:45::1;3090:50;::::0;-1:-1:-1;3090:50:45::1;::::0;-1:-1:-1;2939:18:105;3090:50:45::1;;;;;;;2809:338;;2710:437:::0;;;:::o;3668:226::-;1094:13:19;:11;:13::i;:::-;3747:31:45::1;::::0;-1:-1:-1;;;3747:31:45;;3772:4:::1;3747:31;::::0;::::1;665:51:105::0;3730:14:45::1;::::0;-1:-1:-1;;;;;3747:16:45;::::1;::::0;::::1;::::0;638:18:105;;3747:31:45::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3730:48:::0;-1:-1:-1;3788:39:45::1;-1:-1:-1::0;;;;;3788:19:45;::::1;3808:10;3730:48:::0;3788:19:::1;:39::i;:::-;3842:45;::::0;1104:25:105;;;3868:10:45::1;::::0;-1:-1:-1;;;;;3842:45:45;::::1;::::0;::::1;::::0;1092:2:105;1077:18;3842:45:45::1;;;;;;;;3720:174;3668:226:::0;:::o;1831:101:19:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1833:445:45:-;1094:13:19;:11;:13::i;:::-;1936:33:45::1;::::0;-1:-1:-1;;;1936:33:45;;1958:10:::1;1936:33;::::0;::::1;665:51:105::0;1918:15:45::1;::::0;-1:-1:-1;;;;;1936:21:45;::::1;::::0;::::1;::::0;638:18:105;;1936:33:45::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1918:51;;1983:7;1994:1;1983:12:::0;1979:36:::1;;2004:11;;-1:-1:-1::0;;;2004:11:45::1;;;;;;;;;;;1979:36;2025:64;-1:-1:-1::0;;;;;2025:28:45;::::1;2054:10;2074:4;2081:7:::0;2025:28:::1;:64::i;:::-;2099:51;::::0;-1:-1:-1;;;2099:51:45;;-1:-1:-1;;;;;2127:12:45::1;3253:32:105::0;;2099:51:45::1;::::0;::::1;3235::105::0;3302:18;;;3295:34;;;2099:19:45;::::1;::::0;::::1;::::0;3208:18:105;;2099:51:45::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;2160:37:45::1;::::0;-1:-1:-1;;;2160:37:45;;2181:6:::1;2160:37;::::0;::::1;3764:25:105::0;3805:18;;;3798:34;;;2160:12:45::1;-1:-1:-1::0;;;;;2160:20:45::1;::::0;::::1;::::0;3737:18:105;;2160:37:45::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2212:59:45::1;::::0;;3764:25:105;;;2264:6:45::1;3820:2:105::0;3805:18;;3798:34;-1:-1:-1;;;;;2240:12:45::1;2212:59;::::0;-1:-1:-1;2220:10:45::1;::::0;-1:-1:-1;2212:59:45::1;::::0;3737:18:105;2212:59:45::1;3590:248:105::0;3277:227:45;1094:13:19;:11;:13::i;:::-;-1:-1:-1;;;;;3357:30:45;::::1;3353:56;;3396:13;;-1:-1:-1::0;;;3396:13:45::1;;;;;;;;;;;3353:56;3419:15;:34:::0;;-1:-1:-1;;;;;;3419:34:45::1;-1:-1:-1::0;;;;;3419:34:45;::::1;::::0;;::::1;::::0;;;3468:29:::1;::::0;::::1;::::0;-1:-1:-1;;3468:29:45::1;3277:227:::0;:::o;2081:198:19:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:19;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:19;;4045:2:105;2161:73:19::1;::::0;::::1;4027:21:105::0;4084:2;4064:18;;;4057:30;4123:34;4103:18;;;4096:62;-1:-1:-1;;;4174:18:105;;;4167:36;4220:19;;2161:73:19::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;2348:83:45:-;2392:32;;-1:-1:-1;;;2392:32:45;;2414:6;2392:32;;;3764:25:105;2422:1:45;3805:18:105;;;3798:34;2392:12:45;-1:-1:-1;;;;;2392:21:45;;;;3737:18:105;;2392:32:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2348:83::o;1359:130:19:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:19;719:10:26;1422:23:19;1414:68;;;;-1:-1:-1;;;1414:68:19;;4713:2:105;1414:68:19;;;4695:21:105;;;4732:18;;;4725:30;4791:34;4771:18;;;4764:62;4843:18;;1414:68:19;4511:356:105;763:205:23;902:58;;-1:-1:-1;;;;;3253:32:105;;902:58:23;;;3235:51:105;3302:18;;;3295:34;;;875:86:23;;895:5;;-1:-1:-1;;;925:23:23;3208:18:105;;902:58:23;;;;-1:-1:-1;;902:58:23;;;;;;;;;;;;;;-1:-1:-1;;;;;902:58:23;-1:-1:-1;;;;;;902:58:23;;;;;;;;;;875:19;:86::i;:::-;763:205;;;:::o;2433:187:19:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:19;;;-1:-1:-1;;;;;;2541:17:19;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;974:241:23:-;1139:68;;-1:-1:-1;;;;;5130:15:105;;;1139:68:23;;;5112:34:105;5182:15;;5162:18;;;5155:43;5214:18;;;5207:34;;;1112:96:23;;1132:5;;-1:-1:-1;;;1162:27:23;5047:18:105;;1139:68:23;4872:375:105;3747:706:23;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:23;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:23;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:23;;5454:2:105;4351:85:23;;;5436:21:105;5493:2;5473:18;;;5466:30;5532:34;5512:18;;;5505:62;-1:-1:-1;;;5583:18:105;;;5576:40;5633:19;;4351:85:23;5252:406:105;3873:223:25;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:25:o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:25;;5865:2:105;5149:81:25;;;5847:21:105;5904:2;5884:18;;;5877:30;5943:34;5923:18;;;5916:62;-1:-1:-1;;;5994:18:105;;;5987:36;6040:19;;5149:81:25;5663:402:105;5149:81:25;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:25;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:25:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:25;;;7908:60;;;;-1:-1:-1;;;7908:60:25;;6819:2:105;7908:60:25;;;6801:21:105;6858:2;6838:18;;;6831:30;6897:31;6877:18;;;6870:59;6946:18;;7908:60:25;6617:353:105;7908:60:25;-1:-1:-1;8003:10:25;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:25;;;;;;;;:::i;14:118:105:-;100:5;93:13;86:21;79:5;76:32;66:60;;122:1;119;112:12;137:377;211:6;219;227;280:2;268:9;259:7;255:23;251:32;248:52;;;296:1;293;286:12;248:52;332:9;319:23;309:33;;389:2;378:9;374:18;361:32;351:42;;443:2;432:9;428:18;415:32;456:28;478:5;456:28;:::i;:::-;503:5;493:15;;;137:377;;;;;:::o;1140:139::-;-1:-1:-1;;;;;1223:31:105;;1213:42;;1203:70;;1269:1;1266;1259:12;1284:271;1359:6;1412:2;1400:9;1391:7;1387:23;1383:32;1380:52;;;1428:1;1425;1418:12;1380:52;1467:9;1454:23;1486:39;1519:5;1486:39;:::i;:::-;1544:5;1284:271;-1:-1:-1;;;1284:271:105:o;2275:184::-;2345:6;2398:2;2386:9;2377:7;2373:23;2369:32;2366:52;;;2414:1;2411;2404:12;2366:52;-1:-1:-1;2437:16:105;;2275:184;-1:-1:-1;2275:184:105:o;3340:245::-;3407:6;3460:2;3448:9;3439:7;3435:23;3431:32;3428:52;;;3476:1;3473;3466:12;3428:52;3508:9;3502:16;3527:28;3549:5;3527:28;:::i;6070:250::-;6155:1;6165:113;6179:6;6176:1;6173:13;6165:113;;;6255:11;;;6249:18;6236:11;;;6229:39;6201:2;6194:10;6165:113;;;-1:-1:-1;;6312:1:105;6294:16;;6287:27;6070:250::o;6325:287::-;6454:3;6492:6;6486:13;6508:66;6567:6;6562:3;6555:4;6547:6;6543:17;6508:66;:::i;:::-;6590:16;;;;;6325:287;-1:-1:-1;;6325:287:105:o;6975:396::-;7124:2;7113:9;7106:21;7087:4;7156:6;7150:13;7199:6;7194:2;7183:9;7179:18;7172:34;7215:79;7287:6;7282:2;7271:9;7267:18;7262:2;7254:6;7250:15;7215:79;:::i;:::-;7355:2;7334:15;-1:-1:-1;;7330:29:105;7315:45;;;;7362:2;7311:54;;6975:396;-1:-1:-1;;6975:396:105:o",
    "linkReferences": {},
    "immutableReferences": {
      "47512": [
        {
          "start": 370,
          "length": 32
        },
        {
          "start": 627,
          "length": 32
        }
      ],
      "47515": [
        {
          "start": 472,
          "length": 32
        },
        {
          "start": 1430,
          "length": 32
        },
        {
          "start": 1615,
          "length": 32
        },
        {
          "start": 1768,
          "length": 32
        },
        {
          "start": 2152,
          "length": 32
        }
      ],
      "47517": [
        {
          "start": 298,
          "length": 32
        },
        {
          "start": 1570,
          "length": 32
        },
        {
          "start": 1722,
          "length": 32
        },
        {
          "start": 2107,
          "length": 32
        }
      ],
      "47520": [
        {
          "start": 259,
          "length": 32
        },
        {
          "start": 802,
          "length": 32
        },
        {
          "start": 925,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "Cake()": "60911f2a",
    "MasterChefV2()": "e5653aa1",
    "MasterChefV3()": "1ad8c1e4",
    "V2_Pid()": "4d88ad79",
    "depositForMasterChefV2Pool(address)": "9d9e97d9",
    "operatorAddress()": "127effb2",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setOperator(address)": "b3ab15fb",
    "transferOwnership(address)": "f2fde38b",
    "upkeep(uint256,uint256,bool)": "0ce5d4cc",
    "withdraw(address)": "51cff8d9"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IMasterChefV2\",\"name\":\"_v2\",\"type\":\"address\"},{\"internalType\":\"contract IMasterChefV3\",\"name\":\"_v3\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_v2Pid\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NoBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwnerOrOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operatorAddress\",\"type\":\"address\"}],\"name\":\"NewOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"withUpdate\",\"type\":\"bool\"}],\"name\":\"Upkeep\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Cake\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MasterChefV2\",\"outputs\":[{\"internalType\":\"contract IMasterChefV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MasterChefV3\",\"outputs\":[{\"internalType\":\"contract IMasterChefV3\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"V2_Pid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_dummyToken\",\"type\":\"address\"}],\"name\":\"depositForMasterChefV2Pool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operatorAddress\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"upkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_cake\":\"Cake token address.\",\"_v2\":\"MasterChef V2 address.\",\"_v2Pid\":\"The pool id of the dummy pool on the MCV2.\",\"_v3\":\"MasterChef V3 address.\"}},\"depositForMasterChefV2Pool(address)\":{\"details\":\"Callable by owner.\",\"params\":{\"_dummyToken\":\"The address of the token to be deposited into MCV2.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setOperator(address)\":{\"details\":\"Callable by owner.\",\"params\":{\"_operatorAddress\":\"New operator address.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upkeep(uint256,uint256,bool)\":{\"details\":\"Callable by owner or operator.\",\"params\":{\"_amount\":\"Injection amount, the injection amount can be flexibly controlled.\",\"_duration\":\"The period duration.\",\"_withUpdate\":\"Whether call \\\"massUpdatePools\\\" operation.\"}},\"withdraw(address)\":{\"details\":\"Callable by owner.\",\"params\":{\"_token\":\"Token address.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor.\"},\"depositForMasterChefV2Pool(address)\":{\"notice\":\"Deposits a dummy token to `MASTER_CHEF` MCV2. It will transfer all the `dummyToken` in the tx sender address.\"},\"setOperator(address)\":{\"notice\":\"Set operator address.\"},\"upkeep(uint256,uint256,bool)\":{\"notice\":\"upkeep.\"},\"withdraw(address)\":{\"notice\":\"Withdraw unexpected tokens sent to the receiver, can also withdraw cake.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/masterchef-v3/contracts/receiver/MasterChefV3Receiver.sol\":\"MasterChefV3Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@beatx/=src/beatx/\",\":@horizondex/=src/horizondex/\",\":@matterlabs/=lib/aa-signature-checker/\",\":@merkle/=src/mproof/\",\":@metazeus/=src/metazeus/\",\":@mute/=src/mute-c4/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@oz4.8.1/=lib/oz4.8.1/\",\":@pancakeswap/=src/\",\":@protomerkle/=lib/protomerkle/\",\":@rabbithole/=src/rabbithole-c4/\",\":@solmate/=lib/solmate/src/\",\":@tokensales/=src/TokenSales/\",\":@uniswap/=lib/\",\":@zks/=src/zks/\",\":base64-sol/=lib/base64/\",\":base64/=lib/base64/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/oz4.9.2/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/oz4.9.2/contracts/\",\":oz4.8.1/=lib/oz4.8.1/\",\":oz4.9.2/=lib/oz4.9.2/\",\":solidity-lib/=lib/solidity-lib/contracts/\",\":v2-core/=lib/v2-core/contracts/\"]},\"sources\":{\"lib/oz4.8.1/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/oz4.8.1/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/oz4.8.1/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/oz4.8.1/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/oz4.8.1/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/oz4.8.1/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/masterchef-v3/contracts/interfaces/IMasterChefV2.sol\":{\"keccak256\":\"0x8eafaa4792b40a297825dee7acd50a07af5fa2154b80f47ca4b5f9cdf476af5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf0b02d9ac48c480ec302316412633f0eeb424d166bdffa0369439ed5aa21bb4\",\"dweb:/ipfs/QmWup93eqmiACRPpDn2G8cbh3GuWEeTco1W1aiN1yxsfCS\"]},\"src/masterchef-v3/contracts/interfaces/IMasterChefV3.sol\":{\"keccak256\":\"0x868cac7fb2a98ae223aa1dd1977d63505acab8bfb8b655860063c8dda468f600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b570997da0f77b41d6ce0a086f71d5fd830046b1d9b4c7faae8da7d67bd42e32\",\"dweb:/ipfs/QmPANyJjnEkMQMTe8VuVz12zjzseFyZVWfY8VRJPmEQwFG\"]},\"src/masterchef-v3/contracts/receiver/MasterChefV3Receiver.sol\":{\"keccak256\":\"0x207c38ab4293eead2c94e98c739c5c087e4a81641a02eb7db50e5a93f3d8d674\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d42a42a40c8e63f5f7b60f2f3a056c020c58fe6a40f5d7ed1f4579f2a26a90d2\",\"dweb:/ipfs/QmUUmoSNCaEeECguagwBGGyDC9QAh3GCbNMef8ZYb2mczP\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IMasterChefV2",
              "name": "_v2",
              "type": "address"
            },
            {
              "internalType": "contract IMasterChefV3",
              "name": "_v3",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "_cake",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_v2Pid",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotOwnerOrOperator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operatorAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "withUpdate",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Upkeep",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "Cake",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MasterChefV2",
          "outputs": [
            {
              "internalType": "contract IMasterChefV2",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MasterChefV3",
          "outputs": [
            {
              "internalType": "contract IMasterChefV3",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "V2_Pid",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_dummyToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositForMasterChefV2Pool"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operatorAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_duration",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_withUpdate",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upkeep"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_cake": "Cake token address.",
              "_v2": "MasterChef V2 address.",
              "_v2Pid": "The pool id of the dummy pool on the MCV2.",
              "_v3": "MasterChef V3 address."
            }
          },
          "depositForMasterChefV2Pool(address)": {
            "details": "Callable by owner.",
            "params": {
              "_dummyToken": "The address of the token to be deposited into MCV2."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setOperator(address)": {
            "details": "Callable by owner.",
            "params": {
              "_operatorAddress": "New operator address."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "upkeep(uint256,uint256,bool)": {
            "details": "Callable by owner or operator.",
            "params": {
              "_amount": "Injection amount, the injection amount can be flexibly controlled.",
              "_duration": "The period duration.",
              "_withUpdate": "Whether call \"massUpdatePools\" operation."
            }
          },
          "withdraw(address)": {
            "details": "Callable by owner.",
            "params": {
              "_token": "Token address."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Constructor."
          },
          "depositForMasterChefV2Pool(address)": {
            "notice": "Deposits a dummy token to `MASTER_CHEF` MCV2. It will transfer all the `dummyToken` in the tx sender address."
          },
          "setOperator(address)": {
            "notice": "Set operator address."
          },
          "upkeep(uint256,uint256,bool)": {
            "notice": "upkeep."
          },
          "withdraw(address)": {
            "notice": "Withdraw unexpected tokens sent to the receiver, can also withdraw cake."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@beatx/=src/beatx/",
        "@horizondex/=src/horizondex/",
        "@matterlabs/=lib/aa-signature-checker/",
        "@merkle/=src/mproof/",
        "@metazeus/=src/metazeus/",
        "@mute/=src/mute-c4/",
        "@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@oz4.8.1/=lib/oz4.8.1/",
        "@pancakeswap/=src/",
        "@protomerkle/=lib/protomerkle/",
        "@rabbithole/=src/rabbithole-c4/",
        "@solmate/=lib/solmate/src/",
        "@tokensales/=src/TokenSales/",
        "@uniswap/=lib/",
        "@zks/=src/zks/",
        "base64-sol/=lib/base64/",
        "base64/=lib/base64/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/oz4.9.2/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "openzeppelin/=lib/oz4.9.2/contracts/",
        "oz4.8.1/=lib/oz4.8.1/",
        "oz4.9.2/=lib/oz4.9.2/",
        "solidity-lib/=lib/solidity-lib/contracts/",
        "v2-core/=lib/v2-core/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/masterchef-v3/contracts/receiver/MasterChefV3Receiver.sol": "MasterChefV3Receiver"
      },
      "libraries": {}
    },
    "sources": {
      "lib/oz4.8.1/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/oz4.8.1/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/oz4.8.1/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/oz4.8.1/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/oz4.8.1/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/oz4.8.1/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/masterchef-v3/contracts/interfaces/IMasterChefV2.sol": {
        "keccak256": "0x8eafaa4792b40a297825dee7acd50a07af5fa2154b80f47ca4b5f9cdf476af5f",
        "urls": [
          "bzz-raw://cf0b02d9ac48c480ec302316412633f0eeb424d166bdffa0369439ed5aa21bb4",
          "dweb:/ipfs/QmWup93eqmiACRPpDn2G8cbh3GuWEeTco1W1aiN1yxsfCS"
        ],
        "license": "MIT"
      },
      "src/masterchef-v3/contracts/interfaces/IMasterChefV3.sol": {
        "keccak256": "0x868cac7fb2a98ae223aa1dd1977d63505acab8bfb8b655860063c8dda468f600",
        "urls": [
          "bzz-raw://b570997da0f77b41d6ce0a086f71d5fd830046b1d9b4c7faae8da7d67bd42e32",
          "dweb:/ipfs/QmPANyJjnEkMQMTe8VuVz12zjzseFyZVWfY8VRJPmEQwFG"
        ],
        "license": "MIT"
      },
      "src/masterchef-v3/contracts/receiver/MasterChefV3Receiver.sol": {
        "keccak256": "0x207c38ab4293eead2c94e98c739c5c087e4a81641a02eb7db50e5a93f3d8d674",
        "urls": [
          "bzz-raw://d42a42a40c8e63f5f7b60f2f3a056c020c58fe6a40f5d7ed1f4579f2a26a90d2",
          "dweb:/ipfs/QmUUmoSNCaEeECguagwBGGyDC9QAh3GCbNMef8ZYb2mczP"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/masterchef-v3/contracts/receiver/MasterChefV3Receiver.sol",
    "id": 47826,
    "exportedSymbols": {
      "Address": [
        43899
      ],
      "Context": [
        43921
      ],
      "IERC20": [
        43136
      ],
      "IERC20Permit": [
        43172
      ],
      "IMasterChefV2": [
        47267
      ],
      "IMasterChefV3": [
        47289
      ],
      "MasterChefV3Receiver": [
        47825
      ],
      "Ownable": [
        43004
      ],
      "SafeERC20": [
        43453
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3865:45",
    "nodes": [
      {
        "id": 47498,
        "nodeType": "PragmaDirective",
        "src": "32:24:45",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 47499,
        "nodeType": "ImportDirective",
        "src": "57:47:45",
        "nodes": [],
        "absolutePath": "lib/oz4.8.1/contracts/access/Ownable.sol",
        "file": "@oz4.8.1/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47826,
        "sourceUnit": 43005,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47500,
        "nodeType": "ImportDirective",
        "src": "105:51:45",
        "nodes": [],
        "absolutePath": "lib/oz4.8.1/contracts/token/ERC20/IERC20.sol",
        "file": "@oz4.8.1/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47826,
        "sourceUnit": 43137,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47501,
        "nodeType": "ImportDirective",
        "src": "157:60:45",
        "nodes": [],
        "absolutePath": "lib/oz4.8.1/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@oz4.8.1/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47826,
        "sourceUnit": 43454,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47502,
        "nodeType": "ImportDirective",
        "src": "219:41:45",
        "nodes": [],
        "absolutePath": "src/masterchef-v3/contracts/interfaces/IMasterChefV3.sol",
        "file": "../interfaces/IMasterChefV3.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47826,
        "sourceUnit": 47290,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47503,
        "nodeType": "ImportDirective",
        "src": "261:41:45",
        "nodes": [],
        "absolutePath": "src/masterchef-v3/contracts/interfaces/IMasterChefV2.sol",
        "file": "../interfaces/IMasterChefV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47826,
        "sourceUnit": 47268,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47825,
        "nodeType": "ContractDefinition",
        "src": "304:3592:45",
        "nodes": [
          {
            "id": 47509,
            "nodeType": "UsingForDirective",
            "src": "351:27:45",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 47506,
              "name": "SafeERC20",
              "nameLocations": [
                "357:9:45"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43453,
              "src": "357:9:45"
            },
            "typeName": {
              "id": 47508,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47507,
                "name": "IERC20",
                "nameLocations": [
                  "371:6:45"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 43136,
                "src": "371:6:45"
              },
              "referencedDeclaration": 43136,
              "src": "371:6:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$43136",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 47512,
            "nodeType": "VariableDeclaration",
            "src": "384:28:45",
            "nodes": [],
            "constant": false,
            "functionSelector": "60911f2a",
            "mutability": "immutable",
            "name": "Cake",
            "nameLocation": "408:4:45",
            "scope": 47825,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$43136",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 47511,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47510,
                "name": "IERC20",
                "nameLocations": [
                  "384:6:45"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 43136,
                "src": "384:6:45"
              },
              "referencedDeclaration": 43136,
              "src": "384:6:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$43136",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47515,
            "nodeType": "VariableDeclaration",
            "src": "418:43:45",
            "nodes": [],
            "constant": false,
            "functionSelector": "e5653aa1",
            "mutability": "immutable",
            "name": "MasterChefV2",
            "nameLocation": "449:12:45",
            "scope": 47825,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMasterChefV2_$47267",
              "typeString": "contract IMasterChefV2"
            },
            "typeName": {
              "id": 47514,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47513,
                "name": "IMasterChefV2",
                "nameLocations": [
                  "418:13:45"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47267,
                "src": "418:13:45"
              },
              "referencedDeclaration": 47267,
              "src": "418:13:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMasterChefV2_$47267",
                "typeString": "contract IMasterChefV2"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47517,
            "nodeType": "VariableDeclaration",
            "src": "467:31:45",
            "nodes": [],
            "constant": false,
            "functionSelector": "4d88ad79",
            "mutability": "immutable",
            "name": "V2_Pid",
            "nameLocation": "492:6:45",
            "scope": 47825,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 47516,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "467:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47520,
            "nodeType": "VariableDeclaration",
            "src": "504:43:45",
            "nodes": [],
            "constant": false,
            "functionSelector": "1ad8c1e4",
            "mutability": "immutable",
            "name": "MasterChefV3",
            "nameLocation": "535:12:45",
            "scope": 47825,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
              "typeString": "contract IMasterChefV3"
            },
            "typeName": {
              "id": 47519,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47518,
                "name": "IMasterChefV3",
                "nameLocations": [
                  "504:13:45"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47289,
                "src": "504:13:45"
              },
              "referencedDeclaration": 47289,
              "src": "504:13:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
                "typeString": "contract IMasterChefV3"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47522,
            "nodeType": "VariableDeclaration",
            "src": "554:30:45",
            "nodes": [],
            "constant": false,
            "functionSelector": "127effb2",
            "mutability": "mutable",
            "name": "operatorAddress",
            "nameLocation": "569:15:45",
            "scope": 47825,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47521,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "554:7:45",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47524,
            "nodeType": "ErrorDefinition",
            "src": "591:27:45",
            "nodes": [],
            "errorSelector": "98f76d0e",
            "name": "NotOwnerOrOperator",
            "nameLocation": "597:18:45",
            "parameters": {
              "id": 47523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "615:2:45"
            }
          },
          {
            "id": 47526,
            "nodeType": "ErrorDefinition",
            "src": "623:20:45",
            "nodes": [],
            "errorSelector": "d92e233d",
            "name": "ZeroAddress",
            "nameLocation": "629:11:45",
            "parameters": {
              "id": 47525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "640:2:45"
            }
          },
          {
            "id": 47528,
            "nodeType": "ErrorDefinition",
            "src": "648:18:45",
            "nodes": [],
            "errorSelector": "c2caa2a6",
            "name": "NoBalance",
            "nameLocation": "654:9:45",
            "parameters": {
              "id": 47527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "663:2:45"
            }
          },
          {
            "id": 47538,
            "nodeType": "EventDefinition",
            "src": "672:85:45",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "dcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7",
            "name": "Deposit",
            "nameLocation": "678:7:45",
            "parameters": {
              "id": 47537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47530,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "702:4:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47538,
                  "src": "686:20:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47529,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47532,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "724:2:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47538,
                  "src": "708:18:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47534,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "736:6:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47538,
                  "src": "728:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47536,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pid",
                  "nameLocation": "752:3:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47538,
                  "src": "744:11:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47535,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "685:71:45"
            }
          },
          {
            "id": 47542,
            "nodeType": "EventDefinition",
            "src": "762:51:45",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "da12ee837e6978172aaf54b16145ffe08414fd8710092ef033c71b8eb6ec189a",
            "name": "NewOperator",
            "nameLocation": "768:11:45",
            "parameters": {
              "id": 47541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47540,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operatorAddress",
                  "nameLocation": "796:15:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47542,
                  "src": "780:31:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "779:33:45"
            }
          },
          {
            "id": 47550,
            "nodeType": "EventDefinition",
            "src": "818:66:45",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "9bc0a7d1ea34f5c0b59023cff769f5d2cc8860bf24be25254ce420e658d48a7c",
            "name": "Upkeep",
            "nameLocation": "824:6:45",
            "parameters": {
              "id": 47549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47544,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "847:2:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47550,
                  "src": "831:18:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "831:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47546,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "859:6:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47550,
                  "src": "851:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "851:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47548,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withUpdate",
                  "nameLocation": "872:10:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47550,
                  "src": "867:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 47547,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "867:4:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "830:53:45"
            }
          },
          {
            "id": 47558,
            "nodeType": "EventDefinition",
            "src": "889:74:45",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb",
            "name": "Withdraw",
            "nameLocation": "895:8:45",
            "parameters": {
              "id": 47557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47552,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "920:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47558,
                  "src": "904:21:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47551,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "904:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47554,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "943:2:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47558,
                  "src": "927:18:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47553,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47556,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "955:6:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47558,
                  "src": "947:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "903:59:45"
            }
          },
          {
            "id": 47576,
            "nodeType": "ModifierDefinition",
            "src": "969:146:45",
            "nodes": [],
            "body": {
              "id": 47575,
              "nodeType": "Block",
              "src": "1000:115:45",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 47569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 47563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 47560,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1014:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1018:6:45",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1014:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 47562,
                        "name": "operatorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47522,
                        "src": "1028:15:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1014:29:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 47568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 47564,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1047:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1051:6:45",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1047:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 47566,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42932,
                          "src": "1061:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 47567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1061:7:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1047:21:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1014:54:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47573,
                  "nodeType": "IfStatement",
                  "src": "1010:87:45",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47570,
                        "name": "NotOwnerOrOperator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47524,
                        "src": "1077:18:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1077:20:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47572,
                    "nodeType": "RevertStatement",
                    "src": "1070:27:45"
                  }
                },
                {
                  "id": 47574,
                  "nodeType": "PlaceholderStatement",
                  "src": "1107:1:45"
                }
              ]
            },
            "name": "onlyOwnerOrOperator",
            "nameLocation": "978:19:45",
            "parameters": {
              "id": 47559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "997:2:45"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 47622,
            "nodeType": "FunctionDefinition",
            "src": "1340:250:45",
            "nodes": [],
            "body": {
              "id": 47621,
              "nodeType": "Block",
              "src": "1420:170:45",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 47593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47591,
                      "name": "MasterChefV2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47515,
                      "src": "1430:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMasterChefV2_$47267",
                        "typeString": "contract IMasterChefV2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47592,
                      "name": "_v2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47580,
                      "src": "1445:3:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMasterChefV2_$47267",
                        "typeString": "contract IMasterChefV2"
                      }
                    },
                    "src": "1430:18:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMasterChefV2_$47267",
                      "typeString": "contract IMasterChefV2"
                    }
                  },
                  "id": 47594,
                  "nodeType": "ExpressionStatement",
                  "src": "1430:18:45"
                },
                {
                  "expression": {
                    "id": 47597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47595,
                      "name": "MasterChefV3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47520,
                      "src": "1458:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
                        "typeString": "contract IMasterChefV3"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47596,
                      "name": "_v3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47583,
                      "src": "1473:3:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
                        "typeString": "contract IMasterChefV3"
                      }
                    },
                    "src": "1458:18:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
                      "typeString": "contract IMasterChefV3"
                    }
                  },
                  "id": 47598,
                  "nodeType": "ExpressionStatement",
                  "src": "1458:18:45"
                },
                {
                  "expression": {
                    "id": 47601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47599,
                      "name": "Cake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47512,
                      "src": "1486:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$43136",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47600,
                      "name": "_cake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47586,
                      "src": "1493:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$43136",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1486:12:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$43136",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 47602,
                  "nodeType": "ExpressionStatement",
                  "src": "1486:12:45"
                },
                {
                  "expression": {
                    "id": 47605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47603,
                      "name": "V2_Pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47517,
                      "src": "1508:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47604,
                      "name": "_v2Pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47588,
                      "src": "1517:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1508:15:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47606,
                  "nodeType": "ExpressionStatement",
                  "src": "1508:15:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47612,
                            "name": "_v3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47583,
                            "src": "1559:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
                              "typeString": "contract IMasterChefV3"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
                              "typeString": "contract IMasterChefV3"
                            }
                          ],
                          "id": 47611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1551:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47610,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1551:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1551:12:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 47616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1570:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 47615,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1570:7:45",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 47614,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1565:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 47617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1565:13:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 47618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1579:3:45",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1565:17:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 47607,
                        "name": "Cake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47512,
                        "src": "1534:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$43136",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 47609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1539:11:45",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43274,
                      "src": "1534:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$43136_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$43136_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 47619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1534:49:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47620,
                  "nodeType": "ExpressionStatement",
                  "src": "1534:49:45"
                }
              ]
            },
            "documentation": {
              "id": 47577,
              "nodeType": "StructuredDocumentation",
              "src": "1121:214:45",
              "text": "@notice Constructor.\n @param _v2 MasterChef V2 address.\n @param _v3 MasterChef V3 address.\n @param _cake Cake token address.\n @param _v2Pid The pool id of the dummy pool on the MCV2."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 47589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47580,
                  "mutability": "mutable",
                  "name": "_v2",
                  "nameLocation": "1366:3:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47622,
                  "src": "1352:17:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMasterChefV2_$47267",
                    "typeString": "contract IMasterChefV2"
                  },
                  "typeName": {
                    "id": 47579,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47578,
                      "name": "IMasterChefV2",
                      "nameLocations": [
                        "1352:13:45"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47267,
                      "src": "1352:13:45"
                    },
                    "referencedDeclaration": 47267,
                    "src": "1352:13:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMasterChefV2_$47267",
                      "typeString": "contract IMasterChefV2"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47583,
                  "mutability": "mutable",
                  "name": "_v3",
                  "nameLocation": "1385:3:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47622,
                  "src": "1371:17:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
                    "typeString": "contract IMasterChefV3"
                  },
                  "typeName": {
                    "id": 47582,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47581,
                      "name": "IMasterChefV3",
                      "nameLocations": [
                        "1371:13:45"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47289,
                      "src": "1371:13:45"
                    },
                    "referencedDeclaration": 47289,
                    "src": "1371:13:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
                      "typeString": "contract IMasterChefV3"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47586,
                  "mutability": "mutable",
                  "name": "_cake",
                  "nameLocation": "1397:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47622,
                  "src": "1390:12:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$43136",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 47585,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47584,
                      "name": "IERC20",
                      "nameLocations": [
                        "1390:6:45"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43136,
                      "src": "1390:6:45"
                    },
                    "referencedDeclaration": 43136,
                    "src": "1390:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$43136",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47588,
                  "mutability": "mutable",
                  "name": "_v2Pid",
                  "nameLocation": "1412:6:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47622,
                  "src": "1404:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47587,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1404:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1351:68:45"
            },
            "returnParameters": {
              "id": 47590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1420:0:45"
            },
            "scope": 47825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 47687,
            "nodeType": "FunctionDefinition",
            "src": "1833:445:45",
            "nodes": [],
            "body": {
              "id": 47686,
              "nodeType": "Block",
              "src": "1908:370:45",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    47632
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 47632,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "1926:7:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 47686,
                      "src": "1918:15:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 47631,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1918:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 47638,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 47635,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1958:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1962:6:45",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1958:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 47633,
                        "name": "_dummyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47626,
                        "src": "1936:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$43136",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 47634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1948:9:45",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43093,
                      "src": "1936:21:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 47637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1936:33:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1918:51:45"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 47641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47639,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47632,
                      "src": "1983:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 47640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1994:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1983:12:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47645,
                  "nodeType": "IfStatement",
                  "src": "1979:36:45",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47642,
                        "name": "NoBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47528,
                        "src": "2004:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2004:11:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47644,
                    "nodeType": "RevertStatement",
                    "src": "1997:18:45"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 47649,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2054:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2058:6:45",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2054:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 47653,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2074:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterChefV3Receiver_$47825",
                              "typeString": "contract MasterChefV3Receiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterChefV3Receiver_$47825",
                              "typeString": "contract MasterChefV3Receiver"
                            }
                          ],
                          "id": 47652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2066:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47651,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2066:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2066:13:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47655,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47632,
                        "src": "2081:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 47646,
                        "name": "_dummyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47626,
                        "src": "2025:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$43136",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 47648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2037:16:45",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43230,
                      "src": "2025:28:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$43136_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$43136_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 47656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2025:64:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47657,
                  "nodeType": "ExpressionStatement",
                  "src": "2025:64:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47663,
                            "name": "MasterChefV2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47515,
                            "src": "2127:12:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMasterChefV2_$47267",
                              "typeString": "contract IMasterChefV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMasterChefV2_$47267",
                              "typeString": "contract IMasterChefV2"
                            }
                          ],
                          "id": 47662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2119:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47661,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2119:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2119:21:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47665,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47632,
                        "src": "2142:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 47658,
                        "name": "_dummyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47626,
                        "src": "2099:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$43136",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 47660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2111:7:45",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43123,
                      "src": "2099:19:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 47666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2099:51:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47667,
                  "nodeType": "ExpressionStatement",
                  "src": "2099:51:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47671,
                        "name": "V2_Pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47517,
                        "src": "2181:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 47672,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47632,
                        "src": "2189:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 47668,
                        "name": "MasterChefV2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47515,
                        "src": "2160:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMasterChefV2_$47267",
                          "typeString": "contract IMasterChefV2"
                        }
                      },
                      "id": 47670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2173:7:45",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47223,
                      "src": "2160:20:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 47673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2160:37:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47674,
                  "nodeType": "ExpressionStatement",
                  "src": "2160:37:45"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 47676,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2220:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2224:6:45",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2220:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 47680,
                            "name": "MasterChefV2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47515,
                            "src": "2240:12:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMasterChefV2_$47267",
                              "typeString": "contract IMasterChefV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMasterChefV2_$47267",
                              "typeString": "contract IMasterChefV2"
                            }
                          ],
                          "id": 47679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2232:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47678,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2232:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2232:21:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47682,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47632,
                        "src": "2255:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 47683,
                        "name": "V2_Pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47517,
                        "src": "2264:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 47675,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47538,
                      "src": "2212:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 47684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2212:59:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47685,
                  "nodeType": "EmitStatement",
                  "src": "2207:64:45"
                }
              ]
            },
            "documentation": {
              "id": 47623,
              "nodeType": "StructuredDocumentation",
              "src": "1596:232:45",
              "text": "@notice Deposits a dummy token to `MASTER_CHEF` MCV2. It will transfer all the `dummyToken` in the tx sender address.\n @dev Callable by owner.\n @param _dummyToken The address of the token to be deposited into MCV2."
            },
            "functionSelector": "9d9e97d9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 47629,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47628,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1898:9:45"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42923,
                  "src": "1898:9:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "1898:9:45"
              }
            ],
            "name": "depositForMasterChefV2Pool",
            "nameLocation": "1842:26:45",
            "parameters": {
              "id": 47627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47626,
                  "mutability": "mutable",
                  "name": "_dummyToken",
                  "nameLocation": "1876:11:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47687,
                  "src": "1869:18:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$43136",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 47625,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47624,
                      "name": "IERC20",
                      "nameLocations": [
                        "1869:6:45"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43136,
                      "src": "1869:6:45"
                    },
                    "referencedDeclaration": 43136,
                    "src": "1869:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$43136",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1868:20:45"
            },
            "returnParameters": {
              "id": 47630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1908:0:45"
            },
            "scope": 47825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47699,
            "nodeType": "FunctionDefinition",
            "src": "2348:83:45",
            "nodes": [],
            "body": {
              "id": 47698,
              "nodeType": "Block",
              "src": "2382:49:45",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47694,
                        "name": "V2_Pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47517,
                        "src": "2414:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 47695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2422:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 47691,
                        "name": "MasterChefV2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47515,
                        "src": "2392:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMasterChefV2_$47267",
                          "typeString": "contract IMasterChefV2"
                        }
                      },
                      "id": 47693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2405:8:45",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47230,
                      "src": "2392:21:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 47696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2392:32:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47697,
                  "nodeType": "ExpressionStatement",
                  "src": "2392:32:45"
                }
              ]
            },
            "documentation": {
              "id": 47688,
              "nodeType": "StructuredDocumentation",
              "src": "2284:59:45",
              "text": "@notice Harvest pending CAKE tokens from MasterChef V2."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "harvestFromV2",
            "nameLocation": "2357:13:45",
            "parameters": {
              "id": 47689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2370:2:45"
            },
            "returnParameters": {
              "id": 47690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2382:0:45"
            },
            "scope": 47825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 47759,
            "nodeType": "FunctionDefinition",
            "src": "2710:437:45",
            "nodes": [],
            "body": {
              "id": 47758,
              "nodeType": "Block",
              "src": "2809:338:45",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 47711,
                      "name": "harvestFromV2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47699,
                      "src": "2819:13:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 47712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2819:15:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47713,
                  "nodeType": "ExpressionStatement",
                  "src": "2819:15:45"
                },
                {
                  "assignments": [
                    47715
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 47715,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "2852:6:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 47758,
                      "src": "2844:14:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 47714,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2844:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 47717,
                  "initialValue": {
                    "id": 47716,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47702,
                    "src": "2861:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2844:24:45"
                },
                {
                  "assignments": [
                    47719
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 47719,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "2886:7:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 47758,
                      "src": "2878:15:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 47718,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2878:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 47727,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47724,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2919:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterChefV3Receiver_$47825",
                              "typeString": "contract MasterChefV3Receiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterChefV3Receiver_$47825",
                              "typeString": "contract MasterChefV3Receiver"
                            }
                          ],
                          "id": 47723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2911:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47722,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2911:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2911:13:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 47720,
                        "name": "Cake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47512,
                        "src": "2896:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$43136",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 47721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2901:9:45",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43093,
                      "src": "2896:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 47726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2896:29:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2878:47:45"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 47734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 47730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 47728,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47702,
                        "src": "2939:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 47729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2950:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2939:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 47733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 47731,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47702,
                        "src": "2955:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 47732,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47719,
                        "src": "2965:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2955:17:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2939:33:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47740,
                  "nodeType": "IfStatement",
                  "src": "2935:80:45",
                  "trueBody": {
                    "id": 47739,
                    "nodeType": "Block",
                    "src": "2974:41:45",
                    "statements": [
                      {
                        "expression": {
                          "id": 47737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 47735,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47715,
                            "src": "2988:6:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 47736,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47719,
                            "src": "2997:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2988:16:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 47738,
                        "nodeType": "ExpressionStatement",
                        "src": "2988:16:45"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47744,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47715,
                        "src": "3044:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 47745,
                        "name": "_duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47704,
                        "src": "3052:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 47746,
                        "name": "_withUpdate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47706,
                        "src": "3063:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 47741,
                        "name": "MasterChefV3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47520,
                        "src": "3024:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
                          "typeString": "contract IMasterChefV3"
                        }
                      },
                      "id": 47743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3037:6:45",
                      "memberName": "upkeep",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47288,
                      "src": "3024:19:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,uint256,bool) external"
                      }
                    },
                    "id": 47747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3024:51:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47748,
                  "nodeType": "ExpressionStatement",
                  "src": "3024:51:45"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47752,
                            "name": "MasterChefV3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47520,
                            "src": "3105:12:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
                              "typeString": "contract IMasterChefV3"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMasterChefV3_$47289",
                              "typeString": "contract IMasterChefV3"
                            }
                          ],
                          "id": 47751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3097:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47750,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3097:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3097:21:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47754,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47715,
                        "src": "3120:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 47755,
                        "name": "_withUpdate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47706,
                        "src": "3128:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 47749,
                      "name": "Upkeep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47550,
                      "src": "3090:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,bool)"
                      }
                    },
                    "id": 47756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3090:50:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47757,
                  "nodeType": "EmitStatement",
                  "src": "3085:55:45"
                }
              ]
            },
            "documentation": {
              "id": 47700,
              "nodeType": "StructuredDocumentation",
              "src": "2437:268:45",
              "text": "@notice upkeep.\n @dev Callable by owner or operator.\n @param _amount Injection amount, the injection amount can be flexibly controlled.\n @param _duration The period duration.\n @param _withUpdate Whether call \"massUpdatePools\" operation."
            },
            "functionSelector": "0ce5d4cc",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 47709,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47708,
                  "name": "onlyOwnerOrOperator",
                  "nameLocations": [
                    "2789:19:45"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47576,
                  "src": "2789:19:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "2789:19:45"
              }
            ],
            "name": "upkeep",
            "nameLocation": "2719:6:45",
            "parameters": {
              "id": 47707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47702,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2734:7:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47759,
                  "src": "2726:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47701,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2726:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47704,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nameLocation": "2751:9:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47759,
                  "src": "2743:17:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47703,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2743:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47706,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nameLocation": "2767:11:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47759,
                  "src": "2762:16:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 47705,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2762:4:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2725:54:45"
            },
            "returnParameters": {
              "id": 47710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2809:0:45"
            },
            "scope": 47825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47786,
            "nodeType": "FunctionDefinition",
            "src": "3277:227:45",
            "nodes": [],
            "body": {
              "id": 47785,
              "nodeType": "Block",
              "src": "3343:161:45",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 47772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47767,
                      "name": "_operatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47762,
                      "src": "3357:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 47770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3385:1:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 47769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3377:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 47768,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3377:7:45",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 47771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3377:10:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3357:30:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47776,
                  "nodeType": "IfStatement",
                  "src": "3353:56:45",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47773,
                        "name": "ZeroAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47526,
                        "src": "3396:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3396:13:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47775,
                    "nodeType": "RevertStatement",
                    "src": "3389:20:45"
                  }
                },
                {
                  "expression": {
                    "id": 47779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47777,
                      "name": "operatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47522,
                      "src": "3419:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47778,
                      "name": "_operatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47762,
                      "src": "3437:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3419:34:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 47780,
                  "nodeType": "ExpressionStatement",
                  "src": "3419:34:45"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 47782,
                        "name": "_operatorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47762,
                        "src": "3480:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 47781,
                      "name": "NewOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47542,
                      "src": "3468:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 47783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3468:29:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47784,
                  "nodeType": "EmitStatement",
                  "src": "3463:34:45"
                }
              ]
            },
            "documentation": {
              "id": 47760,
              "nodeType": "StructuredDocumentation",
              "src": "3153:119:45",
              "text": "@notice Set operator address.\n @dev Callable by owner.\n @param _operatorAddress New operator address."
            },
            "functionSelector": "b3ab15fb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 47765,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47764,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3333:9:45"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42923,
                  "src": "3333:9:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "3333:9:45"
              }
            ],
            "name": "setOperator",
            "nameLocation": "3286:11:45",
            "parameters": {
              "id": 47763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47762,
                  "mutability": "mutable",
                  "name": "_operatorAddress",
                  "nameLocation": "3306:16:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47786,
                  "src": "3298:24:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3298:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3297:26:45"
            },
            "returnParameters": {
              "id": 47766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3343:0:45"
            },
            "scope": 47825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47824,
            "nodeType": "FunctionDefinition",
            "src": "3668:226:45",
            "nodes": [],
            "body": {
              "id": 47823,
              "nodeType": "Block",
              "src": "3720:174:45",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    47796
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 47796,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "3738:6:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 47823,
                      "src": "3730:14:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 47795,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3730:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 47804,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47801,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3772:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterChefV3Receiver_$47825",
                              "typeString": "contract MasterChefV3Receiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterChefV3Receiver_$47825",
                              "typeString": "contract MasterChefV3Receiver"
                            }
                          ],
                          "id": 47800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3764:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47799,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3764:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3764:13:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 47797,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47790,
                        "src": "3747:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$43136",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 47798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3754:9:45",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43093,
                      "src": "3747:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 47803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3747:31:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3730:48:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 47808,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3808:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3812:6:45",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3808:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47810,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47796,
                        "src": "3820:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 47805,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47790,
                        "src": "3788:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$43136",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 47807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3795:12:45",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43204,
                      "src": "3788:19:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$43136_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$43136_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 47811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3788:39:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47812,
                  "nodeType": "ExpressionStatement",
                  "src": "3788:39:45"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47816,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47790,
                            "src": "3859:6:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$43136",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$43136",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 47815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3851:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47814,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3851:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3851:15:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 47818,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3868:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3872:6:45",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3868:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47820,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47796,
                        "src": "3880:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 47813,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47558,
                      "src": "3842:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 47821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3842:45:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47822,
                  "nodeType": "EmitStatement",
                  "src": "3837:50:45"
                }
              ]
            },
            "documentation": {
              "id": 47787,
              "nodeType": "StructuredDocumentation",
              "src": "3510:153:45",
              "text": "@notice Withdraw unexpected tokens sent to the receiver, can also withdraw cake.\n @dev Callable by owner.\n @param _token Token address."
            },
            "functionSelector": "51cff8d9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 47793,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47792,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3710:9:45"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42923,
                  "src": "3710:9:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "3710:9:45"
              }
            ],
            "name": "withdraw",
            "nameLocation": "3677:8:45",
            "parameters": {
              "id": 47791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47790,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3693:6:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47824,
                  "src": "3686:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$43136",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 47789,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47788,
                      "name": "IERC20",
                      "nameLocations": [
                        "3686:6:45"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43136,
                      "src": "3686:6:45"
                    },
                    "referencedDeclaration": 43136,
                    "src": "3686:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$43136",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3685:15:45"
            },
            "returnParameters": {
              "id": 47794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3720:0:45"
            },
            "scope": 47825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 47504,
              "name": "Ownable",
              "nameLocations": [
                "337:7:45"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43004,
              "src": "337:7:45"
            },
            "id": 47505,
            "nodeType": "InheritanceSpecifier",
            "src": "337:7:45"
          }
        ],
        "canonicalName": "MasterChefV3Receiver",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          47825,
          43004,
          43921
        ],
        "name": "MasterChefV3Receiver",
        "nameLocation": "313:20:45",
        "scope": 47826,
        "usedErrors": [
          47524,
          47526,
          47528
        ],
        "usedEvents": [
          42905,
          47538,
          47542,
          47550,
          47558
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 45
}